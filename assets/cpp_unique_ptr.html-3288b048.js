const n=JSON.parse('{"key":"v-617c5d0a","path":"/posts/Program_language/cpp/cpp_unique_ptr.html","title":"c++智能指针之unique_ptr","lang":"zh-CN","frontmatter":{"category":["C++"],"description":"c++智能指针之unique_ptr unique添加自定义删除器 添加函数指针作为删除器 #include &lt;iostream&gt; #include &lt;memory&gt; int main(int argc, const char* argv[]) { auto deleter = [](int* pNum) { std::cout &lt;&lt; \\"lambda deleter\\" &lt;&lt; std::endl; delete pNum; }; typedef void(*Delete)(int*); std::unique_ptr&lt;int, Delete&gt; upNum(new int, deleter); std::cout &lt;&lt; sizeof(upNum) &lt;&lt; std::endl; // 输出8+8=16（函数指针类型的大小也为8） return 0; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/cpp_unique_ptr.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"c++智能指针之unique_ptr"}],["meta",{"property":"og:description","content":"c++智能指针之unique_ptr unique添加自定义删除器 添加函数指针作为删除器 #include &lt;iostream&gt; #include &lt;memory&gt; int main(int argc, const char* argv[]) { auto deleter = [](int* pNum) { std::cout &lt;&lt; \\"lambda deleter\\" &lt;&lt; std::endl; delete pNum; }; typedef void(*Delete)(int*); std::unique_ptr&lt;int, Delete&gt; upNum(new int, deleter); std::cout &lt;&lt; sizeof(upNum) &lt;&lt; std::endl; // 输出8+8=16（函数指针类型的大小也为8） return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-06T03:01:39.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-06T03:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++智能指针之unique_ptr\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-06T03:01:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"unique添加自定义删除器","slug":"unique添加自定义删除器","link":"#unique添加自定义删除器","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1693969299000,"updatedTime":1693969299000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":2.83,"words":850},"filePathRelative":"posts/Program_language/cpp/cpp_unique_ptr.md","localizedDate":"2023年9月6日","excerpt":"<h1> c++智能指针之unique_ptr</h1>\\n<h2> unique添加自定义删除器</h2>\\n<ul>\\n<li>添加函数指针作为删除器</li>\\n</ul>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;memory&gt;</span></span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> argc<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">const</span> <span class=\\"token keyword\\">char</span><span class=\\"token operator\\">*</span> argv<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">auto</span> deleter <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">*</span> pNum<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"lambda deleter\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">delete</span> pNum<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">typedef</span> <span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>Delete<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>unique_ptr<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">,</span> Delete<span class=\\"token operator\\">&gt;</span> <span class=\\"token function\\">upNum</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">,</span> deleter<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>upNum<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 输出8+8=16（函数指针类型的大小也为8）</span>\\n\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
