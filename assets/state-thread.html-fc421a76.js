const e=JSON.parse('{"key":"v-34c281f1","path":"/posts/Linux/coroutine/state-thread/state-thread.html","title":"state-thread","lang":"zh-CN","frontmatter":{"description":"state-thread .S代表可以使用预处理 .s代表不适用预处理器 #elif defined(__amd64__) || defined(__x86_64__) /****************************************************************/ /* * Internal __jmp_buf layout */ #define JB_RBX 0 #define JB_RBP 1 #define JB_R12 2 #define JB_R13 3 #define JB_R14 4 #define JB_R15 5 #define JB_RSP 6 #define JB_PC 7 .file \\"md.S\\" .text /* _st_md_cxt_save(__jmp_buf env) */ .globl _st_md_cxt_save .type _st_md_cxt_save, @function .align 16 _st_md_cxt_save: /* * Save registers. */ movq %rbx, (JB_RBX*8)(%rdi) movq %rbp, (JB_RBP*8)(%rdi) movq %r12, (JB_R12*8)(%rdi) movq %r13, (JB_R13*8)(%rdi) movq %r14, (JB_R14*8)(%rdi) movq %r15, (JB_R15*8)(%rdi) /* Save SP */ leaq 8(%rsp), %rdx movq %rdx, (JB_RSP*8)(%rdi) /* Save PC we are returning to */ movq (%rsp), %rax movq %rax, (JB_PC*8)(%rdi) xorq %rax, %rax ret .size _st_md_cxt_save, .-_st_md_cxt_save","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/coroutine/state-thread/state-thread.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"state-thread"}],["meta",{"property":"og:description","content":"state-thread .S代表可以使用预处理 .s代表不适用预处理器 #elif defined(__amd64__) || defined(__x86_64__) /****************************************************************/ /* * Internal __jmp_buf layout */ #define JB_RBX 0 #define JB_RBP 1 #define JB_R12 2 #define JB_R13 3 #define JB_R14 4 #define JB_R15 5 #define JB_RSP 6 #define JB_PC 7 .file \\"md.S\\" .text /* _st_md_cxt_save(__jmp_buf env) */ .globl _st_md_cxt_save .type _st_md_cxt_save, @function .align 16 _st_md_cxt_save: /* * Save registers. */ movq %rbx, (JB_RBX*8)(%rdi) movq %rbp, (JB_RBP*8)(%rdi) movq %r12, (JB_R12*8)(%rdi) movq %r13, (JB_R13*8)(%rdi) movq %r14, (JB_R14*8)(%rdi) movq %r15, (JB_R15*8)(%rdi) /* Save SP */ leaq 8(%rsp), %rdx movq %rdx, (JB_RSP*8)(%rdi) /* Save PC we are returning to */ movq (%rsp), %rax movq %rax, (JB_PC*8)(%rdi) xorq %rax, %rax ret .size _st_md_cxt_save, .-_st_md_cxt_save"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-01T07:00:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-01T07:00:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"state-thread\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-01T07:00:42.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1711954842000,"updatedTime":1711954842000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"posts/Linux/coroutine/state-thread/state-thread.md","localizedDate":"2024年4月1日","excerpt":"<h1> state-thread</h1>\\n<p>.S代表可以使用预处理 .s代表不适用预处理器</p>\\n<div class=\\"language-x86asm line-numbers-mode\\" data-ext=\\"x86asm\\"><pre class=\\"language-x86asm\\"><code>#elif defined(__amd64__) || defined(__x86_64__)\\n\\n    /****************************************************************/\\n\\n    /*\\n     * Internal __jmp_buf layout\\n     */\\n    #define JB_RBX  0\\n    #define JB_RBP  1\\n    #define JB_R12  2\\n    #define JB_R13  3\\n    #define JB_R14  4\\n    #define JB_R15  5\\n    #define JB_RSP  6\\n    #define JB_PC   7\\n\\n    .file \\"md.S\\"\\n    .text\\n\\n    /* _st_md_cxt_save(__jmp_buf env) */\\n    .globl _st_md_cxt_save\\n        .type _st_md_cxt_save, @function\\n        .align 16\\n    _st_md_cxt_save:\\n        /*\\n         * Save registers.\\n         */\\n        movq %rbx, (JB_RBX*8)(%rdi)\\n        movq %rbp, (JB_RBP*8)(%rdi)\\n        movq %r12, (JB_R12*8)(%rdi)\\n        movq %r13, (JB_R13*8)(%rdi)\\n        movq %r14, (JB_R14*8)(%rdi)\\n        movq %r15, (JB_R15*8)(%rdi)\\n        /* Save SP */\\n        leaq 8(%rsp), %rdx\\n        movq %rdx, (JB_RSP*8)(%rdi)\\n        /* Save PC we are returning to */\\n        movq (%rsp), %rax\\n        movq %rax, (JB_PC*8)(%rdi)\\n        xorq %rax, %rax\\n        ret\\n    .size _st_md_cxt_save, .-_st_md_cxt_save\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
