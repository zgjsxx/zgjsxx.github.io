import{_ as i,V as t,W as c,X as e,Y as n}from"./framework-9a29aaa0.js";const a={},l=e("h1",{id:"effective-c-30-彻底了解inline的里里外外",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#effective-c-30-彻底了解inline的里里外外","aria-hidden":"true"},"#"),n(" effective c++ 30 彻底了解inline的里里外外")],-1),s=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),n(" 总结")],-1),o=e("ul",null,[e("li",null,"将大多数inlining限制在小型、被频繁调用的函数身上。这可使日后的调试过程和二进制升级更容易，也可使潜在的代码膨胀问题最小化，使程序的速度提升机会最大化。"),e("li",null,"不要只因为function templates出现在头文件，就将它们声明为inline。")],-1),r=[l,s,o];function d(f,_){return t(),c("div",null,r)}const u=i(a,[["render",d],["__file","effective-cpp-30.html.vue"]]);export{u as default};
