const e=JSON.parse('{"key":"v-f83c0be0","path":"/posts/Program_language/cpp/effective-cpp-28.html","title":"effective c++ 28 便面返回handles指向对象内部成分","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 28 便面返回handles指向对象内部成分 总结 避免返回handles(包括references、指针、迭代器)指向对象内部。遵守这个条款可增加封装性，帮助const成员函数的行为像一个const，并将发生虚吊号码牌的可能性降至最低。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-28.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 28 便面返回handles指向对象内部成分"}],["meta",{"property":"og:description","content":"effective c++ 28 便面返回handles指向对象内部成分 总结 避免返回handles(包括references、指针、迭代器)指向对象内部。遵守这个条款可增加封装性，帮助const成员函数的行为像一个const，并将发生虚吊号码牌的可能性降至最低。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T09:59:08.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-08T09:59:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 28 便面返回handles指向对象内部成分\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-08T09:59:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683539948000,"updatedTime":1683539948000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.3,"words":90},"filePathRelative":"posts/Program_language/cpp/effective-cpp-28.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective c++ 28 便面返回handles指向对象内部成分</h1>\\n<h2> 总结</h2>\\n<ul>\\n<li>避免返回handles(包括references、指针、迭代器)指向对象内部。遵守这个条款可增加封装性，帮助const成员函数的行为像一个const，并将发生虚吊号码牌的可能性降至最低。</li>\\n</ul>\\n","autoDesc":true}');export{e as data};
