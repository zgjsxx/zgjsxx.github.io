const e=JSON.parse('{"key":"v-541c5c44","path":"/posts/Linux/kernel/Linux-0.11/Linux-0.11-boot-head.html","title":"Linux-0.11 boot目录head.s详解","lang":"zh-CN","frontmatter":{"category":["Linux"],"tag":["Linux-0.11代码解读系列"],"description":"Linux-0.11 boot目录head.s详解 模块简介 在head.s中，操作系统主要做了如下几件事： 重新设置中断描述符和全局描述符 检查A20地址线是否开启 检查数学协处理器 初始化页表并开启分页 跳转到main函数执行 过程详解 重新设置IDT和GDT 在setup.s中我们已经设置过了IDT和GDT， 为什么还要再设置一遍？ 因为setup.s中设置的IDT和GDT后面会被覆盖，因此在head.S中会重新设置一遍。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/kernel/Linux-0.11/Linux-0.11-boot-head.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"Linux-0.11 boot目录head.s详解"}],["meta",{"property":"og:description","content":"Linux-0.11 boot目录head.s详解 模块简介 在head.s中，操作系统主要做了如下几件事： 重新设置中断描述符和全局描述符 检查A20地址线是否开启 检查数学协处理器 初始化页表并开启分页 跳转到main函数执行 过程详解 重新设置IDT和GDT 在setup.s中我们已经设置过了IDT和GDT， 为什么还要再设置一遍？ 因为setup.s中设置的IDT和GDT后面会被覆盖，因此在head.S中会重新设置一遍。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T04:12:12.000Z"}],["meta",{"property":"article:tag","content":"Linux-0.11代码解读系列"}],["meta",{"property":"article:modified_time","content":"2023-06-02T04:12:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux-0.11 boot目录head.s详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-02T04:12:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模块简介","slug":"模块简介","link":"#模块简介","children":[]},{"level":2,"title":"过程详解","slug":"过程详解","link":"#过程详解","children":[{"level":3,"title":"重新设置IDT和GDT","slug":"重新设置idt和gdt","link":"#重新设置idt和gdt","children":[]},{"level":3,"title":"检查A20地址线是否开启","slug":"检查a20地址线是否开启","link":"#检查a20地址线是否开启","children":[]},{"level":3,"title":"检查数学协处理器","slug":"检查数学协处理器","link":"#检查数学协处理器","children":[]},{"level":3,"title":"初始化页表并开启分页","slug":"初始化页表并开启分页","link":"#初始化页表并开启分页","children":[]},{"level":3,"title":"跳转到main函数执行","slug":"跳转到main函数执行","link":"#跳转到main函数执行","children":[]}]},{"level":2,"title":"Q & A","slug":"q-a","link":"#q-a","children":[{"level":3,"title":"setup_paging在建立页表时会将head.s的部分代码覆盖，怎么保证不会把正在执行的代码覆盖？","slug":"setup-paging在建立页表时会将head-s的部分代码覆盖-怎么保证不会把正在执行的代码覆盖","link":"#setup-paging在建立页表时会将head-s的部分代码覆盖-怎么保证不会把正在执行的代码覆盖","children":[]}]}],"git":{"createdTime":1680686630000,"updatedTime":1685679132000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":15}]},"readingTime":{"minutes":4.39,"words":1318},"filePathRelative":"posts/Linux/kernel/Linux-0.11/Linux-0.11-boot-head.md","localizedDate":"2023年4月5日","excerpt":"<h1> Linux-0.11 boot目录head.s详解</h1>\\n<h2> 模块简介</h2>\\n<p>在head.s中，操作系统主要做了如下几件事：</p>\\n<ul>\\n<li>重新设置中断描述符和全局描述符</li>\\n<li>检查A20地址线是否开启</li>\\n<li>检查数学协处理器</li>\\n<li>初始化页表并开启分页</li>\\n<li>跳转到main函数执行</li>\\n</ul>\\n<h2> 过程详解</h2>\\n<h3> 重新设置IDT和GDT</h3>\\n<p>在setup.s中我们已经设置过了IDT和GDT， 为什么还要再设置一遍？</p>\\n<p>因为setup.s中设置的IDT和GDT后面会被覆盖，因此在head.S中会重新设置一遍。</p>","autoDesc":true}');export{e as data};
