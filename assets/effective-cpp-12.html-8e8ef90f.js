import{_ as e,V as a,W as c,a0 as t}from"./framework-9a29aaa0.js";const i={},r=t('<h1 id="effective-c-12-复制对象时勿忘其每一个成分" tabindex="-1"><a class="header-anchor" href="#effective-c-12-复制对象时勿忘其每一个成分" aria-hidden="true">#</a> effective c++ 12 复制对象时勿忘其每一个成分</h1><p>本文也是主要讲解的是赋值构造函数需要复制应该复制的每一个成分，这里面最容易忘记复制的就是基类的成分。</p><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>copying函数应该确保复制&quot;对象内的所有成员变量&quot;以及&quot;所有base class成分&quot;。</li><li>不要尝试以一个copying 函数去实现另一个copying函数。应该将共同机能放进第三个函数中，并又两个copying函数共同调用。</li></ul>',5),n=[r];function o(h,s){return a(),c("div",null,n)}const f=e(i,[["render",o],["__file","effective-cpp-12.html.vue"]]);export{f as default};
