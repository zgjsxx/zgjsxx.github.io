import{_ as e,V as a,W as n,a0 as r}from"./framework-9a29aaa0.js";const s={},t=r('<h1 id="sofware-license" tabindex="-1"><a class="header-anchor" href="#sofware-license" aria-hidden="true">#</a> sofware license</h1><h2 id="gpl" tabindex="-1"><a class="header-anchor" href="#gpl" aria-hidden="true">#</a> GPL</h2><p>GPL最典型的例子就是Linux。</p><p>GPL协议的主要内容是只要在一个软件中使用(“使用&quot;指<strong>类库引用</strong>，<strong>修改后的代码</strong>或者<strong>衍生代码</strong>)GPL 协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。</p><p>由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。</p><p>在公司中开发商业软件要避开GPL license。</p><h2 id="lgpl" tabindex="-1"><a class="header-anchor" href="#lgpl" aria-hidden="true">#</a> LGPL</h2><p>和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL 允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。</p>',8),c=[t];function i(o,l){return a(),n("div",null,c)}const L=e(s,[["render",i],["__file","license.html.vue"]]);export{L as default};
