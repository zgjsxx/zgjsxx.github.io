const t=JSON.parse('{"key":"v-197fb5b5","path":"/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture22-instrucion-format.html","title":"第二十二讲 指令格式","lang":"zh-CN","frontmatter":{"category":["汇编语言"],"description":"第二十二讲 指令格式 MIPS32指令格式 我们先前研究指令流水线是提到过MIPS32。MIPS32使用固定长度的指令，每个指令32位。MIPS32存在三种不同的指令格式，但这三种指令格式都使用高6位作为操作码。 R指令格式 R 指令格式具有三个寄存器的字段（通常为两个源寄存器和一个目标寄存器），以及移位量（5 位）和函数（6 位），其它用于没有立即操作数的算术/按位指令。 Opcode = 000000 RS RT RD Sh.Amt Func 6bits 5 5 5 5 6","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture22-instrucion-format.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"第二十二讲 指令格式"}],["meta",{"property":"og:description","content":"第二十二讲 指令格式 MIPS32指令格式 我们先前研究指令流水线是提到过MIPS32。MIPS32使用固定长度的指令，每个指令32位。MIPS32存在三种不同的指令格式，但这三种指令格式都使用高6位作为操作码。 R指令格式 R 指令格式具有三个寄存器的字段（通常为两个源寄存器和一个目标寄存器），以及移位量（5 位）和函数（6 位），其它用于没有立即操作数的算术/按位指令。 Opcode = 000000 RS RT RD Sh.Amt Func 6bits 5 5 5 5 6"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-15T10:00:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-15T10:00:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第二十二讲 指令格式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-15T10:00:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"MIPS32指令格式","slug":"mips32指令格式","link":"#mips32指令格式","children":[{"level":3,"title":"R指令格式","slug":"r指令格式","link":"#r指令格式","children":[]},{"level":3,"title":"I指令格式","slug":"i指令格式","link":"#i指令格式","children":[]}]},{"level":2,"title":"x86-64操作码的格式","slug":"x86-64操作码的格式","link":"#x86-64操作码的格式","children":[{"level":3,"title":"前缀","slug":"前缀","link":"#前缀","children":[]}]}],"git":{"createdTime":1709629879000,"updatedTime":1710496805000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":3}]},"readingTime":{"minutes":3.31,"words":992},"filePathRelative":"posts/Program_language/Assembly_language/fullerton_CSci241/Lecture22-instrucion-format.md","localizedDate":"2024年3月5日","excerpt":"<h1> 第二十二讲 指令格式</h1>\\n<h2> MIPS32指令格式</h2>\\n<p>我们先前研究指令流水线是提到过<strong>MIPS32</strong>。<strong>MIPS32</strong>使用固定长度的指令，每个指令32位。MIPS32存在三种不同的指令格式，但这三种指令格式都使用高6位作为操作码。</p>\\n<h3> R指令格式</h3>\\n<p>R 指令格式具有三个寄存器的字段（通常为两个源寄存器和一个目标寄存器），以及移位量（5 位）和函数（6 位），其它用于没有立即操作数的算术/按位指令。</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Opcode = 000000</th>\\n<th>RS</th>\\n<th>RT</th>\\n<th>RD</th>\\n<th>Sh.Amt</th>\\n<th>Func</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>6bits</td>\\n<td>5</td>\\n<td>5</td>\\n<td>5</td>\\n<td>5</td>\\n<td>6</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
