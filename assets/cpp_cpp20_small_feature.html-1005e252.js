const t=JSON.parse('{"key":"v-28b49328","path":"/posts/Program_language/cpp/cpp_cpp20_small_feature.html","title":"c++20的新增的小的特性","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++"],"description":"c++20的新增的小的特性 char8_t UTF-8 字符 std::span 过去如果一个函数想接受无法确定数组长度的数组作为参数，那么一定需要声明两个参数：数组指针和长度： void set_data(int *arr, int len) {} int main() { int buf[128]{ 0 }; set_data(buf, 128); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/cpp_cpp20_small_feature.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"c++20的新增的小的特性"}],["meta",{"property":"og:description","content":"c++20的新增的小的特性 char8_t UTF-8 字符 std::span 过去如果一个函数想接受无法确定数组长度的数组作为参数，那么一定需要声明两个参数：数组指针和长度： void set_data(int *arr, int len) {} int main() { int buf[128]{ 0 }; set_data(buf, 128); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-12T10:08:36.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:modified_time","content":"2023-06-12T10:08:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++20的新增的小的特性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-12T10:08:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"char8_t","slug":"char8-t","link":"#char8-t","children":[]},{"level":2,"title":"std::span","slug":"std-span","link":"#std-span","children":[]},{"level":2,"title":"std::endian判断大小端","slug":"std-endian判断大小端","link":"#std-endian判断大小端","children":[]},{"level":2,"title":"std::source_location","slug":"std-source-location","link":"#std-source-location","children":[]},{"level":2,"title":"std::remove_cvref","slug":"std-remove-cvref","link":"#std-remove-cvref","children":[]},{"level":2,"title":"std::barrier","slug":"std-barrier","link":"#std-barrier","children":[]},{"level":2,"title":"std::latch","slug":"std-latch","link":"#std-latch","children":[]},{"level":2,"title":"std::counting_semaphore","slug":"std-counting-semaphore","link":"#std-counting-semaphore","children":[]},{"level":2,"title":"string::starts_with / ends_with","slug":"string-starts-with-ends-with","link":"#string-starts-with-ends-with","children":[]},{"level":2,"title":"std::size","slug":"std-size","link":"#std-size","children":[]},{"level":2,"title":"std::is_bounded_array_v和std::is_unbounded_array","slug":"std-is-bounded-array-v和std-is-unbounded-array","link":"#std-is-bounded-array-v和std-is-unbounded-array","children":[]},{"level":2,"title":"std::erase_if","slug":"std-erase-if","link":"#std-erase-if","children":[]},{"level":2,"title":"Mathematical constants","slug":"mathematical-constants","link":"#mathematical-constants","children":[]},{"level":2,"title":"std::midpoint","slug":"std-midpoint","link":"#std-midpoint","children":[]},{"level":2,"title":"std::lerp","slug":"std-lerp","link":"#std-lerp","children":[]}],"git":{"createdTime":1686210777000,"updatedTime":1686564516000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":3}]},"readingTime":{"minutes":4.95,"words":1484},"filePathRelative":"posts/Program_language/cpp/cpp_cpp20_small_feature.md","localizedDate":"2023年6月8日","excerpt":"<h1> c++20的新增的小的特性</h1>\\n<h2> char8_t</h2>\\n<p>UTF-8 字符</p>\\n<h2> std::span</h2>\\n<p>过去如果一个函数想接受无法确定数组长度的数组作为参数，那么一定需要声明两个参数：数组指针和长度：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">void</span> <span class=\\"token function\\">set_data</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span>arr<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> len<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> buf<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">128</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">{</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">set_data</span><span class=\\"token punctuation\\">(</span>buf<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">128</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
