import{_ as e,V as t,W as p,X as n,Y as s,$ as o,a0 as l,F as c}from"./framework-9a29aaa0.js";const i={},u=n("h1",{id:"mysql-8-0-33源码编译",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mysql-8-0-33源码编译","aria-hidden":"true"},"#"),s(" mysql 8.0.33源码编译")],-1),r=n("p",null,"由于想对mysql的行锁的实现进行一些研究，于是希望自己编译mysql的debug版本进行调试，本文用于记录编译的过程。",-1),d=n("h2",{id:"编译步骤",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#编译步骤","aria-hidden":"true"},"#"),s(" 编译步骤")],-1),k=n("p",null,"首先需要下载源码，mysql的源码在github上可以找到，这里选择8.0.33版本进行下载，下载地址为：",-1),m={href:"https://github.com/mysql/mysql-server/archive/refs/tags/mysql-8.0.33.tar.gz",target:"_blank",rel:"noopener noreferrer"},b=l(`<p>我这里使用的操作系统是rocky linux9，因为其工具链都相对较新。</p><p>接下来将使用cmake进行编译，编译之前需要安装一些依赖。</p><p>这里列举出了一些可能要安装的包，可能不全，可以根据报错提示去安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ gcc-toolset-12-binutils gcc-toolset-12-annobin-annocheck gcc-toolset-12-annobin-plugin-gcc <span class="token parameter variable">-y</span>

yum <span class="token function">install</span> openssl-devel <span class="token parameter variable">-y</span>

yum <span class="token function">install</span> ncurses-devel <span class="token parameter variable">-y</span>

dnf <span class="token parameter variable">--enablerepo</span><span class="token operator">=</span>devel <span class="token function">install</span> libtirpc-devel <span class="token parameter variable">-y</span> 

yum <span class="token function">install</span> rpcgen <span class="token parameter variable">-y</span>

yum <span class="token function">install</span> libudev-devel <span class="token parameter variable">-y</span>

yum <span class="token function">install</span> bison <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意<strong>bison</strong>依赖如果没有，只会有一个warning提示。但是这里是需要安装的，否则将会出现下面的错误：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CMake Error at sql/CMakeLists.txt:1294 <span class="token punctuation">(</span>MESSAGE<span class="token punctuation">)</span>:
  Cannot <span class="token function">find</span> /home/work/cpp_proj/mysql-server-mysql-8.0.33/sql/sql_yacc.h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完依赖项目之后，可以尝试使用cmake进行构建。执行make之后就等待就可以了，在我的虚拟机中，make步骤大约需要30min。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> build
<span class="token builtin class-name">cd</span> build
cmake <span class="token punctuation">..</span> <span class="token parameter variable">-DWITH_DEBUG</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-DDOWNLOAD_BOOST</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-DWITH_BOOST</span><span class="token operator">=</span>/home/work/cpp_proj/mysql-server-mysql-8.0.33/build/boost <span class="token punctuation">\\</span>
<span class="token parameter variable">-DCMAKE_INSTALL_PREFIX</span><span class="token operator">=</span>/home/work/cpp_proj/mysql-server-mysql-8.0.33/build/install <span class="token punctuation">\\</span>
<span class="token parameter variable">-DMYSQL_DATADIR</span><span class="token operator">=</span>/home/work/cpp_proj/mysql-server-mysql-8.0.33/build/install/data

<span class="token function">make</span> <span class="token parameter variable">-j8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直到输出了下面的语句后，代表编译成功完成了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_http_server
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_logging_eventlog
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_rest_mock_server
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_master_key_reader_writer
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_pidfile
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_rest_api_enable
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_sd_notify
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_rest_metadata_cache
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_component_rest_routing
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target rest_signal
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_integration_routing_direct
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_integration_routing_reuse
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_integration_routing_sharing
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_integration_routing_sharing_constrained_pools
<span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span> Built target routertest_integration_routing_sharing_restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查编译后的mysqld文件中是否有debug信息，可以使用readelf命令进行查看。从下面的输出可以看到，<strong>mysqld</strong>文件中拥有了调试符号。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># readelf -S mysqld|grep debug</span>
  <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> .debug_aranges    PROGBITS         0000000000000000  086bb4ac
  <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span> .debug_info       PROGBITS         0000000000000000  08f2606c
  <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> .debug_abbrev     PROGBITS         0000000000000000  1f73872e
  <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span> .debug_line       PROGBITS         0000000000000000  1ffdc331
  <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> .debug_str        PROGBITS         0000000000000000  21fdea2c
  <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span> .debug_line_str   PROGBITS         0000000000000000  2955deee
  <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span> .debug_rnglists   PROGBITS         0000000000000000  2959b809
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在下面的步骤中，将尝试运行mysql，并对其进行调试。</p><h2 id="运行mysql" tabindex="-1"><a class="header-anchor" href="#运行mysql" aria-hidden="true">#</a> 运行mysql</h2><p>mysql的server文件名是mysqld。如果直接使用mysqld运行可能会遇到下面的错误。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># ./mysqld</span>
<span class="token number">2023</span>-07-10T07:20:18.057441Z <span class="token number">0</span> <span class="token punctuation">[</span>System<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010116<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> /home/work/cpp_proj/mysql-server-mysql-8.0.33/build/runtime_output_directory/mysqld <span class="token punctuation">(</span>mysqld <span class="token number">8.0</span>.33-debug<span class="token punctuation">)</span> starting as process <span class="token number">82471</span>
<span class="token number">2023</span>-07-10T07:20:18.066237Z <span class="token number">0</span> <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010091<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Can&#39;t create <span class="token builtin class-name">test</span> <span class="token function">file</span> /home/work/cpp_proj/mysql-server-mysql-8.0.33/build/data/mysqld_tmp_file_case_insensitive_test.lower-test
<span class="token number">2023</span>-07-10T07:20:18.066251Z <span class="token number">0</span> <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010159<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Setting <span class="token assign-left variable">lower_case_table_names</span><span class="token operator">=</span><span class="token number">2</span> because <span class="token function">file</span> system <span class="token keyword">for</span> /home/work/cpp_proj/mysql-server-mysql-8.0.33/build/data/ is <span class="token keyword">case</span> insensitive
<span class="token number">2023</span>-07-10T07:20:18.067139Z <span class="token number">0</span> <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010123<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Fatal error: Please <span class="token builtin class-name">read</span> <span class="token string">&quot;Security&quot;</span> section of the manual to <span class="token function">find</span> out how to run mysqld as root<span class="token operator">!</span>
<span class="token number">2023</span>-07-10T07:20:18.067249Z <span class="token number">0</span> <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010119<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Aborting
<span class="token number">2023</span>-07-10T07:20:18.071351Z <span class="token number">0</span> <span class="token punctuation">[</span>System<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010910<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> /home/work/cpp_proj/mysql-server-mysql-8.0.33/build/runtime_output_directory/mysqld: Shutdown complete <span class="token punctuation">(</span>mysqld <span class="token number">8.0</span>.33-debug<span class="token punctuation">)</span>  Source distribution.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，mysql如果要使用root用户启动，需要增加<code>--user=root</code>，如下所示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./mysql <span class="token parameter variable">--user</span><span class="token operator">=</span>root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>除此以外，在运行之前可能需要初始化data目录，使用下面的语句可以完成初始化操作。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./mysqld <span class="token parameter variable">--initialize</span> <span class="token parameter variable">--console</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化的过程中，会打印出默认的root密码，这里记下来。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2023</span>-07-10T10:17:45.487502Z <span class="token number">0</span> <span class="token punctuation">[</span>System<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-013169<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> /home/work/cpp_proj/mysql-server-mysql-8.0.33/build/runtime_output_directory/mysqld <span class="token punctuation">(</span>mysqld <span class="token number">8.0</span>.33-debug<span class="token punctuation">)</span> initializing of server <span class="token keyword">in</span> progress as process <span class="token number">144794</span>
<span class="token number">2023</span>-07-10T10:17:45.502792Z <span class="token number">1</span> <span class="token punctuation">[</span>System<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-013576<span class="token punctuation">]</span> <span class="token punctuation">[</span>InnoDB<span class="token punctuation">]</span> InnoDB initialization has started.
<span class="token number">2023</span>-07-10T10:17:46.365687Z <span class="token number">1</span> <span class="token punctuation">[</span>System<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-013577<span class="token punctuation">]</span> <span class="token punctuation">[</span>InnoDB<span class="token punctuation">]</span> InnoDB initialization has ended.
<span class="token number">2023</span>-07-10T10:17:54.519035Z <span class="token number">6</span> <span class="token punctuation">[</span>Note<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010454<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> A temporary password is generated <span class="token keyword">for</span> root@localhost: Ywcl7uFuSy/f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初次登录时，可以使用该密码进行登录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./mysql <span class="token parameter variable">-uroot</span> -p<span class="token string">&#39;Ywcl7uFuSy/f&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初次登录后，可以使用<code>mysqladmin</code>对密码进行修改。</p><p><code>./mysqladmin -uroot -p&#39;Jxp)CLWqW9,-&#39; password 111111</code></p><p>到此位置，已经可以成功的启动mysql，下面尝试调试mysql。</p><h2 id="gdb-调试" tabindex="-1"><a class="header-anchor" href="#gdb-调试" aria-hidden="true">#</a> gdb 调试</h2><p>本节中尝试使用gdb对mysql进行调试。</p><p>在Inodb的行记录中，有一个字段是heap_no，占用 13 比特，表示当前记录在页面堆中的相对位置。其中0和1有特殊用途，因此页面中的第一条记录heap_no为2， 第二条记录heap_no为3，以此类推。</p><p>下面使用gdb进行验证这一点。</p><p>首先做一些初始化工作，建立一个demo的database，并且创建一张user_tbl的表，这个表比较简单，仅仅有两个字段，一个字段是user_id，一个字段是user_name。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>create database demo<span class="token punctuation">;</span>
CREATE TABLE IF NOT EXISTS <span class="token variable"><span class="token variable">\`</span>user_tbl<span class="token variable">\`</span></span><span class="token punctuation">(</span>
   <span class="token variable"><span class="token variable">\`</span>user_id<span class="token variable">\`</span></span> INT UNSIGNED AUTO_INCREMENT,
   <span class="token variable"><span class="token variable">\`</span>user_name<span class="token variable">\`</span></span> VARCHAR<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> NOT NULL,
   PRIMARY KEY <span class="token punctuation">(</span> <span class="token variable"><span class="token variable">\`</span>user_id<span class="token variable">\`</span></span> <span class="token punctuation">)</span>
<span class="token punctuation">)</span>ENGINE<span class="token operator">=</span>InnoDB DEFAULT <span class="token assign-left variable">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>
insert into user_tbl values<span class="token punctuation">(</span><span class="token number">1</span>,<span class="token string">&#39;zhangsan1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
insert into user_tbl values<span class="token punctuation">(</span><span class="token number">2</span>,<span class="token string">&#39;zhangsan2&#39;</span><span class="token punctuation">)</span>；

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果建表成功，此时表中应该有这样2条数据。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from user_tbl<span class="token punctuation">;</span>
+---------+-----------+
<span class="token operator">|</span> user_id <span class="token operator">|</span> user_name <span class="token operator">|</span>
+---------+-----------+
<span class="token operator">|</span>       <span class="token number">1</span> <span class="token operator">|</span> zhangsan1 <span class="token operator">|</span>
<span class="token operator">|</span>       <span class="token number">2</span> <span class="token operator">|</span> zhangsan1 <span class="token operator">|</span>
+---------+-----------+
<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候使用<code>gdb attach &lt;mysql_pid&gt;</code>附加到进程中。在lock_rec_lock方法上下一个断点。至于为什么在这个函数上下断点，无需理解，仅仅要知道后面打印的rec_lock变量中含有heap_no的值。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># gdb attach 27536</span>
For help, <span class="token builtin class-name">type</span> <span class="token string">&quot;help&quot;</span><span class="token builtin class-name">.</span>
Type <span class="token string">&quot;apropos word&quot;</span> to search <span class="token keyword">for</span> commands related to <span class="token string">&quot;word&quot;</span><span class="token punctuation">..</span>.
attach: No such <span class="token function">file</span> or directory.
Attaching to process <span class="token number">27536</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27545</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27546</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27547</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27548</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27549</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27550</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27551</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27552</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27553</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27554</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27556</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27557</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27558</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27559</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27560</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27561</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27564</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27565</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27566</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27573</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27574</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27575</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27576</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27577</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27578</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27579</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27583</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27584</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27585</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27586</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27587</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27588</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27595</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27596</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27597</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">27599</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">28275</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>New LWP <span class="token number">31905</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>Thread debugging using libthread_db enabled<span class="token punctuation">]</span>
Using <span class="token function">host</span> libthread_db library <span class="token string">&quot;/lib64/libthread_db.so.1&quot;</span><span class="token builtin class-name">.</span>
Missing separate debuginfos, use: dnf debuginfo-install glibc-2.34-28.el9_0.2.x86_64 libgcc-11.2.1-9.4.el9.x86_64 libstdc++-11.2.1-9.4.el9.x86_64 openssl-libs-3.0.7-16.el9_2.x86_64 sssd-client-2.6.2-4.el9_0.x86_64 zlib-1.2.11-31.el9_0.1.x86_64
<span class="token parameter variable">--Type</span> <span class="token operator">&lt;</span>RET<span class="token operator">&gt;</span> <span class="token keyword">for</span> more, q to quit, c to <span class="token builtin class-name">continue</span> without paging--
0x00007f7c9663eedf <span class="token keyword">in</span> poll <span class="token punctuation">(</span><span class="token punctuation">)</span> from /lib64/libc.so.6
<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span>
<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span> b lock0lock.cc:1736
Breakpoint <span class="token number">1</span> at 0x4d9f25f: <span class="token function">file</span> /home/work/cpp_proj/mysql-server-mysql-8.0.33/storage/innobase/lock/lock0lock.cc, line <span class="token number">1736</span>.
<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span> c
Continuing.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在另一个窗口的mysql客户端中，输入下面的update命令更新<code>user_id=2</code>的记录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>update user_tbl <span class="token builtin class-name">set</span> user_name <span class="token operator">=</span> <span class="token string">&#39;zhangsan1&#39;</span> where user_id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个时候gdb窗口会停在断点上，在gdb窗口中打印rec_lock的值。可以看到m_heap_no = 3，代表该页面中的第二条记录， 0和1有特殊用途，因此3代表第2条记录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>New Thread 0x7f7d284f6640 <span class="token punctuation">(</span>LWP <span class="token number">33651</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>Switching to Thread 0x7f7d284f6640 <span class="token punctuation">(</span>LWP <span class="token number">33651</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

Thread <span class="token number">39</span> <span class="token string">&quot;connection&quot;</span> hit Breakpoint <span class="token number">1</span>, lock_rec_lock_fast <span class="token punctuation">(</span>impl<span class="token operator">=</span>false, <span class="token assign-left variable">mode</span><span class="token operator">=</span><span class="token number">1027</span>, <span class="token assign-left variable">block</span><span class="token operator">=</span>0x7f7d4bb1ab30, <span class="token assign-left variable">heap_no</span><span class="token operator">=</span><span class="token number">3</span>,
    <span class="token assign-left variable">index</span><span class="token operator">=</span>0x7f7d40164188, <span class="token assign-left variable">thr</span><span class="token operator">=</span>0x7f7d400ff428<span class="token punctuation">)</span> at /home/work/cpp_proj/mysql-server-mysql-8.0.33/storage/innobase/lock/lock0lock.cc:1736
<span class="token number">1736</span>          trx_mutex_enter<span class="token punctuation">(</span>trx<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span> p rec_lock
<span class="token variable">$1</span> <span class="token operator">=</span> <span class="token punctuation">{</span>m_thr <span class="token operator">=</span> 0x0, m_trx <span class="token operator">=</span> 0x0, m_mode <span class="token operator">=</span> <span class="token number">1027</span>, m_size <span class="token operator">=</span> <span class="token number">9</span>, m_index <span class="token operator">=</span> 0x7f7d40164188, m_rec_id <span class="token operator">=</span> <span class="token punctuation">{</span>m_page_id <span class="token operator">=</span> <span class="token punctuation">{</span>m_space <span class="token operator">=</span> <span class="token number">3</span>,
      m_page_no <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">}</span>, m_heap_no <span class="token operator">=</span> <span class="token number">3</span>, m_hash_value <span class="token operator">=</span> <span class="token number">6610858507835779226</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span> c
Continuing.
<span class="token punctuation">[</span>Thread 0x7f7d286f8640 <span class="token punctuation">(</span>LWP <span class="token number">33266</span><span class="token punctuation">)</span> exited<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在另一个窗口的mysql客户端中，输入下面的update命令更新<code>user_id=1</code>的记录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>update user_tbl <span class="token builtin class-name">set</span> user_name <span class="token operator">=</span> <span class="token string">&#39;zhangsan1&#39;</span> where user_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个时候gdb窗口会停在断点上，在gdb窗口中打印rec_lock的值。可以看到m_heap_no = 2，代表该页面中的第二条记录， 0和1有特殊用途，因此2代表第1条记录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Thread <span class="token number">39</span> <span class="token string">&quot;connection&quot;</span> hit Breakpoint <span class="token number">1</span>, lock_rec_lock_fast <span class="token punctuation">(</span>impl<span class="token operator">=</span>false, <span class="token assign-left variable">mode</span><span class="token operator">=</span><span class="token number">1027</span>, <span class="token assign-left variable">block</span><span class="token operator">=</span>0x7f7d4bb1ab30, <span class="token assign-left variable">heap_no</span><span class="token operator">=</span><span class="token number">2</span>,
    <span class="token assign-left variable">index</span><span class="token operator">=</span>0x7f7d40164188, <span class="token assign-left variable">thr</span><span class="token operator">=</span>0x7f7d400ff428<span class="token punctuation">)</span> at /home/work/cpp_proj/mysql-server-mysql-8.0.33/storage/innobase/lock/lock0lock.cc:1736
<span class="token number">1736</span>          trx_mutex_enter<span class="token punctuation">(</span>trx<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span> p rec_lock
<span class="token variable">$2</span> <span class="token operator">=</span> <span class="token punctuation">{</span>m_thr <span class="token operator">=</span> 0x0, m_trx <span class="token operator">=</span> 0x0, m_mode <span class="token operator">=</span> <span class="token number">1027</span>, m_size <span class="token operator">=</span> <span class="token number">9</span>, m_index <span class="token operator">=</span> 0x7f7d40164188, m_rec_id <span class="token operator">=</span> <span class="token punctuation">{</span>m_page_id <span class="token operator">=</span> <span class="token punctuation">{</span>m_space <span class="token operator">=</span> <span class="token number">3</span>,
      m_page_no <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">}</span>, m_heap_no <span class="token operator">=</span> <span class="token number">2</span>, m_hash_value <span class="token operator">=</span> <span class="token number">6610858507835779226</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此为止，调试完毕，验证了heap_no的含义。该调试没有任何现实含义，仅仅是一个练手的记录。</p>`,46);function v(g,_){const a=c("ExternalLinkIcon");return t(),p("div",null,[u,r,d,k,n("p",null,[n("a",m,[s("https://github.com/mysql/mysql-server/archive/refs/tags/mysql-8.0.33.tar.gz"),o(a)])]),b])}const y=e(i,[["render",v],["__file","mysql_source_code_build.html.vue"]]);export{y as default};
