import{_ as s,V as a,W as n,a0 as e}from"./framework-9a29aaa0.js";const t={},p=e(`<h1 id="rb-tree" tabindex="-1"><a class="header-anchor" href="#rb-tree" aria-hidden="true">#</a> rb_tree</h1><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><h3 id="basic定义" tabindex="-1"><a class="header-anchor" href="#basic定义" aria-hidden="true">#</a> basic定义</h3><p>定义了node的颜色类型， 红色是false，黑色是false。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">typedef</span> <span class="token keyword">bool</span> rb_tree_color_type<span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">constexpr</span> rb_tree_color_type rb_tree_red   <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">constexpr</span> rb_tree_color_type rb_tree_black <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rb-tree-node" tabindex="-1"><a class="header-anchor" href="#rb-tree-node" aria-hidden="true">#</a> rb_tree_node</h3><p>rb_tree是由一个一个节点组成的，关于其节点的定义主要在两个模板类种，rb_tree_node_base和rb_tree_node。</p><p>rb_tree_node_base的数据部分如下所示, 其种包含了三个指针，分别指向父节点，左子节点和右子节点。除此以外，还包含了一个节点的颜色类型。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">T</span><span class="token operator">&gt;</span>
<span class="token keyword">struct</span> <span class="token class-name">rb_tree_node_base</span>
<span class="token punctuation">{</span>
    <span class="token keyword">typedef</span> rb_tree_color_type    color_type<span class="token punctuation">;</span>
    <span class="token keyword">typedef</span> rb_tree_node_base<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token operator">*</span> base_ptr<span class="token punctuation">;</span>
    <span class="token keyword">typedef</span> rb_tree_node<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token operator">*</span>      node_ptr<span class="token punctuation">;</span>

    base_ptr   parent<span class="token punctuation">;</span>  <span class="token comment">// 父节点</span>
    base_ptr   left<span class="token punctuation">;</span>    <span class="token comment">// 左子节点</span>
    base_ptr   right<span class="token punctuation">;</span>   <span class="token comment">// 右子节点</span>
    color_type color<span class="token punctuation">;</span>   <span class="token comment">// 节点颜色</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>rb_tree_node的定义就比较简单，其只有一个数据单元，就是节点的值。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">T</span><span class="token operator">&gt;</span>
<span class="token keyword">struct</span> <span class="token class-name">rb_tree_node</span> <span class="token operator">:</span><span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">rb_tree_node_base</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span></span>
<span class="token punctuation">{</span>
  <span class="token keyword">typedef</span> rb_tree_node_base<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token operator">*</span> base_ptr<span class="token punctuation">;</span>
  <span class="token keyword">typedef</span> rb_tree_node<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token operator">*</span>      node_ptr<span class="token punctuation">;</span>

  T value<span class="token punctuation">;</span>  <span class="token comment">// 节点值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[p];function r(c,l){return a(),n("div",null,o)}const i=s(t,[["render",r],["__file","rb_tree.html.vue"]]);export{i as default};
