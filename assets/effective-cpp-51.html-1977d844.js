const e=JSON.parse('{"key":"v-cdb31eb0","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-51.html","title":"effective c++ 51 编写new和delete时需固守常规","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 51 编写new和delete时需固守常规 总结 operator new应该内含一个无穷循环，并在其中尝试分配内存，如果它无法满足内存需求，就应该调用new-handler。它也应该有能力处理0 bytes申请。Class专属版本则还应该处理\\"比正确大小更大的(错误)申请\\"。 operator delete应该在收到null指针时不做任何事。Class专属版本则还应该处理\\"比正确大小更大的(错误)申请\\"。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-51.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 51 编写new和delete时需固守常规"}],["meta",{"property":"og:description","content":"effective c++ 51 编写new和delete时需固守常规 总结 operator new应该内含一个无穷循环，并在其中尝试分配内存，如果它无法满足内存需求，就应该调用new-handler。它也应该有能力处理0 bytes申请。Class专属版本则还应该处理\\"比正确大小更大的(错误)申请\\"。 operator delete应该在收到null指针时不做任何事。Class专属版本则还应该处理\\"比正确大小更大的(错误)申请\\"。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T09:30:25.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-15T09:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 51 编写new和delete时需固守常规\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-15T09:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1684143025000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":0.47,"words":141},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-51.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 51 编写new和delete时需固守常规</h1>\\n<h2> 总结</h2>\\n<ul>\\n<li>operator new应该内含一个无穷循环，并在其中尝试分配内存，如果它无法满足内存需求，就应该调用new-handler。它也应该有能力处理0 bytes申请。Class专属版本则还应该处理\\"比正确大小更大的(错误)申请\\"。</li>\\n<li>operator delete应该在收到null指针时不做任何事。Class专属版本则还应该处理\\"比正确大小更大的(错误)申请\\"。</li>\\n</ul>\\n","autoDesc":true}');export{e as data};
