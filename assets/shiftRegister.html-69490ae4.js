import{_ as a,V as t,W as e,X as s,Y as n,a0 as p}from"./framework-9a29aaa0.js";const l={},i=s("h1",{id:"移位寄存器简介",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#移位寄存器简介","aria-hidden":"true"},"#"),n(" 移位寄存器简介")],-1),c=s("p",null,[n("移位寄存器内的数据可以在"),s("strong",null,"移位脉冲"),n("（时钟信号）的作用下依次左移或右移。移位寄存器不仅可以存储数据，还可以用来实现数据的串并转换、分频，构成序列码发生器、序列码检测器，进行数值运算以及数据处理等，它也是数字系统中应用非常广泛的时序逻辑部件之一。")],-1),o=s("p",null,"4位右移位寄存器工作原理:",-1),u=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"A"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"+"),s("mn",null,"1")])]),s("mo",null,"="),s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"I"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"{Q}^{n+1}_{A}= {Q}^{n}_{I}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1478em","vertical-align":"-0.2935em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8542em"}},[s("span",{style:{top:"-2.4065em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A")])])]),s("span",{style:{top:"-3.1031em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2935em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9587em","vertical-align":"-0.2753em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-2.4247em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07847em"}},"I")])])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2753em"}},[s("span")])])])])])])])])],-1),r=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"B"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"+"),s("mn",null,"1")])]),s("mo",null,"="),s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"A"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"{Q}^{n+1}_{B}= {Q}^{n}_{A}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1478em","vertical-align":"-0.2935em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8542em"}},[s("span",{style:{top:"-2.4065em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B")])])]),s("span",{style:{top:"-3.1031em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2935em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9587em","vertical-align":"-0.2753em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-2.4247em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A")])])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2753em"}},[s("span")])])])])])])])])],-1),m=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"C"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"+"),s("mn",null,"1")])]),s("mo",null,"="),s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"B"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"{Q}^{n+1}_{C}= {Q}^{n}_{B}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1478em","vertical-align":"-0.2935em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8542em"}},[s("span",{style:{top:"-2.4065em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C")])])]),s("span",{style:{top:"-3.1031em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2935em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9587em","vertical-align":"-0.2753em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-2.4247em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B")])])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2753em"}},[s("span")])])])])])])])])],-1),d=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"D"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"+"),s("mn",null,"1")])]),s("mo",null,"="),s("msubsup",null,[s("mi",null,"Q"),s("mi",null,"C"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"{Q}^{n+1}_{D}= {Q}^{n}_{C}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1478em","vertical-align":"-0.2935em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8542em"}},[s("span",{style:{top:"-2.4065em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"D")])])]),s("span",{style:{top:"-3.1031em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2935em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9587em","vertical-align":"-0.2753em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-2.4247em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C")])])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2753em"}},[s("span")])])])])])])])])],-1),k=p(`<div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token keyword">module</span> register_right <span class="token punctuation">(</span>clk<span class="token punctuation">,</span> din<span class="token punctuation">,</span> dout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">input</span> clk<span class="token punctuation">;</span>
    <span class="token keyword">input</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span> din<span class="token punctuation">;</span>
    <span class="token keyword">output</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span> dout<span class="token punctuation">;</span>
    <span class="token keyword">reg</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span> dout<span class="token punctuation">;</span>
    <span class="token comment">// reg [15:0] dout;</span>
    <span class="token important">always @</span><span class="token punctuation">(</span><span class="token keyword">posedge</span> clk<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        dout <span class="token operator">&lt;=</span> <span class="token operator">{</span>din<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> din<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">}</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    
<span class="token keyword">endmodule</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token constant">\`timescale</span> <span class="token number">1</span>ns<span class="token operator">/</span><span class="token number">1</span>ps

<span class="token keyword">module</span> register_right_tb<span class="token punctuation">;</span>
    <span class="token keyword">reg</span> clk<span class="token punctuation">;</span>
    <span class="token keyword">reg</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span> din<span class="token punctuation">;</span>
    <span class="token keyword">wire</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span> dout<span class="token punctuation">;</span>

    <span class="token keyword">initial</span> <span class="token keyword">begin</span>
        <span class="token kernel-function property">$dumpfile</span><span class="token punctuation">(</span><span class="token string">&quot;wave.vcd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token kernel-function property">$dumpvars</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> register_right_tb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>

    <span class="token keyword">initial</span> <span class="token keyword">begin</span>
        clk <span class="token operator">=</span> <span class="token number">1&#39;b0</span><span class="token punctuation">;</span>
        din <span class="token operator">=</span> <span class="token number">16&#39;b0000_0000_0000_0000</span><span class="token punctuation">;</span>
        <span class="token number">#10</span> din <span class="token operator">=</span> <span class="token number">16&#39;b1000_0000_0000_0000</span><span class="token punctuation">;</span>
        <span class="token number">#20</span> din <span class="token operator">=</span> <span class="token number">16&#39;b0100_0000_0000_0000</span><span class="token punctuation">;</span>
        <span class="token number">#1000</span> <span class="token kernel-function property">$stop</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>

    <span class="token important">always</span> <span class="token number">#10</span> clk <span class="token operator">=</span> <span class="token operator">~</span>clk<span class="token punctuation">;</span>
    
    register_right <span class="token function">U1</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">clk</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">din</span><span class="token punctuation">(</span>din<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">dout</span><span class="token punctuation">(</span>dout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">endmodule</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>循环移位寄存器</p><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token constant">\`timescale</span> <span class="token number">1</span>ns <span class="token operator">/</span> <span class="token number">1</span>ps

<span class="token keyword">module</span> cycle_left_register #<span class="token punctuation">(</span><span class="token keyword">parameter</span> MSB <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
	<span class="token keyword">input</span> <span class="token punctuation">[</span>MSB <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">]</span> din<span class="token punctuation">,</span>
	<span class="token keyword">input</span> i_rst<span class="token punctuation">,</span>
	<span class="token keyword">input</span> i_load<span class="token punctuation">,</span>
	<span class="token keyword">input</span> i_clk<span class="token punctuation">,</span>
	<span class="token keyword">output</span>  <span class="token punctuation">[</span>MSB <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">]</span> dout
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">reg</span> <span class="token punctuation">[</span>MSB <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">]</span> dout_mid<span class="token punctuation">;</span>
	<span class="token important">always@</span><span class="token punctuation">(</span><span class="token keyword">posedge</span> i_clk<span class="token punctuation">)</span> <span class="token keyword">begin</span>
		<span class="token function">if</span><span class="token punctuation">(</span>i_rst<span class="token punctuation">)</span> <span class="token keyword">begin</span>
			dout_mid <span class="token operator">&lt;=</span> <span class="token number">&#39;d0</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>
		<span class="token keyword">else</span> <span class="token function">if</span><span class="token punctuation">(</span>i_load<span class="token punctuation">)</span> <span class="token keyword">begin</span>
			dout_mid <span class="token operator">&lt;=</span> din<span class="token punctuation">;</span>
		<span class="token keyword">end</span>
		<span class="token keyword">else</span> <span class="token keyword">begin</span>
			dout_mid <span class="token operator">&lt;=</span> <span class="token operator">{</span>dout_mid<span class="token punctuation">[</span>MSB <span class="token operator">-</span> <span class="token number">2</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dout_mid<span class="token punctuation">[</span>MSB <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">}</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>
	<span class="token keyword">end</span>
	<span class="token keyword">assign</span> dout <span class="token operator">=</span> dout_mid<span class="token punctuation">;</span>


<span class="token keyword">endmodule</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token constant">\`timescale</span> <span class="token number">1</span>ns <span class="token operator">/</span> <span class="token number">1</span>ps


<span class="token keyword">module</span> <span class="token function">cycle_left_register_tb</span><span class="token punctuation">(</span>

    <span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">parameter</span> MSB <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

	<span class="token keyword">reg</span> <span class="token punctuation">[</span>MSB <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">]</span> din<span class="token punctuation">;</span>
	<span class="token keyword">reg</span> i_rst<span class="token punctuation">;</span>
	<span class="token keyword">reg</span> i_clk<span class="token punctuation">;</span>
	<span class="token keyword">reg</span> i_load<span class="token punctuation">;</span>
	<span class="token keyword">wire</span> <span class="token punctuation">[</span>MSB <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">]</span> dout<span class="token punctuation">;</span>

	<span class="token comment">//generate clock</span>
	<span class="token keyword">initial</span> <span class="token keyword">begin</span>
		i_clk <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">forever</span> <span class="token keyword">begin</span>
			<span class="token number">#5</span> i_clk <span class="token operator">=</span> <span class="token operator">~</span>i_clk<span class="token punctuation">;</span>
		<span class="token keyword">end</span>
	<span class="token keyword">end</span>

	<span class="token comment">//generate rst and input data </span>
	<span class="token keyword">initial</span> <span class="token keyword">begin</span>
		i_rst <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		din <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		i_load <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

		# <span class="token number">22</span>

		i_rst <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		@<span class="token punctuation">(</span><span class="token keyword">negedge</span> i_clk<span class="token punctuation">)</span> <span class="token keyword">begin</span>
		din <span class="token operator">=</span> <span class="token number">&#39;b1011</span><span class="token punctuation">;</span>
		i_load <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>

		@<span class="token punctuation">(</span><span class="token keyword">negedge</span> i_clk<span class="token punctuation">)</span> <span class="token keyword">begin</span>
			i_load <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>

		<span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> @<span class="token punctuation">(</span><span class="token keyword">posedge</span> i_clk<span class="token punctuation">)</span><span class="token punctuation">;</span>

		@<span class="token punctuation">(</span><span class="token keyword">negedge</span> i_clk<span class="token punctuation">)</span> <span class="token keyword">begin</span>
			din <span class="token operator">=</span> <span class="token number">&#39;d0101</span><span class="token punctuation">;</span>
			i_load <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>
		
		@<span class="token punctuation">(</span><span class="token keyword">negedge</span> i_clk<span class="token punctuation">)</span> i_load <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

		<span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> @<span class="token punctuation">(</span><span class="token keyword">posedge</span> i_clk<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token number">#10</span> <span class="token kernel-function property">$finish</span><span class="token punctuation">;</span>

	<span class="token keyword">end</span>

	<span class="token keyword">initial</span>
      <span class="token kernel-function property">$monitor</span> <span class="token punctuation">(</span><span class="token string">&quot; i_rst = %0b, i_load = %0b, din = %b, dout = %b&quot;</span><span class="token punctuation">,</span> i_rst<span class="token punctuation">,</span> i_load<span class="token punctuation">,</span> din<span class="token punctuation">,</span> dout<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">initial</span>
<span class="token keyword">begin</span>            
    <span class="token kernel-function property">$dumpfile</span><span class="token punctuation">(</span><span class="token string">&quot;wave.vcd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//生成的vcd文件名称</span>
    <span class="token kernel-function property">$dumpvars</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> cycle_left_register_tb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//tb模块名称</span>
<span class="token keyword">end</span>

	cycle_left_register #<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">MSB</span><span class="token punctuation">(</span>MSB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">inst_cycle_left_register</span><span class="token punctuation">(</span>
		<span class="token punctuation">.</span><span class="token function">i_clk</span><span class="token punctuation">(</span>i_clk<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">.</span><span class="token function">i_rst</span><span class="token punctuation">(</span>i_rst<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">.</span><span class="token function">i_load</span><span class="token punctuation">(</span>i_load<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">.</span><span class="token function">din</span><span class="token punctuation">(</span>din<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">.</span><span class="token function">dout</span><span class="token punctuation">(</span>dout<span class="token punctuation">)</span>
		<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">endmodule</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v=[i,c,o,u,r,m,d,k];function g(b,h){return t(),e("div",null,v)}const _=a(l,[["render",g],["__file","shiftRegister.html.vue"]]);export{_ as default};
