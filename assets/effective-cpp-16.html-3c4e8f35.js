const n=JSON.parse('{"key":"v-4b920d91","path":"/posts/Program_language/cpp/effective-cpp-16.html","title":"effective c++ 16 成对使用new和delete时采取相同形式","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 16 成对使用new和delete时采取相同形式 这一节其实是面试题经常会问的一个话题。也很简单。我们直接通过例子来进行演示。 分析 下面就是一个关于本节原则的一个演示。 #include &lt;iostream&gt; #include &lt;memory&gt; class A { public: \\tA() = default; \\t~A(){ \\t\\tstd::cout &lt;&lt; \\"call ~A()\\" &lt;&lt; std::endl; \\t} }; int main() { \\t{ \\t\\tA* a = new A; \\t\\tdelete a; \\t\\tstd::cout &lt;&lt; \\"-------------\\" &lt;&lt; std::endl; \\t} \\t{ \\t\\tA* a = new A[5]; \\t\\tdelete[] a; \\t} }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-16.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 16 成对使用new和delete时采取相同形式"}],["meta",{"property":"og:description","content":"effective c++ 16 成对使用new和delete时采取相同形式 这一节其实是面试题经常会问的一个话题。也很简单。我们直接通过例子来进行演示。 分析 下面就是一个关于本节原则的一个演示。 #include &lt;iostream&gt; #include &lt;memory&gt; class A { public: \\tA() = default; \\t~A(){ \\t\\tstd::cout &lt;&lt; \\"call ~A()\\" &lt;&lt; std::endl; \\t} }; int main() { \\t{ \\t\\tA* a = new A; \\t\\tdelete a; \\t\\tstd::cout &lt;&lt; \\"-------------\\" &lt;&lt; std::endl; \\t} \\t{ \\t\\tA* a = new A[5]; \\t\\tdelete[] a; \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-11T02:26:20.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-11T02:26:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 16 成对使用new和delete时采取相同形式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-11T02:26:20.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683512895000,"updatedTime":1683771980000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":0.57,"words":171},"filePathRelative":"posts/Program_language/cpp/effective-cpp-16.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective c++ 16 成对使用new和delete时采取相同形式</h1>\\n<p>这一节其实是面试题经常会问的一个话题。也很简单。我们直接通过例子来进行演示。</p>\\n<h2> 分析</h2>\\n<p>下面就是一个关于本节原则的一个演示。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;memory&gt;</span></span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">A</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token function\\">A</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token operator\\">~</span><span class=\\"token function\\">A</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\tstd<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"call ~A()\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tA<span class=\\"token operator\\">*</span> a <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> A<span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">delete</span> a<span class=\\"token punctuation\\">;</span>\\n\\t\\tstd<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"-------------\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tA<span class=\\"token operator\\">*</span> a <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> A<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">delete</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> a<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
