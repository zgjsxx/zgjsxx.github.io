const t=JSON.parse('{"key":"v-f92c0794","path":"/posts/Linux/application-dev/Linux-max-filefd.html","title":"Linux 最大可以打开多少文件描述符？","lang":"zh-CN","frontmatter":{"category":["Linux"],"description":"Linux 最大可以打开多少文件描述符？ 在日常开发中，对文件的操作可谓是再寻常不过的意见事情。那么你是否有这样一个疑问， 我最多可以打开多少个文件呢？ 在Linux系统中，当某个程序打开文件时，内核返回相应的文件描述符。 文件描述符（fd: file descriptors），也就是所谓的文件句柄，程序为了处理该文件必须引用此描述符。 文件描述符是大于等于0的整数，其可以标明每一个被进程所打开的文件和 socket。最前面的三个文件描述符（0，1，2）分别与标准输入（stdin），标准输出（stdout）和标准错误（stderr）对应，后面打开的文件依此类推对应 3、4…… 。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/application-dev/Linux-max-filefd.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"Linux 最大可以打开多少文件描述符？"}],["meta",{"property":"og:description","content":"Linux 最大可以打开多少文件描述符？ 在日常开发中，对文件的操作可谓是再寻常不过的意见事情。那么你是否有这样一个疑问， 我最多可以打开多少个文件呢？ 在Linux系统中，当某个程序打开文件时，内核返回相应的文件描述符。 文件描述符（fd: file descriptors），也就是所谓的文件句柄，程序为了处理该文件必须引用此描述符。 文件描述符是大于等于0的整数，其可以标明每一个被进程所打开的文件和 socket。最前面的三个文件描述符（0，1，2）分别与标准输入（stdin），标准输出（stdout）和标准错误（stderr）对应，后面打开的文件依此类推对应 3、4…… 。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-20T07:03:10.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-20T07:03:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 最大可以打开多少文件描述符？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-20T07:03:10.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一个进程最多可以打开多少个文件描述符?","slug":"一个进程最多可以打开多少个文件描述符","link":"#一个进程最多可以打开多少个文件描述符","children":[]},{"level":2,"title":"一个用户最多可以打开多少个文件描述符","slug":"一个用户最多可以打开多少个文件描述符","link":"#一个用户最多可以打开多少个文件描述符","children":[]},{"level":2,"title":"一个系统最多可以打开多少个文件描述符","slug":"一个系统最多可以打开多少个文件描述符","link":"#一个系统最多可以打开多少个文件描述符","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1697785390000,"updatedTime":1697785390000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":7.88,"words":2363},"filePathRelative":"posts/Linux/application-dev/Linux-max-filefd.md","localizedDate":"2023年10月20日","excerpt":"<h1> Linux 最大可以打开多少文件描述符？</h1>\\n<p>在日常开发中，对文件的操作可谓是再寻常不过的意见事情。那么你是否有这样一个疑问， 我最多可以打开多少个文件呢？</p>\\n<p>在Linux系统中，当某个程序<strong>打开文件</strong>时，内核返回相应的文件描述符。 <strong>文件描述符</strong>（fd: file descriptors），也就是所谓的文件句柄，程序为了处理该文件必须引用此描述符。</p>\\n<p><strong>文件描述符</strong>是大于等于0的整数，其可以标明每一个被进程所打开的文件和 socket。最前面的三个文件描述符（0，1，2）分别与标准输入（stdin），标准输出（stdout）和标准错误（stderr）对应，后面打开的文件依此类推对应 3、4…… 。</p>","autoDesc":true}');export{t as data};
