const e=JSON.parse('{"key":"v-5b5c8300","path":"/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture12-bitwise-operations.html","title":"第十二讲：按位运算","lang":"zh-CN","frontmatter":{"category":["汇编语言"],"description":"第十二讲：按位运算 按位运算 位运算在汇编语言中很重要。我们已经学习了xor（异或），这里我们将学习其他操作or、and、not、andn（与非），以及移位和旋转操作。除了这些在 C/C++ 也有的位运算之外，汇编语言还支持 C/C++ 语言没有的一些位运算。test操作是按位进行比较的运算符，在条件跳转时可能会用它来构建跳转的状态位。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture12-bitwise-operations.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"第十二讲：按位运算"}],["meta",{"property":"og:description","content":"第十二讲：按位运算 按位运算 位运算在汇编语言中很重要。我们已经学习了xor（异或），这里我们将学习其他操作or、and、not、andn（与非），以及移位和旋转操作。除了这些在 C/C++ 也有的位运算之外，汇编语言还支持 C/C++ 语言没有的一些位运算。test操作是按位进行比较的运算符，在条件跳转时可能会用它来构建跳转的状态位。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-15T10:00:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-15T10:00:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第十二讲：按位运算\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-15T10:00:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"按位运算","slug":"按位运算","link":"#按位运算","children":[{"level":3,"title":"AND，OR，NOT，AND-NOT位运算","slug":"and-or-not-and-not位运算","link":"#and-or-not-and-not位运算","children":[]},{"level":3,"title":"设置/取消比特位， 翻转比特位","slug":"设置-取消比特位-翻转比特位","link":"#设置-取消比特位-翻转比特位","children":[]}]},{"level":2,"title":"符号位的延伸","slug":"符号位的延伸","link":"#符号位的延伸","children":[]},{"level":2,"title":"移位和旋转","slug":"移位和旋转","link":"#移位和旋转","children":[]},{"level":2,"title":"使用位移来构造掩码","slug":"使用位移来构造掩码","link":"#使用位移来构造掩码","children":[]},{"level":2,"title":"旋转","slug":"旋转","link":"#旋转","children":[]},{"level":2,"title":"test指令","slug":"test指令","link":"#test指令","children":[]},{"level":2,"title":"搜索位","slug":"搜索位","link":"#搜索位","children":[]},{"level":2,"title":"应用：伪随机数生成","slug":"应用-伪随机数生成","link":"#应用-伪随机数生成","children":[]},{"level":2,"title":"附录","slug":"附录","link":"#附录","children":[]}],"git":{"createdTime":1709629879000,"updatedTime":1710496805000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":4}]},"readingTime":{"minutes":10.26,"words":3079},"filePathRelative":"posts/Program_language/Assembly_language/fullerton_CSci241/Lecture12-bitwise-operations.md","localizedDate":"2024年3月5日","excerpt":"<h1> 第十二讲：按位运算</h1>\\n<h2> 按位运算</h2>\\n<p>位运算在汇编语言中很重要。我们已经学习了<code>xor</code>（异或），这里我们将学习其他操作<code>or</code>、<code>and</code>、<code>not</code>、<code>andn</code>（与非），以及<strong>移位</strong>和<strong>旋转</strong>操作。除了这些在 C/C++ 也有的位运算之外，汇编语言还支持 C/C++ 语言没有的一些位运算。<code>test</code>操作是按位进行比较的运算符，在条件跳转时可能会用它来构建跳转的状态位。</p>","autoDesc":true}');export{e as data};
