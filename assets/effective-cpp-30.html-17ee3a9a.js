const e=JSON.parse('{"key":"v-2da52187","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-30.html","title":"effective c++ 30 彻底了解inline的里里外外","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 30 彻底了解inline的里里外外 本节主要介绍inline的条条框框。 分析 我们首先讨论inline的好处。 inline函数相当于将代码copy到调用的地方，可以减少函数调用的额外开销。 可以替代define的宏函数却又比宏函数安全。 但是天下没有免费的午餐。 inline的坏处也很明显： inline可能造成程序体积膨胀 可能造成额外的换页行为，降低指令高速缓存命中率","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-30.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 30 彻底了解inline的里里外外"}],["meta",{"property":"og:description","content":"effective c++ 30 彻底了解inline的里里外外 本节主要介绍inline的条条框框。 分析 我们首先讨论inline的好处。 inline函数相当于将代码copy到调用的地方，可以减少函数调用的额外开销。 可以替代define的宏函数却又比宏函数安全。 但是天下没有免费的午餐。 inline的坏处也很明显： inline可能造成程序体积膨胀 可能造成额外的换页行为，降低指令高速缓存命中率"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-11T06:58:32.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-11T06:58:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 30 彻底了解inline的里里外外\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-11T06:58:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1683788312000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":1.06,"words":317},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-30.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 30 彻底了解inline的里里外外</h1>\\n<p>本节主要介绍inline的条条框框。</p>\\n<h2> 分析</h2>\\n<p>我们首先讨论inline的好处。</p>\\n<ul>\\n<li>inline函数相当于将代码copy到调用的地方，可以减少函数调用的额外开销。</li>\\n<li>可以替代define的宏函数却又比宏函数安全。</li>\\n</ul>\\n<p>但是天下没有免费的午餐。</p>\\n<p>inline的坏处也很明显：</p>\\n<ul>\\n<li>inline可能造成程序体积膨胀</li>\\n<li>可能造成额外的换页行为，降低指令高速缓存命中率</li>\\n</ul>","autoDesc":true}');export{e as data};
