const e=JSON.parse('{"key":"v-144b66a9","path":"/posts/Program_language/cpp/effective-STL/effective-STL-5.html","title":"effective STL-05 用区间成员函数代替单元素操作","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective STL读书笔记"],"description":"effective STL-05 用区间成员函数代替单元素操作 区间成员函数： 区间构造： container::container vector&lt;int&gt; v2(v1.begin(), v1.end());","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-STL/effective-STL-5.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective STL-05 用区间成员函数代替单元素操作"}],["meta",{"property":"og:description","content":"effective STL-05 用区间成员函数代替单元素操作 区间成员函数： 区间构造： container::container vector&lt;int&gt; v2(v1.begin(), v1.end());"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-05T03:02:19.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective STL读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-06-05T03:02:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective STL-05 用区间成员函数代替单元素操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-05T03:02:19.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1685934139000,"updatedTime":1685934139000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.26,"words":79},"filePathRelative":"posts/Program_language/cpp/effective-STL/effective-STL-5.md","localizedDate":"2023年6月5日","excerpt":"<h1> effective STL-05 用区间成员函数代替单元素操作</h1>\\n<p>区间成员函数：</p>\\n<p>区间构造： container::container</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>vector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token function\\">v2</span><span class=\\"token punctuation\\">(</span>v1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
