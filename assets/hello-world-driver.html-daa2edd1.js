const n=JSON.parse('{"key":"v-cfe6f774","path":"/posts/Linux/embedded/hello-world-driver.html","title":"","lang":"zh-CN","frontmatter":{"description":"#include &lt;linux/init.h&gt; #include &lt;linux/kernel.h&gt; #include &lt;linux/module.h&gt; MODULE_LICENSE(\\"GPL\\"); MODULE_VERSION(\\"4.15.0-133-generic\\"); static int __init start(void) { printk(KERN_INFO \\"Loading module....\\\\n\\"); printk(KERN_INFO \\"Hello World....\\\\n\\"); return 0; } static void __exit end(void) { printk(KERN_INFO \\"Bye World....\\\\n\\"); } module_init(start); module_exit(end);","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/embedded/hello-world-driver.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:description","content":"#include &lt;linux/init.h&gt; #include &lt;linux/kernel.h&gt; #include &lt;linux/module.h&gt; MODULE_LICENSE(\\"GPL\\"); MODULE_VERSION(\\"4.15.0-133-generic\\"); static int __init start(void) { printk(KERN_INFO \\"Loading module....\\\\n\\"); printk(KERN_INFO \\"Hello World....\\\\n\\"); return 0; } static void __exit end(void) { printk(KERN_INFO \\"Bye World....\\\\n\\"); } module_init(start); module_exit(end);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T09:03:46.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T09:03:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-28T09:03:46.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1714295026000,"updatedTime":1714295026000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.24,"words":73},"filePathRelative":"posts/Linux/embedded/hello-world-driver.md","localizedDate":"2024年4月28日","excerpt":"<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;linux/init.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;linux/kernel.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;linux/module.h&gt;</span></span>\\n<span class=\\"token function\\">MODULE_LICENSE</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"GPL\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">MODULE_VERSION</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"4.15.0-133-generic\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">int</span> __init <span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">printk</span><span class=\\"token punctuation\\">(</span>KERN_INFO <span class=\\"token string\\">\\"Loading module....\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">printk</span><span class=\\"token punctuation\\">(</span>KERN_INFO <span class=\\"token string\\">\\"Hello World....\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> __exit <span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">printk</span><span class=\\"token punctuation\\">(</span>KERN_INFO <span class=\\"token string\\">\\"Bye World....\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token function\\">module_init</span><span class=\\"token punctuation\\">(</span>start<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">module_exit</span><span class=\\"token punctuation\\">(</span>end<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
