const e=JSON.parse('{"key":"v-febe7cbe","path":"/posts/Linux/kernel/Linux-0.11/Linux-0.11-kernel-signal.html","title":"Linux-0.11 kernel目录进程管理signal.c详解","lang":"zh-CN","frontmatter":{"category":["Linux"],"tag":["Linux-0.11代码解读系列"],"description":"Linux-0.11 kernel目录进程管理signal.c详解 模块简介 signal.c主要涉及的是进程的信号处理。该章节中最难理解的是do_signal函数。 在unix系统中，信号是一种\\"软件中断\\"处理机制。有许多较为复杂的程序会使用到信号。信号机制提供了一种处理异步时间的方法。例如用户在终端键盘上键入ctrl-C组合来终止一个程序的执行。该操作就会产生一个SIGINT信号，并被发送到当前的前台执行的进程中。 函数详解 sys_sgetmask","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/kernel/Linux-0.11/Linux-0.11-kernel-signal.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"Linux-0.11 kernel目录进程管理signal.c详解"}],["meta",{"property":"og:description","content":"Linux-0.11 kernel目录进程管理signal.c详解 模块简介 signal.c主要涉及的是进程的信号处理。该章节中最难理解的是do_signal函数。 在unix系统中，信号是一种\\"软件中断\\"处理机制。有许多较为复杂的程序会使用到信号。信号机制提供了一种处理异步时间的方法。例如用户在终端键盘上键入ctrl-C组合来终止一个程序的执行。该操作就会产生一个SIGINT信号，并被发送到当前的前台执行的进程中。 函数详解 sys_sgetmask"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:22:07.000Z"}],["meta",{"property":"article:tag","content":"Linux-0.11代码解读系列"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:22:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux-0.11 kernel目录进程管理signal.c详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:22:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模块简介","slug":"模块简介","link":"#模块简介","children":[]},{"level":2,"title":"函数详解","slug":"函数详解","link":"#函数详解","children":[{"level":3,"title":"sys_sgetmask","slug":"sys-sgetmask","link":"#sys-sgetmask","children":[]},{"level":3,"title":"sys_ssetmask","slug":"sys-ssetmask","link":"#sys-ssetmask","children":[]},{"level":3,"title":"save_old","slug":"save-old","link":"#save-old","children":[]},{"level":3,"title":"get_new","slug":"get-new","link":"#get-new","children":[]},{"level":3,"title":"sys_signal","slug":"sys-signal","link":"#sys-signal","children":[]},{"level":3,"title":"sys_sigaction","slug":"sys-sigaction","link":"#sys-sigaction","children":[]},{"level":3,"title":"do_signal","slug":"do-signal","link":"#do-signal","children":[]}]}],"git":{"createdTime":1680579191000,"updatedTime":1712895727000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":5}]},"readingTime":{"minutes":8.22,"words":2467},"filePathRelative":"posts/Linux/kernel/Linux-0.11/Linux-0.11-kernel-signal.md","localizedDate":"2023年4月4日","excerpt":"<h1> Linux-0.11 kernel目录进程管理signal.c详解</h1>\\n<h2> 模块简介</h2>\\n<p>signal.c主要涉及的是进程的信号处理。该章节中最难理解的是<strong>do_signal</strong>函数。</p>\\n<p>在unix系统中，信号是一种\\"软件中断\\"处理机制。有许多较为复杂的程序会使用到信号。信号机制提供了一种处理异步时间的方法。例如用户在终端键盘上键入ctrl-C组合来终止一个程序的执行。该操作就会产生一个SIGINT信号，并被发送到当前的前台执行的进程中。</p>\\n<h2> 函数详解</h2>\\n<h3> sys_sgetmask</h3>","autoDesc":true}');export{e as data};
