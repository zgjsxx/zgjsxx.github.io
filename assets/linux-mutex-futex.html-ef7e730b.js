const t=JSON.parse('{"key":"v-1ac7d2e2","path":"/posts/Linux/application-dev/linux-mutex-futex.html","title":"","lang":"zh-CN","frontmatter":{"description":"今天讲讲工作中的事吧，领导要求调研一个事，mutex性能如何？mutex无竞争时和有竞争时效率如何？ 0x1、结论 我和领导汇报时，都习惯先说结论，领导可以很容易抓住重点，如果感兴趣就继续看。 结论如下： 没有争抢时，不进入内核态。性能与自旋锁类似。 有争抢时，没抢到，进入内核态等待唤醒。 0x2、mutex实现 mutex实现时，分用户态部分和内核态部分，分别承担不同的功能： 用户态：使用test and set来测试是否可以抢到锁。 内核态：使用futex系统调用来等待和唤醒。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/application-dev/linux-mutex-futex.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:description","content":"今天讲讲工作中的事吧，领导要求调研一个事，mutex性能如何？mutex无竞争时和有竞争时效率如何？ 0x1、结论 我和领导汇报时，都习惯先说结论，领导可以很容易抓住重点，如果感兴趣就继续看。 结论如下： 没有争抢时，不进入内核态。性能与自旋锁类似。 有争抢时，没抢到，进入内核态等待唤醒。 0x2、mutex实现 mutex实现时，分用户态部分和内核态部分，分别承担不同的功能： 用户态：使用test and set来测试是否可以抢到锁。 内核态：使用futex系统调用来等待和唤醒。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-27T03:29:41.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-27T03:29:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-27T03:29:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1687836581000,"updatedTime":1687836581000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"posts/Linux/application-dev/linux-mutex-futex.md","localizedDate":"2023年6月27日","excerpt":"<p>今天讲讲工作中的事吧，领导要求调研一个事，mutex性能如何？mutex无竞争时和有竞争时效率如何？</p>\\n<p>0x1、结论\\n我和领导汇报时，都习惯先说结论，领导可以很容易抓住重点，如果感兴趣就继续看。</p>\\n<p>结论如下：</p>\\n<p>没有争抢时，不进入内核态。性能与自旋锁类似。\\n有争抢时，没抢到，进入内核态等待唤醒。\\n0x2、mutex实现\\nmutex实现时，分用户态部分和内核态部分，分别承担不同的功能：</p>\\n<p>用户态：使用test and set来测试是否可以抢到锁。\\n内核态：使用futex系统调用来等待和唤醒。</p>\\n","autoDesc":true}');export{t as data};
