import{_ as c,V as a,W as i,X as e,Y as t}from"./framework-9a29aaa0.js";const n={},s=e("h1",{id:"effective-c-20-传引用代替传值",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#effective-c-20-传引用代替传值","aria-hidden":"true"},"#"),t(" effective c++ 20 传引用代替传值")],-1),r=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),t(" 总结")],-1),o=e("ul",null,[e("li",null,"尽量以传常引用去替代传值。前者通常比较高效，并且可以避免切割问题。"),e("li",null,"以上规则并不适用于内置类型 ，以及STL的迭代器和函数对象，对它们而言，传值往往比较合适。")],-1),d=[s,r,o];function l(_,f){return a(),i("div",null,d)}const u=c(n,[["render",l],["__file","effective-cpp-20.html.vue"]]);export{u as default};
