import{_ as a,V as n,W as s,a0 as e}from"./framework-c954d91f.js";const t={},c=e(`<h1 id="linux-0-11-kernel目录tty-io-c详解" tabindex="-1"><a class="header-anchor" href="#linux-0-11-kernel目录tty-io-c详解" aria-hidden="true">#</a> Linux-0.11 kernel目录tty_io.c详解</h1><p>keyboard_interrupt -&gt; call *key_table(,%eax,4) -&gt; do_self -&gt; put_queue -&gt; (tty-&gt;read_q)-&gt; do_tty_interrupt-&gt; copy_to_cooked -&gt; (tty-&gt;secondary) -&gt;wake_up &lt;- sys_read &lt;- rw_char &lt;- tty_read &lt;- read &lt;- (shell)</p><h2 id="tty-init" tabindex="-1"><a class="header-anchor" href="#tty-init" aria-hidden="true">#</a> tty_init</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">tty_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="tty-intr" tabindex="-1"><a class="header-anchor" href="#tty-intr" aria-hidden="true">#</a> tty_intr</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">tty_intr</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">tty_struct</span> <span class="token operator">*</span> tty<span class="token punctuation">,</span> <span class="token keyword">int</span> mask<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sleep-if-empty" tabindex="-1"><a class="header-anchor" href="#sleep-if-empty" aria-hidden="true">#</a> sleep_if_empty</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sleep_if_empty</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">tty_queue</span> <span class="token operator">*</span> queue<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sleep-if-full" tabindex="-1"><a class="header-anchor" href="#sleep-if-full" aria-hidden="true">#</a> sleep_if_full</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sleep_if_full</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">tty_queue</span> <span class="token operator">*</span> queue<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="wait-for-keypress" tabindex="-1"><a class="header-anchor" href="#wait-for-keypress" aria-hidden="true">#</a> wait_for_keypress</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">wait_for_keypress</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="copy-to-cooked" tabindex="-1"><a class="header-anchor" href="#copy-to-cooked" aria-hidden="true">#</a> copy_to_cooked</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">copy_to_cooked</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">tty_struct</span> <span class="token operator">*</span> tty<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="tty-read" tabindex="-1"><a class="header-anchor" href="#tty-read" aria-hidden="true">#</a> tty_read</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">tty_read</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> channel<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> nr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="tty-write" tabindex="-1"><a class="header-anchor" href="#tty-write" aria-hidden="true">#</a> tty_write</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">tty_write</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> channel<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> nr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="do-tty-interrupt" tabindex="-1"><a class="header-anchor" href="#do-tty-interrupt" aria-hidden="true">#</a> do_tty_interrupt</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_tty_interrupt</span><span class="token punctuation">(</span><span class="token keyword">int</span> tty<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="chr-dev-init" tabindex="-1"><a class="header-anchor" href="#chr-dev-init" aria-hidden="true">#</a> chr_dev_init</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">chr_dev_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,22),i=[c];function o(d,r){return n(),s("div",null,i)}const l=a(t,[["render",o],["__file","Linux-0.11-kernel-tty-io.html.vue"]]);export{l as default};
