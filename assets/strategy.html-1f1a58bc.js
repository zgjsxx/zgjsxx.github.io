const n=JSON.parse('{"key":"v-04538fad","path":"/posts/design-pattern/strategy.html","title":"策略模式","lang":"zh-CN","frontmatter":{"description":"category: 设计模式 tag: 设计模式 策略模式 #include &lt;iostream&gt; class IStrategy { public: IStrategy() = default; virtual ~IStrategy() = default; public: virtual void exec() const = 0; }; class StrategyA : public IStrategy { public: StrategyA() = default; ~StrategyA() = default; public: virtual void exec() const override { std::cout &lt;&lt; \\"StrategyA::exec()\\" &lt;&lt; std::endl; } }; class StrategyB : public IStrategy { public: StrategyB() = default; ~StrategyB() = default; public: virtual void exec() const override { std::cout &lt;&lt; \\"StrategyB::exec()\\" &lt;&lt; std::endl; } }; class Context { public: explicit Context(IStrategy* strategy):strategy_(strategy) { } void setStrategy(IStrategy* strategy) { strategy_ = strategy; } void exec() const { strategy_-&gt;exec(); } private: IStrategy* strategy_; }; int main() { IStrategy* strategy1 = new StrategyA(); IStrategy* strategy2 = new StrategyB(); Context* context = new Context(strategy1); context-&gt;exec(); context-&gt;setStrategy(strategy2); context-&gt;exec(); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/design-pattern/strategy.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"策略模式"}],["meta",{"property":"og:description","content":"category: 设计模式 tag: 设计模式 策略模式 #include &lt;iostream&gt; class IStrategy { public: IStrategy() = default; virtual ~IStrategy() = default; public: virtual void exec() const = 0; }; class StrategyA : public IStrategy { public: StrategyA() = default; ~StrategyA() = default; public: virtual void exec() const override { std::cout &lt;&lt; \\"StrategyA::exec()\\" &lt;&lt; std::endl; } }; class StrategyB : public IStrategy { public: StrategyB() = default; ~StrategyB() = default; public: virtual void exec() const override { std::cout &lt;&lt; \\"StrategyB::exec()\\" &lt;&lt; std::endl; } }; class Context { public: explicit Context(IStrategy* strategy):strategy_(strategy) { } void setStrategy(IStrategy* strategy) { strategy_ = strategy; } void exec() const { strategy_-&gt;exec(); } private: IStrategy* strategy_; }; int main() { IStrategy* strategy1 = new StrategyA(); IStrategy* strategy2 = new StrategyB(); Context* context = new Context(strategy1); context-&gt;exec(); context-&gt;setStrategy(strategy2); context-&gt;exec(); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-26T02:30:52.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-26T02:30:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"策略模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-26T02:30:52.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1682476252000,"updatedTime":1682476252000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.39,"words":118},"filePathRelative":"posts/design-pattern/strategy.md","localizedDate":"2023年4月26日","excerpt":"<hr>\\n<p>category:</p>\\n<ul>\\n<li>设计模式\\ntag:</li>\\n<li>设计模式</li>\\n</ul>\\n<hr>\\n<h1> 策略模式</h1>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">IStrategy</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token function\\">IStrategy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">virtual</span> <span class=\\"token operator\\">~</span><span class=\\"token function\\">IStrategy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token keyword\\">virtual</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">StrategyA</span> <span class=\\"token operator\\">:</span> <span class=\\"token base-clause\\"><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">IStrategy</span></span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token function\\">StrategyA</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token operator\\">~</span><span class=\\"token function\\">StrategyA</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token keyword\\">virtual</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token keyword\\">override</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"StrategyA::exec()\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">StrategyB</span> <span class=\\"token operator\\">:</span> <span class=\\"token base-clause\\"><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">IStrategy</span></span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token function\\">StrategyB</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token operator\\">~</span><span class=\\"token function\\">StrategyB</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token keyword\\">virtual</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token keyword\\">override</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"StrategyB::exec()\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Context</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token keyword\\">explicit</span> <span class=\\"token function\\">Context</span><span class=\\"token punctuation\\">(</span>IStrategy<span class=\\"token operator\\">*</span> strategy<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span><span class=\\"token function\\">strategy_</span><span class=\\"token punctuation\\">(</span>strategy<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token punctuation\\">}</span>\\n    \\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">setStrategy</span><span class=\\"token punctuation\\">(</span>IStrategy<span class=\\"token operator\\">*</span> strategy<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span> \\n        strategy_ <span class=\\"token operator\\">=</span> strategy<span class=\\"token punctuation\\">;</span> \\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span>\\n    <span class=\\"token punctuation\\">{</span> \\n        strategy_<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">private</span><span class=\\"token operator\\">:</span>\\n    IStrategy<span class=\\"token operator\\">*</span> strategy_<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    IStrategy<span class=\\"token operator\\">*</span> strategy1 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token function\\">StrategyA</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    IStrategy<span class=\\"token operator\\">*</span> strategy2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token function\\">StrategyB</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  \\n\\n    Context<span class=\\"token operator\\">*</span> context <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token function\\">Context</span><span class=\\"token punctuation\\">(</span>strategy1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    context<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    context<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">setStrategy</span><span class=\\"token punctuation\\">(</span>strategy2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    context<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> \\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
