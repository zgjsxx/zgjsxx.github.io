const e=JSON.parse('{"key":"v-c6dfbc34","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-53.html","title":"effective c++ 53-不要忽略编译器的警告","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 53-不要忽略编译器的警告 这一节所讲解的道理是很简单的，主要就是告诉大家要利用好编译器给出的warning信息，不要轻易忽视。但是在日常开发中，很多人都对warnging的警告不太重视。在编程方法中的很多优化方法都是将运行态的错误转移到编译态，可以如果在编译器给出的信息的重要性，因此我们不能忽略它，并且在日常开发中需要非常重视。 分析 下面将会给出一些常见的warning，并给出一些解决办法。 vector容器遍历的warning 下面是一段遍历vector容器的代码，再普遍不过的代码了。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-53.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 53-不要忽略编译器的警告"}],["meta",{"property":"og:description","content":"effective c++ 53-不要忽略编译器的警告 这一节所讲解的道理是很简单的，主要就是告诉大家要利用好编译器给出的warning信息，不要轻易忽视。但是在日常开发中，很多人都对warnging的警告不太重视。在编程方法中的很多优化方法都是将运行态的错误转移到编译态，可以如果在编译器给出的信息的重要性，因此我们不能忽略它，并且在日常开发中需要非常重视。 分析 下面将会给出一些常见的warning，并给出一些解决办法。 vector容器遍历的warning 下面是一段遍历vector容器的代码，再普遍不过的代码了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-25T02:37:20.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-25T02:37:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 53-不要忽略编译器的警告\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-25T02:37:20.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[{"level":3,"title":"vector容器遍历的warning","slug":"vector容器遍历的warning","link":"#vector容器遍历的warning","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1684982240000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":2,"words":599},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-53.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 53-不要忽略编译器的警告</h1>\\n<p>这一节所讲解的道理是很简单的，主要就是告诉大家要利用好编译器给出的warning信息，不要轻易忽视。但是在日常开发中，很多人都对warnging的警告不太重视。在编程方法中的很多优化方法都是将运行态的错误转移到编译态，可以如果在编译器给出的信息的重要性，因此我们不能忽略它，并且在日常开发中需要非常重视。</p>\\n<h2> 分析</h2>\\n<p>下面将会给出一些常见的warning，并给出一些解决办法。</p>\\n<h3> vector容器遍历的warning</h3>\\n<p>下面是一段遍历vector容器的代码，再普遍不过的代码了。</p>","autoDesc":true}');export{e as data};
