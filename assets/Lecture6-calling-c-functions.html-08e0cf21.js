const e=JSON.parse('{"key":"v-5bc2b0c3","path":"/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture6-calling-c-functions.html","title":"","lang":"zh-CN","frontmatter":{"description":"函数调用规约 回顾一下，当我们调用一个函数时，我们必须选择一些寄存器用于参数，至少一个用于返回值，一些寄存器用于调用者保存（可供函数临时使用），一些寄存器用于被调用者已保存。我们对这些函数的选择是为了与标准 Unix C ABI 调用约定保持一致，因此，通过更多的工作，我们的函数将与 C 标准库兼容。、 调用函数的一般流程是这样的 ... push r10 ; Push any caller-saved registers in use call func pop r10 ; Restore after return","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture6-calling-c-functions.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:description","content":"函数调用规约 回顾一下，当我们调用一个函数时，我们必须选择一些寄存器用于参数，至少一个用于返回值，一些寄存器用于调用者保存（可供函数临时使用），一些寄存器用于被调用者已保存。我们对这些函数的选择是为了与标准 Unix C ABI 调用约定保持一致，因此，通过更多的工作，我们的函数将与 C 标准库兼容。、 调用函数的一般流程是这样的 ... push r10 ; Push any caller-saved registers in use call func pop r10 ; Restore after return"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T08:13:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T08:13:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-28T08:13:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"函数调用规约","slug":"函数调用规约","link":"#函数调用规约","children":[]}],"git":{"createdTime":1708924316000,"updatedTime":1709107981000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":3}]},"readingTime":{"minutes":0.72,"words":217},"filePathRelative":"posts/Program_language/Assembly_language/fullerton_CSci241/Lecture6-calling-c-functions.md","localizedDate":"2024年2月26日","excerpt":"<h2> 函数调用规约</h2>\\n<p>回顾一下，当我们调用一个函数时，我们必须选择一些寄存器用于参数，至少一个用于返回值，一些寄存器用于调用者保存（可供函数临时使用），一些寄存器用于被调用者已保存。我们对这些函数的选择是为了与标准 Unix C ABI 调用约定保持一致，因此，通过更多的工作，我们的函数将与 C 标准库兼容。、</p>\\n<p>调用函数的一般流程是这样的</p>\\n<div class=\\"language-x86asm line-numbers-mode\\" data-ext=\\"x86asm\\"><pre class=\\"language-x86asm\\"><code>...\\n    push r10        ; Push any caller-saved registers in use\\n    call func   \\n    pop r10         ; Restore after return\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
