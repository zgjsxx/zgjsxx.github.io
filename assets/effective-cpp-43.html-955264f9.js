const n=JSON.parse('{"key":"v-35b39512","path":"/posts/Program_language/cpp/effective-cpp-43.html","title":"effective c++ 43-处理模板化基类的名称","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 43-处理模板化基类的名称 该节主要分析了一个写模板时常常会遇到的一个编译错误。 分析 这里有一个模板基类，有派生类继承了模板基类，并调用了基类中的方法，但是编译器却会报找不该方法，这是怎么回事？ #include &lt;string&gt; #include &lt;iostream&gt; class CompanyA { public: \\tvoid sendCleartext(const std::string&amp; msg) { std::cout &lt;&lt; \\"A sendCleartext\\" &lt;&lt; std::endl; } \\tvoid sendEncrypted(const std::string&amp; msg) { std::cout &lt;&lt; \\"A sendEncrypted\\" &lt;&lt; std::endl; } }; class CompanyB { public: \\tvoid sendCleartext(const std::string&amp; msg) { std::cout &lt;&lt; \\"B sendCleartext\\" &lt;&lt; std::endl; } \\tvoid sendEncrypted(const std::string&amp; msg) { std::cout &lt;&lt; \\"B sendEncrypted\\" &lt;&lt; std::endl; } }; class MsgInfo { public: MsgInfo(std::string msg):msg_(msg){} private: \\tstd::string msg_{}; }; template&lt;typename Company&gt; class MsgSender { public: \\tvoid sendClear(const MsgInfo&amp; info) \\t{ \\t\\tstd::string msg; \\t\\tCompany c; \\t\\tc.sendCleartext(msg); \\t} \\tvoid sendSecret(const MsgInfo&amp; info) \\t{ \\t} }; template&lt;typename Company&gt; class LoggingMsgSender : public MsgSender&lt;Company&gt; { public: \\tvoid sendClearMsg(const MsgInfo&amp; info) \\t{ sendClear(info); \\t} }; int main() { MsgInfo info(\\"test\\"); LoggingMsgSender&lt;CompanyB&gt; loggingMsgSender; loggingMsgSender.sendClearMsg(info); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-43.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 43-处理模板化基类的名称"}],["meta",{"property":"og:description","content":"effective c++ 43-处理模板化基类的名称 该节主要分析了一个写模板时常常会遇到的一个编译错误。 分析 这里有一个模板基类，有派生类继承了模板基类，并调用了基类中的方法，但是编译器却会报找不该方法，这是怎么回事？ #include &lt;string&gt; #include &lt;iostream&gt; class CompanyA { public: \\tvoid sendCleartext(const std::string&amp; msg) { std::cout &lt;&lt; \\"A sendCleartext\\" &lt;&lt; std::endl; } \\tvoid sendEncrypted(const std::string&amp; msg) { std::cout &lt;&lt; \\"A sendEncrypted\\" &lt;&lt; std::endl; } }; class CompanyB { public: \\tvoid sendCleartext(const std::string&amp; msg) { std::cout &lt;&lt; \\"B sendCleartext\\" &lt;&lt; std::endl; } \\tvoid sendEncrypted(const std::string&amp; msg) { std::cout &lt;&lt; \\"B sendEncrypted\\" &lt;&lt; std::endl; } }; class MsgInfo { public: MsgInfo(std::string msg):msg_(msg){} private: \\tstd::string msg_{}; }; template&lt;typename Company&gt; class MsgSender { public: \\tvoid sendClear(const MsgInfo&amp; info) \\t{ \\t\\tstd::string msg; \\t\\tCompany c; \\t\\tc.sendCleartext(msg); \\t} \\tvoid sendSecret(const MsgInfo&amp; info) \\t{ \\t} }; template&lt;typename Company&gt; class LoggingMsgSender : public MsgSender&lt;Company&gt; { public: \\tvoid sendClearMsg(const MsgInfo&amp; info) \\t{ sendClear(info); \\t} }; int main() { MsgInfo info(\\"test\\"); LoggingMsgSender&lt;CompanyB&gt; loggingMsgSender; loggingMsgSender.sendClearMsg(info); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-06T08:23:35.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-06T08:23:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 43-处理模板化基类的名称\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-06T08:23:35.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683361415000,"updatedTime":1683361415000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":2.59,"words":776},"filePathRelative":"posts/Program_language/cpp/effective-cpp-43.md","localizedDate":"2023年5月6日","excerpt":"<h1> effective c++ 43-处理模板化基类的名称</h1>\\n<p>该节主要分析了一个写模板时常常会遇到的一个编译错误。</p>\\n<h2> 分析</h2>\\n<p>这里有一个模板基类，有派生类继承了模板基类，并调用了基类中的方法，但是编译器却会报找不该方法，这是怎么回事？</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;string&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CompanyA</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sendCleartext</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> std<span class=\\"token double-colon punctuation\\">::</span>string<span class=\\"token operator\\">&amp;</span> msg<span class=\\"token punctuation\\">)</span> \\n    <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"A sendCleartext\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sendEncrypted</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> std<span class=\\"token double-colon punctuation\\">::</span>string<span class=\\"token operator\\">&amp;</span> msg<span class=\\"token punctuation\\">)</span> \\n    <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"A sendEncrypted\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CompanyB</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sendCleartext</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> std<span class=\\"token double-colon punctuation\\">::</span>string<span class=\\"token operator\\">&amp;</span> msg<span class=\\"token punctuation\\">)</span> \\n    <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"B sendCleartext\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sendEncrypted</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> std<span class=\\"token double-colon punctuation\\">::</span>string<span class=\\"token operator\\">&amp;</span> msg<span class=\\"token punctuation\\">)</span> \\n    <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"B sendEncrypted\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MsgInfo</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token function\\">MsgInfo</span><span class=\\"token punctuation\\">(</span>std<span class=\\"token double-colon punctuation\\">::</span>string msg<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span><span class=\\"token function\\">msg_</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">private</span><span class=\\"token operator\\">:</span>\\n\\tstd<span class=\\"token double-colon punctuation\\">::</span>string msg_<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">template</span><span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">typename</span> <span class=\\"token class-name\\">Company</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MsgSender</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sendClear</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> MsgInfo<span class=\\"token operator\\">&amp;</span> info<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tstd<span class=\\"token double-colon punctuation\\">::</span>string msg<span class=\\"token punctuation\\">;</span>\\n\\t\\tCompany c<span class=\\"token punctuation\\">;</span>\\n\\t\\tc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sendCleartext</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sendSecret</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> MsgInfo<span class=\\"token operator\\">&amp;</span> info<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">template</span><span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">typename</span> <span class=\\"token class-name\\">Company</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">LoggingMsgSender</span> <span class=\\"token operator\\">:</span> <span class=\\"token base-clause\\"><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">MsgSender</span><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">Company</span><span class=\\"token operator\\">&gt;</span></span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sendClearMsg</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> MsgInfo<span class=\\"token operator\\">&amp;</span> info<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">sendClear</span><span class=\\"token punctuation\\">(</span>info<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    MsgInfo <span class=\\"token function\\">info</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    LoggingMsgSender<span class=\\"token operator\\">&lt;</span>CompanyB<span class=\\"token operator\\">&gt;</span> loggingMsgSender<span class=\\"token punctuation\\">;</span>\\n    loggingMsgSender<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sendClearMsg</span><span class=\\"token punctuation\\">(</span>info<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
