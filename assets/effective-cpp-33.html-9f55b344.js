const e=JSON.parse('{"key":"v-9f800b94","path":"/posts/Program_language/cpp/effective-cpp-33.html","title":"effective c++ 33 避免遮掩继承而来的名称","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 33 避免遮掩继承而来的名称 总结 derived classes内的名称会遮掩base classes内的名称。在public继承下从来没有人希望如此。 为了让被遮掩的名称再见天日，可使用using声明式或转交函数。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-33.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 33 避免遮掩继承而来的名称"}],["meta",{"property":"og:description","content":"effective c++ 33 避免遮掩继承而来的名称 总结 derived classes内的名称会遮掩base classes内的名称。在public继承下从来没有人希望如此。 为了让被遮掩的名称再见天日，可使用using声明式或转交函数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T09:59:08.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-08T09:59:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 33 避免遮掩继承而来的名称\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-08T09:59:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683539948000,"updatedTime":1683539948000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.27,"words":80},"filePathRelative":"posts/Program_language/cpp/effective-cpp-33.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective c++ 33 避免遮掩继承而来的名称</h1>\\n<h2> 总结</h2>\\n<ul>\\n<li>derived classes内的名称会遮掩base classes内的名称。在public继承下从来没有人希望如此。</li>\\n<li>为了让被遮掩的名称再见天日，可使用using声明式或转交函数。</li>\\n</ul>\\n","autoDesc":true}');export{e as data};
