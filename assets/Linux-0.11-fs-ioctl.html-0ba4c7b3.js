import{_ as n,V as s,W as a,a0 as t}from"./framework-c954d91f.js";const e={},p=t(`<h1 id="linux-0-11-文件系统ioctl-c详解" tabindex="-1"><a class="header-anchor" href="#linux-0-11-文件系统ioctl-c详解" aria-hidden="true">#</a> Linux-0.11 文件系统ioctl.c详解</h1><h2 id="模块简介" tabindex="-1"><a class="header-anchor" href="#模块简介" aria-hidden="true">#</a> 模块简介</h2><h2 id="函数详解" tabindex="-1"><a class="header-anchor" href="#函数详解" aria-hidden="true">#</a> 函数详解</h2><h3 id="sys-ioctl" tabindex="-1"><a class="header-anchor" href="#sys-ioctl" aria-hidden="true">#</a> sys_ioctl</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sys_ioctl</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> arg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该函数是io的控制函数。</p><p>首先进行一些参数校验。如果fd大于进程可打开的文件数，或者fd对应的文件结构体不存在时，返回-EBADF。</p><p>此外获取fd对应的文件属性，如果该文件既不是字符设备又不是块设备，返回-EINVAL。 并且如果该设备的主设备号超过了系统已有的设备数，或者设备对应的ioctl函数不存在，返回错误信息。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">file</span> <span class="token operator">*</span> filp<span class="token punctuation">;</span>
<span class="token keyword">int</span> dev<span class="token punctuation">,</span>mode<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>fd <span class="token operator">&gt;=</span> NR_OPEN <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>filp <span class="token operator">=</span> current<span class="token operator">-&gt;</span>filp<span class="token punctuation">[</span>fd<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>EBADF<span class="token punctuation">;</span>
mode<span class="token operator">=</span>filp<span class="token operator">-&gt;</span>f_inode<span class="token operator">-&gt;</span>i_mode<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">S_ISCHR</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">S_ISBLK</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span>
dev <span class="token operator">=</span> filp<span class="token operator">-&gt;</span>f_inode<span class="token operator">-&gt;</span>i_zone<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">MAJOR</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> NRDEVS<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>ENODEV<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ioctl_table<span class="token punctuation">[</span><span class="token function">MAJOR</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>ENOTTY<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过一番检查之后，下面调用设备对应的ioctl函数。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">return</span> ioctl_table<span class="token punctuation">[</span><span class="token function">MAJOR</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>系统中设备对应的ioctl函数定义如下，Linux-0.11内核只有tty相关的tty_ioctl方法。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> ioctl_ptr ioctl_table<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span>
	<span class="token constant">NULL</span><span class="token punctuation">,</span>		<span class="token comment">/* nodev */</span>
	<span class="token constant">NULL</span><span class="token punctuation">,</span>		<span class="token comment">/* /dev/mem */</span>
	<span class="token constant">NULL</span><span class="token punctuation">,</span>		<span class="token comment">/* /dev/fd */</span>
	<span class="token constant">NULL</span><span class="token punctuation">,</span>		<span class="token comment">/* /dev/hd */</span>
	tty_ioctl<span class="token punctuation">,</span>	<span class="token comment">/* /dev/ttyx */</span>
	tty_ioctl<span class="token punctuation">,</span>	<span class="token comment">/* /dev/tty */</span>
	<span class="token constant">NULL</span><span class="token punctuation">,</span>		<span class="token comment">/* /dev/lp */</span>
	<span class="token constant">NULL</span><span class="token punctuation">}</span><span class="token punctuation">;</span>		<span class="token comment">/* named pipes */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q &amp; A</h2>`,14),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","Linux-0.11-fs-ioctl.html.vue"]]);export{d as default};
