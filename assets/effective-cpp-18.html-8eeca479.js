const e=JSON.parse('{"key":"v-5d012006","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-18.html","title":"effective c++ 18 让接口容易被正确使用， 不易被误用","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 18 让接口容易被正确使用， 不易被误用 在本节中作者建议大家在写代码的时候要提供的接口需要拥有正确性和易用性。 写代码时你可能根据第一感觉就写出了一个接口，这个时候你可能需要再思考思考这个接口是否好用， 是否可能被误用。作者这里用了一些例子来说明如此写出好的接口。 实际工作中， 开发出好的接口远比本节讲的要复杂的多。 个人的理解就是你可以根据第一感觉写出接口， 但是建议再思考思考这样是不是最好的。 如果你的同事抱怨你的接口不好用， 这个时候你就更应该重新思考你的接口。 分析 作者这里给了一个例子，设计了如下的一个日期的类。 乍一看好像没有啥问题， 哈哈。其实实际工作中大部分人都是这么干的。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-18.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 18 让接口容易被正确使用， 不易被误用"}],["meta",{"property":"og:description","content":"effective c++ 18 让接口容易被正确使用， 不易被误用 在本节中作者建议大家在写代码的时候要提供的接口需要拥有正确性和易用性。 写代码时你可能根据第一感觉就写出了一个接口，这个时候你可能需要再思考思考这个接口是否好用， 是否可能被误用。作者这里用了一些例子来说明如此写出好的接口。 实际工作中， 开发出好的接口远比本节讲的要复杂的多。 个人的理解就是你可以根据第一感觉写出接口， 但是建议再思考思考这样是不是最好的。 如果你的同事抱怨你的接口不好用， 这个时候你就更应该重新思考你的接口。 分析 作者这里给了一个例子，设计了如下的一个日期的类。 乍一看好像没有啥问题， 哈哈。其实实际工作中大部分人都是这么干的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-13T13:26:57.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-13T13:26:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 18 让接口容易被正确使用， 不易被误用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-13T13:26:57.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1683984417000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":2.09,"words":628},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-18.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 18 让接口容易被正确使用， 不易被误用</h1>\\n<p>在本节中作者建议大家在写代码的时候要提供的接口需要拥有正确性和易用性。 写代码时你可能根据第一感觉就写出了一个接口，这个时候你可能需要再思考思考这个接口是否好用， 是否可能被误用。作者这里用了一些例子来说明如此写出好的接口。 实际工作中， 开发出好的接口远比本节讲的要复杂的多。 个人的理解就是你可以根据第一感觉写出接口， 但是建议再思考思考这样是不是最好的。 如果你的同事抱怨你的接口不好用， 这个时候你就更应该重新思考你的接口。</p>\\n<h2> 分析</h2>\\n<p>作者这里给了一个例子，设计了如下的一个日期的类。 乍一看好像没有啥问题， 哈哈。其实实际工作中大部分人都是这么干的。</p>","autoDesc":true}');export{e as data};
