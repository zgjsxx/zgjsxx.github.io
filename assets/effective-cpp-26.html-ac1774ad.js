const n=JSON.parse('{"key":"v-ff0f6e5c","path":"/posts/Program_language/cpp/effective-cpp-26.html","title":"effective c++ 26 尽量延后变量定义式的出现时间","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 26 尽量延后变量定义式的出现时间 本节主要介绍，在很多时候，如果变量定义的过早，可能变量的定义将无效。 例如下面的例子，如果password长度小于8，函数将会抛出异常， 那么定义的encrypted的构造和析构将毫无意义。 std::string encryptPassword(const std::string&amp; password) { std::string encrypted; \\tif (password.length() &lt; 8) \\t{ \\t\\tthrow std::logic_error(\\"Password too short\\"); \\t} encrypted = password; \\tencrypt(encrypted); \\treturn encrypted; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-26.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 26 尽量延后变量定义式的出现时间"}],["meta",{"property":"og:description","content":"effective c++ 26 尽量延后变量定义式的出现时间 本节主要介绍，在很多时候，如果变量定义的过早，可能变量的定义将无效。 例如下面的例子，如果password长度小于8，函数将会抛出异常， 那么定义的encrypted的构造和析构将毫无意义。 std::string encryptPassword(const std::string&amp; password) { std::string encrypted; \\tif (password.length() &lt; 8) \\t{ \\t\\tthrow std::logic_error(\\"Password too short\\"); \\t} encrypted = password; \\tencrypt(encrypted); \\treturn encrypted; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T14:54:07.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-08T14:54:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 26 尽量延后变量定义式的出现时间\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-08T14:54:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683539948000,"updatedTime":1683557647000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":0.68,"words":205},"filePathRelative":"posts/Program_language/cpp/effective-cpp-26.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective c++ 26 尽量延后变量定义式的出现时间</h1>\\n<p>本节主要介绍，在很多时候，<strong>如果变量定义的过早，可能变量的定义将无效</strong>。</p>\\n<p>例如下面的例子，如果password长度小于8，函数将会抛出异常， 那么定义的encrypted的构造和析构将毫无意义。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>std<span class=\\"token double-colon punctuation\\">::</span>string <span class=\\"token function\\">encryptPassword</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> std<span class=\\"token double-colon punctuation\\">::</span>string<span class=\\"token operator\\">&amp;</span> password<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>string encrypted<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>password<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">length</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">throw</span> std<span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">logic_error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Password too short\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n    encrypted <span class=\\"token operator\\">=</span> password<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">encrypt</span><span class=\\"token punctuation\\">(</span>encrypted<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> encrypted<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
