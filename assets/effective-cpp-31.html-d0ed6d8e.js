import{_ as e,V as a,W as c,a0 as s}from"./framework-c954d91f.js";const t={},i=s('<h1 id="effective-c-31-文件间的编译依存关系降低至最低" tabindex="-1"><a class="header-anchor" href="#effective-c-31-文件间的编译依存关系降低至最低" aria-hidden="true">#</a> effective c++ 31 文件间的编译依存关系降低至最低</h1><h2 id="handle-classes-pimpl设计" tabindex="-1"><a class="header-anchor" href="#handle-classes-pimpl设计" aria-hidden="true">#</a> Handle classes(pImpl设计)</h2><h2 id="interface-classes" tabindex="-1"><a class="header-anchor" href="#interface-classes" aria-hidden="true">#</a> Interface classes</h2><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>支持&quot;编译依存最小化&quot;的一般构想时:相依于声明式，不要相依于定义式。基于此构想的两个手段是Handle class和Interface classes。</li><li>程序头文件应该以&quot;完全且仅有声明式&quot;的形式存在。这种做法不论是否涉及template都使用。</li></ul>',5),r=[i];function l(n,d){return a(),c("div",null,r)}const f=e(t,[["render",l],["__file","effective-cpp-31.html.vue"]]);export{f as default};
