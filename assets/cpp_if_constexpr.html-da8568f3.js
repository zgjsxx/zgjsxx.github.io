const a=JSON.parse('{"key":"v-9c64b522","path":"/posts/Program_language/cpp/cpp-template/cpp_if_constexpr.html","title":"","lang":"zh-CN","frontmatter":{"description":"#include &lt;type_traits&gt; struct input_iterator_tag {}; struct output_iterator_tag {}; struct forward_iterator_tag : public input_iterator_tag {}; struct bidirectional_iterator_tag : public forward_iterator_tag {}; struct random_access_iterator_tag : public bidirectional_iterator_tag {}; void advance_dispatch_bid() { // } // advance 的 random_access_iterator_tag 的版本 void advance_dispatch_random() { // } template &lt;class Type&gt; void advance() { if constexpr(std::is_same_v&lt;Type, random_access_iterator_tag&gt;) return advance_dispatch_random( ); else return advance_dispatch_bid(); } int main() { advance&lt;random_access_iterator_tag&gt;(); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/cpp-template/cpp_if_constexpr.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:description","content":"#include &lt;type_traits&gt; struct input_iterator_tag {}; struct output_iterator_tag {}; struct forward_iterator_tag : public input_iterator_tag {}; struct bidirectional_iterator_tag : public forward_iterator_tag {}; struct random_access_iterator_tag : public bidirectional_iterator_tag {}; void advance_dispatch_bid() { // } // advance 的 random_access_iterator_tag 的版本 void advance_dispatch_random() { // } template &lt;class Type&gt; void advance() { if constexpr(std::is_same_v&lt;Type, random_access_iterator_tag&gt;) return advance_dispatch_random( ); else return advance_dispatch_bid(); } int main() { advance&lt;random_access_iterator_tag&gt;(); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-27T08:12:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-27T08:12:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-27T08:12:39.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1709021559000,"updatedTime":1709021559000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.16,"words":49},"filePathRelative":"posts/Program_language/cpp/cpp-template/cpp_if_constexpr.md","localizedDate":"2024年2月27日","excerpt":"<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;type_traits&gt;</span></span>\\n\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">input_iterator_tag</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">output_iterator_tag</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">forward_iterator_tag</span> <span class=\\"token operator\\">:</span> <span class=\\"token base-clause\\"><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">input_iterator_tag</span></span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">bidirectional_iterator_tag</span> <span class=\\"token operator\\">:</span> <span class=\\"token base-clause\\"><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">forward_iterator_tag</span></span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">random_access_iterator_tag</span> <span class=\\"token operator\\">:</span> <span class=\\"token base-clause\\"><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">bidirectional_iterator_tag</span></span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">advance_dispatch_bid</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// advance 的 random_access_iterator_tag 的版本</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">advance_dispatch_random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">template</span> <span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Type</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">advance</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n     <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">constexpr</span><span class=\\"token punctuation\\">(</span>std<span class=\\"token double-colon punctuation\\">::</span>is_same_v<span class=\\"token operator\\">&lt;</span>Type<span class=\\"token punctuation\\">,</span> random_access_iterator_tag<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">)</span> \\n        <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">advance_dispatch_random</span><span class=\\"token punctuation\\">(</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">else</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">advance_dispatch_bid</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token generic-function\\"><span class=\\"token function\\">advance</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>random_access_iterator_tag<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{a as data};
