const t=JSON.parse('{"key":"v-01472161","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-25.html","title":"effective c++ 25 考虑写一个不抛出任何异常的swap函数","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 25 考虑写一个不抛出任何异常的swap函数 本节的内容比较长， 一步一步讲解了如何实现一个不抛任何异常的swap函数。 分析 我们可以调用std下的swap函数，这是一个模板函数：既可以： int a = 1; int b = 2; std::swap(a,b); cout&lt;&lt;\\"a = \\"&lt;&lt;a&lt;&lt;\\" b = \\"&lt;&lt;b&lt;&lt;endl;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-25.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 25 考虑写一个不抛出任何异常的swap函数"}],["meta",{"property":"og:description","content":"effective c++ 25 考虑写一个不抛出任何异常的swap函数 本节的内容比较长， 一步一步讲解了如何实现一个不抛任何异常的swap函数。 分析 我们可以调用std下的swap函数，这是一个模板函数：既可以： int a = 1; int b = 2; std::swap(a,b); cout&lt;&lt;\\"a = \\"&lt;&lt;a&lt;&lt;\\" b = \\"&lt;&lt;b&lt;&lt;endl;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T03:09:22.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-15T03:09:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 25 考虑写一个不抛出任何异常的swap函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-15T03:09:22.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1684120162000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":3}]},"readingTime":{"minutes":3.54,"words":1063},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-25.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 25 考虑写一个不抛出任何异常的swap函数</h1>\\n<p>本节的内容比较长， 一步一步讲解了如何实现一个不抛任何异常的swap函数。</p>\\n<h2> 分析</h2>\\n<p>我们可以调用std下的swap函数，这是一个模板函数：既可以：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>    <span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> b <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    cout<span class=\\"token operator\\">&lt;&lt;</span><span class=\\"token string\\">\\"a = \\"</span><span class=\\"token operator\\">&lt;&lt;</span>a<span class=\\"token operator\\">&lt;&lt;</span><span class=\\"token string\\">\\" b = \\"</span><span class=\\"token operator\\">&lt;&lt;</span>b<span class=\\"token operator\\">&lt;&lt;</span>endl<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
