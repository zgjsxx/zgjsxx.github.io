const e=JSON.parse(`{"key":"v-fb190ae8","path":"/posts/Linux/application-dev/workflow-threadpool.html","title":"workflow 线程池分析","lang":"zh-CN","frontmatter":{"description":"workflow 线程池分析 msgqueue.h /* Copyright (c) 2020 Sogou, Inc. Licensed under the Apache License, Version 2.0 (the \\"License\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\"AS IS\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Author: Xie Han (xiehan@sogou-inc.com) */ #ifndef _MSGQUEUE_H_ #define _MSGQUEUE_H_ #include &lt;stddef.h&gt; typedef struct __msgqueue msgqueue_t; #ifdef __cplusplus extern \\"C\\" { #endif /* A simple implementation of message queue. The max pending messages may * reach two times 'maxlen' when the queue is in blocking mode, and infinite * in nonblocking mode. 'linkoff' is the offset from the head of each message, * where spaces of one pointer size should be available for internal usage. * 'linkoff' can be positive or negative or zero. */ msgqueue_t *msgqueue_create(size_t maxlen, int linkoff); void msgqueue_put(void *msg, msgqueue_t *queue); void *msgqueue_get(msgqueue_t *queue); void msgqueue_set_nonblock(msgqueue_t *queue); void msgqueue_set_block(msgqueue_t *queue); void msgqueue_destroy(msgqueue_t *queue); #ifdef __cplusplus } #endif #endif","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/application-dev/workflow-threadpool.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"workflow 线程池分析"}],["meta",{"property":"og:description","content":"workflow 线程池分析 msgqueue.h /* Copyright (c) 2020 Sogou, Inc. Licensed under the Apache License, Version 2.0 (the \\"License\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\"AS IS\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Author: Xie Han (xiehan@sogou-inc.com) */ #ifndef _MSGQUEUE_H_ #define _MSGQUEUE_H_ #include &lt;stddef.h&gt; typedef struct __msgqueue msgqueue_t; #ifdef __cplusplus extern \\"C\\" { #endif /* A simple implementation of message queue. The max pending messages may * reach two times 'maxlen' when the queue is in blocking mode, and infinite * in nonblocking mode. 'linkoff' is the offset from the head of each message, * where spaces of one pointer size should be available for internal usage. * 'linkoff' can be positive or negative or zero. */ msgqueue_t *msgqueue_create(size_t maxlen, int linkoff); void msgqueue_put(void *msg, msgqueue_t *queue); void *msgqueue_get(msgqueue_t *queue); void msgqueue_set_nonblock(msgqueue_t *queue); void msgqueue_set_block(msgqueue_t *queue); void msgqueue_destroy(msgqueue_t *queue); #ifdef __cplusplus } #endif #endif"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-09T14:54:01.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-09T14:54:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"workflow 线程池分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-09T14:54:01.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1688914441000,"updatedTime":1688914441000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":5.06,"words":1518},"filePathRelative":"posts/Linux/application-dev/workflow-threadpool.md","localizedDate":"2023年7月9日","excerpt":"<h1> workflow 线程池分析</h1>\\n<p>msgqueue.h</p>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token comment\\">/*\\n  Copyright (c) 2020 Sogou, Inc.\\n\\n  Licensed under the Apache License, Version 2.0 (the \\"License\\");\\n  you may not use this file except in compliance with the License.\\n  You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n  Unless required by applicable law or agreed to in writing, software\\n  distributed under the License is distributed on an \\"AS IS\\" BASIS,\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  See the License for the specific language governing permissions and\\n  limitations under the License.\\n\\n  Author: Xie Han (xiehan@sogou-inc.com)\\n*/</span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">ifndef</span> <span class=\\"token expression\\">_MSGQUEUE_H_</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">define</span> <span class=\\"token macro-name\\">_MSGQUEUE_H_</span></span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stddef.h&gt;</span></span>\\n\\n<span class=\\"token keyword\\">typedef</span> <span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">__msgqueue</span> <span class=\\"token class-name\\">msgqueue_t</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">ifdef</span> <span class=\\"token expression\\">__cplusplus</span></span>\\n<span class=\\"token keyword\\">extern</span> <span class=\\"token string\\">\\"C\\"</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">endif</span></span>\\n\\n<span class=\\"token comment\\">/* A simple implementation of message queue. The max pending messages may\\n * reach two times 'maxlen' when the queue is in blocking mode, and infinite\\n * in nonblocking mode. 'linkoff' is the offset from the head of each message,\\n * where spaces of one pointer size should be available for internal usage.\\n * 'linkoff' can be positive or negative or zero. */</span>\\n\\n<span class=\\"token class-name\\">msgqueue_t</span> <span class=\\"token operator\\">*</span><span class=\\"token function\\">msgqueue_create</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">size_t</span> maxlen<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> linkoff<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">msgqueue_put</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span> <span class=\\"token operator\\">*</span>msg<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">msgqueue_t</span> <span class=\\"token operator\\">*</span>queue<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token operator\\">*</span><span class=\\"token function\\">msgqueue_get</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">msgqueue_t</span> <span class=\\"token operator\\">*</span>queue<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">msgqueue_set_nonblock</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">msgqueue_t</span> <span class=\\"token operator\\">*</span>queue<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">msgqueue_set_block</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">msgqueue_t</span> <span class=\\"token operator\\">*</span>queue<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">msgqueue_destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">msgqueue_t</span> <span class=\\"token operator\\">*</span>queue<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">ifdef</span> <span class=\\"token expression\\">__cplusplus</span></span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">endif</span></span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">endif</span></span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
