const e=JSON.parse('{"key":"v-9a598c16","path":"/posts/Linux/Linux-0.11-kernel-system_call.html","title":"Linux-0.11 kernel目录system_call详解","lang":"zh-CN","frontmatter":{"category":["Linux"],"tag":["Linux-0.11代码解读系列"],"description":"Linux-0.11 kernel目录system_call详解 system_call 当0x80号中断发生的时候，CPU除了切入内核态之外，还会自动完成下列几件事： 1.找到当前进程的内核栈, 通过tss中的esp0 ss0定位 2.在内核栈中依次压入用户态的寄存器SS、ESP、EFLAGS、CS、EIP 当内核从系统调用中返回的时候，需要调用\\"iret\\"指令来返回用户态，显然iret代表的是内核栈中一系列的寄存器SS、ESP、EFLAGS、CS、EIP弹出操作。 在system_call中会将DS、ES、FS、EDX、ECX、EBX入栈。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/Linux-0.11-kernel-system_call.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"Linux-0.11 kernel目录system_call详解"}],["meta",{"property":"og:description","content":"Linux-0.11 kernel目录system_call详解 system_call 当0x80号中断发生的时候，CPU除了切入内核态之外，还会自动完成下列几件事： 1.找到当前进程的内核栈, 通过tss中的esp0 ss0定位 2.在内核栈中依次压入用户态的寄存器SS、ESP、EFLAGS、CS、EIP 当内核从系统调用中返回的时候，需要调用\\"iret\\"指令来返回用户态，显然iret代表的是内核栈中一系列的寄存器SS、ESP、EFLAGS、CS、EIP弹出操作。 在system_call中会将DS、ES、FS、EDX、ECX、EBX入栈。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-16T08:33:48.000Z"}],["meta",{"property":"article:tag","content":"Linux-0.11代码解读系列"}],["meta",{"property":"article:modified_time","content":"2023-02-16T08:33:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux-0.11 kernel目录system_call详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-16T08:33:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"system_call","slug":"system-call","link":"#system-call","children":[]}],"git":{"createdTime":1676536428000,"updatedTime":1676536428000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":1.83,"words":548},"filePathRelative":"posts/Linux/Linux-0.11-kernel-system_call.md","localizedDate":"2023年2月16日","excerpt":"<h1> Linux-0.11 kernel目录system_call详解</h1>\\n<h2> system_call</h2>\\n<p>当0x80号中断发生的时候，CPU除了切入内核态之外，还会自动完成下列几件事：</p>\\n<p>1.找到当前进程的内核栈, 通过tss中的esp0 ss0定位</p>\\n<p>2.在内核栈中依次压入用户态的寄存器SS、ESP、EFLAGS、CS、EIP</p>\\n<p>当内核从系统调用中返回的时候，需要调用\\"iret\\"指令来返回用户态，显然iret代表的是内核栈中一系列的寄存器SS、ESP、EFLAGS、CS、EIP弹出操作。</p>\\n<p>在system_call中会将DS、ES、FS、EDX、ECX、EBX入栈。</p>","autoDesc":true}');export{e as data};
