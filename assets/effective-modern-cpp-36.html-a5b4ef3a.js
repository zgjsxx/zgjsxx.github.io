const e=JSON.parse('{"key":"v-31bb51a5","path":"/posts/Program_language/cpp/effective-modern-cpp/effective-modern-cpp-36.html","title":"Item36：如果有异步的必要请指定std::launch::async","lang":"zh-CN","frontmatter":{"category":["C++","effective Modern C++"],"description":"Item36：如果有异步的必要请指定std::launch::async 当你调用std::async执行函数时（或者其他可调用对象），你通常希望异步执行函数。但是这并不一定是你要求std::async执行的操作。你事实上要求这个函数按照std::async启动策略来执行。有两种标准策略，每种都通过std::launch这个限域enum的一个枚举名表示（关于枚举的更多细节参见Item10）。假定一个函数f传给std::async来执行：","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-modern-cpp/effective-modern-cpp-36.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"Item36：如果有异步的必要请指定std::launch::async"}],["meta",{"property":"og:description","content":"Item36：如果有异步的必要请指定std::launch::async 当你调用std::async执行函数时（或者其他可调用对象），你通常希望异步执行函数。但是这并不一定是你要求std::async执行的操作。你事实上要求这个函数按照std::async启动策略来执行。有两种标准策略，每种都通过std::launch这个限域enum的一个枚举名表示（关于枚举的更多细节参见Item10）。假定一个函数f传给std::async来执行："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-11T06:58:32.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-11T06:58:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Item36：如果有异步的必要请指定std::launch::async\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-11T06:58:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1683788312000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":6.96,"words":2089},"filePathRelative":"posts/Program_language/cpp/effective-modern-cpp/effective-modern-cpp-36.md","localizedDate":"2023年5月11日","excerpt":"<h1> Item36：如果有异步的必要请指定std::launch::async</h1>\\n<p>当你调用<code>std::async</code>执行函数时（或者其他可调用对象），你通常希望异步执行函数。但是这并不一定是你要求<code>std::async</code>执行的操作。你事实上要求这个函数按照<code>std::async</code>启动策略来执行。有两种标准策略，每种都通过<code>std::launch</code>这个限域<code>enum</code>的一个枚举名表示（关于枚举的更多细节参见<a href=\\"/posts/Program_language/cpp/3.MovingToModernCpp/item10.html\\" target=\\"blank\\">Item10</a>）。假定一个函数<code>f</code>传给<code>std::async</code>来执行：</p>","autoDesc":true}');export{e as data};
