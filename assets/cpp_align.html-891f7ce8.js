const t=JSON.parse('{"key":"v-62851eba","path":"/posts/Program_language/cpp/cpp_align.html","title":"c++中的对齐问题","lang":"zh-CN","frontmatter":{"category":["C++"],"description":"c++中的对齐问题 #include &lt;iostream&gt; struct MyStruct { char c; int i; short s; }; int main() { MyStruct obj; std::cout &lt;&lt; \\"offset of c = \\" &lt;&lt; offsetof(MyStruct,c) &lt;&lt; std::endl; std::cout &lt;&lt; \\"offset of i = \\" &lt;&lt; offsetof(MyStruct,i) &lt;&lt; std::endl; std::cout &lt;&lt; \\"offset of s = \\" &lt;&lt; offsetof(MyStruct,s) &lt;&lt; std::endl; std::cout &lt;&lt; \\"sizeof MyStruct = \\" &lt;&lt; sizeof(MyStruct); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/cpp_align.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"c++中的对齐问题"}],["meta",{"property":"og:description","content":"c++中的对齐问题 #include &lt;iostream&gt; struct MyStruct { char c; int i; short s; }; int main() { MyStruct obj; std::cout &lt;&lt; \\"offset of c = \\" &lt;&lt; offsetof(MyStruct,c) &lt;&lt; std::endl; std::cout &lt;&lt; \\"offset of i = \\" &lt;&lt; offsetof(MyStruct,i) &lt;&lt; std::endl; std::cout &lt;&lt; \\"offset of s = \\" &lt;&lt; offsetof(MyStruct,s) &lt;&lt; std::endl; std::cout &lt;&lt; \\"sizeof MyStruct = \\" &lt;&lt; sizeof(MyStruct); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-04T08:41:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-04T08:41:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++中的对齐问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-04T08:41:38.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1693816898000,"updatedTime":1693816898000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.26,"words":77},"filePathRelative":"posts/Program_language/cpp/cpp_align.md","localizedDate":"2023年9月4日","excerpt":"<h1> c++中的对齐问题</h1>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">MyStruct</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">char</span> c<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> i<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">short</span> s<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    MyStruct obj<span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"offset of c = \\"</span>  <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token function\\">offsetof</span><span class=\\"token punctuation\\">(</span>MyStruct<span class=\\"token punctuation\\">,</span>c<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"offset of i = \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token function\\">offsetof</span><span class=\\"token punctuation\\">(</span>MyStruct<span class=\\"token punctuation\\">,</span>i<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"offset of s = \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token function\\">offsetof</span><span class=\\"token punctuation\\">(</span>MyStruct<span class=\\"token punctuation\\">,</span>s<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"sizeof MyStruct = \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>MyStruct<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
