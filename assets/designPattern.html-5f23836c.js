const l=JSON.parse('{"key":"v-221fd50a","path":"/posts/Interview/designPattern.html","title":"设计模式面经","lang":"zh-CN","frontmatter":{"description":"category: 面经 tag: 设计模式面经 设计模式面经 设计模式的几大原则 创建型模式 工厂方法 建造者模式 结构型模式 适配器模式 桥接模式 组合模式 装饰模式 外观模式 享元模式 代理模式 行为型模式 策略模式 命令模式 中介者模式 责任链模式 模板方法模式 问题 装饰器模式和代理模式的区别 外观模式和适配器模式的区别 说说grpc中的建造者模式","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Interview/designPattern.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"设计模式面经"}],["meta",{"property":"og:description","content":"category: 面经 tag: 设计模式面经 设计模式面经 设计模式的几大原则 创建型模式 工厂方法 建造者模式 结构型模式 适配器模式 桥接模式 组合模式 装饰模式 外观模式 享元模式 代理模式 行为型模式 策略模式 命令模式 中介者模式 责任链模式 模板方法模式 问题 装饰器模式和代理模式的区别 外观模式和适配器模式的区别 说说grpc中的建造者模式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-26T07:34:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-26T07:34:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式面经\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-26T07:34:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"设计模式的几大原则","slug":"设计模式的几大原则","link":"#设计模式的几大原则","children":[]},{"level":2,"title":"创建型模式","slug":"创建型模式","link":"#创建型模式","children":[{"level":3,"title":"工厂方法","slug":"工厂方法","link":"#工厂方法","children":[]},{"level":3,"title":"建造者模式","slug":"建造者模式","link":"#建造者模式","children":[]}]},{"level":2,"title":"结构型模式","slug":"结构型模式","link":"#结构型模式","children":[{"level":3,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]},{"level":3,"title":"桥接模式","slug":"桥接模式","link":"#桥接模式","children":[]},{"level":3,"title":"组合模式","slug":"组合模式","link":"#组合模式","children":[]},{"level":3,"title":"装饰模式","slug":"装饰模式","link":"#装饰模式","children":[]},{"level":3,"title":"外观模式","slug":"外观模式","link":"#外观模式","children":[]},{"level":3,"title":"享元模式","slug":"享元模式","link":"#享元模式","children":[]},{"level":3,"title":"代理模式","slug":"代理模式","link":"#代理模式","children":[]}]},{"level":2,"title":"行为型模式","slug":"行为型模式","link":"#行为型模式","children":[{"level":3,"title":"策略模式","slug":"策略模式","link":"#策略模式","children":[]},{"level":3,"title":"命令模式","slug":"命令模式","link":"#命令模式","children":[]},{"level":3,"title":"中介者模式","slug":"中介者模式","link":"#中介者模式","children":[]},{"level":3,"title":"责任链模式","slug":"责任链模式","link":"#责任链模式","children":[]},{"level":3,"title":"模板方法模式","slug":"模板方法模式","link":"#模板方法模式","children":[]}]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[{"level":3,"title":"装饰器模式和代理模式的区别","slug":"装饰器模式和代理模式的区别","link":"#装饰器模式和代理模式的区别","children":[]},{"level":3,"title":"外观模式和适配器模式的区别","slug":"外观模式和适配器模式的区别","link":"#外观模式和适配器模式的区别","children":[]},{"level":3,"title":"说说grpc中的建造者模式","slug":"说说grpc中的建造者模式","link":"#说说grpc中的建造者模式","children":[]}]}],"git":{"createdTime":1685071012000,"updatedTime":1724657652000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":14},{"name":"zgjsxx","email":"119160625@qq.com","commits":4}]},"readingTime":{"minutes":54.29,"words":16286},"filePathRelative":"posts/Interview/designPattern.md","localizedDate":"2023年5月26日","excerpt":"<hr>\\n<p>category:</p>\\n<ul>\\n<li>面经\\ntag:</li>\\n<li>设计模式面经</li>\\n</ul>\\n<hr>\\n<ul>\\n<li><a href=\\"#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E9%9D%A2%E7%BB%8F\\">设计模式面经</a>\\n<ul>\\n<li><a href=\\"#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%87%A0%E5%A4%A7%E5%8E%9F%E5%88%99\\">设计模式的几大原则</a></li>\\n<li><a href=\\"#%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F\\">创建型模式</a>\\n<ul>\\n<li><a href=\\"#%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95\\">工厂方法</a></li>\\n<li><a href=\\"#%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F\\">建造者模式</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F\\">结构型模式</a>\\n<ul>\\n<li><a href=\\"#%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F\\">适配器模式</a></li>\\n<li><a href=\\"#%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F\\">桥接模式</a></li>\\n<li><a href=\\"#%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F\\">组合模式</a></li>\\n<li><a href=\\"#%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F\\">装饰模式</a></li>\\n<li><a href=\\"#%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F\\">外观模式</a></li>\\n<li><a href=\\"#%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F\\">享元模式</a></li>\\n<li><a href=\\"#%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F\\">代理模式</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F\\">行为型模式</a>\\n<ul>\\n<li><a href=\\"#%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F\\">策略模式</a></li>\\n<li><a href=\\"#%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F\\">命令模式</a></li>\\n<li><a href=\\"#%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F\\">中介者模式</a></li>\\n<li><a href=\\"#%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F\\">责任链模式</a></li>\\n<li><a href=\\"#%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F\\">模板方法模式</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E9%97%AE%E9%A2%98\\">问题</a>\\n<ul>\\n<li><a href=\\"#%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB\\">装饰器模式和代理模式的区别</a></li>\\n<li><a href=\\"#%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F%E5%92%8C%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB\\">外观模式和适配器模式的区别</a></li>\\n<li><a href=\\"#%E8%AF%B4%E8%AF%B4grpc%E4%B8%AD%E7%9A%84%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F\\">说说grpc中的建造者模式</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{l as data};
