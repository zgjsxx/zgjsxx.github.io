const n=JSON.parse('{"key":"v-43d7e8d6","path":"/posts/Program_language/cpp/effective-STL/effective-STL-42.html","title":"effective STL-42 确保less<T>和operator<具有相同的语义","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective STL读书笔记"],"description":"effective STL-42 确保less&lt;T&gt;和operator&lt;具有相同的语义 分析 下面有一个类，其有重量和速度两个属性，在operator&lt;中是对weight大小进行比较的。 #include&lt;iostream&gt; #include&lt;algorithm&gt; #include&lt;functional&gt; #include&lt;set&gt; using namespace std; class Widget { public: size_t weight() const { } size_t maxSpeed() const { } bool operator&lt;(const Widget&amp; w) { return this-&gt;weight() &lt; w.weight();//这是按照重量从小到大排序 } private: };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-STL/effective-STL-42.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective STL-42 确保less<T>和operator<具有相同的语义"}],["meta",{"property":"og:description","content":"effective STL-42 确保less&lt;T&gt;和operator&lt;具有相同的语义 分析 下面有一个类，其有重量和速度两个属性，在operator&lt;中是对weight大小进行比较的。 #include&lt;iostream&gt; #include&lt;algorithm&gt; #include&lt;functional&gt; #include&lt;set&gt; using namespace std; class Widget { public: size_t weight() const { } size_t maxSpeed() const { } bool operator&lt;(const Widget&amp; w) { return this-&gt;weight() &lt; w.weight();//这是按照重量从小到大排序 } private: };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-29T07:38:46.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective STL读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-29T07:38:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective STL-42 确保less<T>和operator<具有相同的语义\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-29T07:38:46.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1685345782000,"updatedTime":1685345926000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":1.49,"words":448},"filePathRelative":"posts/Program_language/cpp/effective-STL/effective-STL-42.md","localizedDate":"2023年5月29日","excerpt":"<h1> effective STL-42 确保<code>less&lt;T&gt;</code>和operator&lt;具有相同的语义</h1>\\n<h2> 分析</h2>\\n<p>下面有一个类，其有重量和速度两个属性，在<code>operator&lt;</code>中是对weight大小进行比较的。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;algorithm&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;functional&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;set&gt;</span></span>\\n\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Widget</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    size_t <span class=\\"token function\\">weight</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span>\\n    <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token punctuation\\">}</span>\\n    size_t <span class=\\"token function\\">maxSpeed</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span>\\n    <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">bool</span> <span class=\\"token keyword\\">operator</span><span class=\\"token operator\\">&lt;</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Widget<span class=\\"token operator\\">&amp;</span> w<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">weight</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> w<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">weight</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//这是按照重量从小到大排序</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">private</span><span class=\\"token operator\\">:</span>\\n\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
