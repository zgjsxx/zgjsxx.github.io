const e=JSON.parse('{"key":"v-0d78042d","path":"/posts/Program_language/cpp/effective-STL/effective-STL-1.html","title":"effective STL-1 仔细选择你的容器","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective STL读书笔记"],"description":"effective STL-1 仔细选择你的容器 标准STL序列容器：vector, string, deque, list; 标准STL关联容器：set, multiset, map, multimap; 非标准序列容器: slist(单向链表)， rope(重型字符串)； 非标准关联容器hash_set, hash_multiset, hash_map, hash_multimap； vector&lt;char&gt;可以作为string的替代品； vector作为标准关联容器的替代品； 几种标准非STL容器：数组、bitset、valarray、stakc、queue、priority_queue； vectors是一种可以默认使用的序列类型； 频繁的对序列中部进行插入、删除时应该用list； 大部分插入和删除发生在序列的头或尾时可用选择deque；","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-STL/effective-STL-1.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective STL-1 仔细选择你的容器"}],["meta",{"property":"og:description","content":"effective STL-1 仔细选择你的容器 标准STL序列容器：vector, string, deque, list; 标准STL关联容器：set, multiset, map, multimap; 非标准序列容器: slist(单向链表)， rope(重型字符串)； 非标准关联容器hash_set, hash_multiset, hash_map, hash_multimap； vector&lt;char&gt;可以作为string的替代品； vector作为标准关联容器的替代品； 几种标准非STL容器：数组、bitset、valarray、stakc、queue、priority_queue； vectors是一种可以默认使用的序列类型； 频繁的对序列中部进行插入、删除时应该用list； 大部分插入和删除发生在序列的头或尾时可用选择deque；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-30T03:05:00.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective STL读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-30T03:05:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective STL-1 仔细选择你的容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-30T03:05:00.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1685415542000,"updatedTime":1685415900000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":3}]},"readingTime":{"minutes":2.68,"words":805},"filePathRelative":"posts/Program_language/cpp/effective-STL/effective-STL-1.md","localizedDate":"2023年5月30日","excerpt":"<h1> effective STL-1 仔细选择你的容器</h1>\\n<p>标准STL序列容器：vector, string, deque, list;\\n标准STL关联容器：set, multiset, map, multimap;\\n非标准序列容器:  slist(单向链表)， rope(重型字符串)；\\n非标准关联容器hash_set, hash_multiset, hash_map, hash_multimap；\\n<code>vector&lt;char&gt;</code>可以作为string的替代品；\\nvector作为标准关联容器的替代品；\\n几种标准非STL容器：数组、bitset、valarray、stakc、queue、priority_queue；\\nvectors是一种可以默认使用的序列类型；\\n频繁的对序列中部进行插入、删除时应该用list；\\n大部分插入和删除发生在序列的头或尾时可用选择deque；</p>","autoDesc":true}');export{e as data};
