import{_ as a,V as i,W as l,X as e,Y as t}from"./framework-9a29aaa0.js";const r={},c=e("h1",{id:"effective-c-35-考虑virtual函数以外的其他选择",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#effective-c-35-考虑virtual函数以外的其他选择","aria-hidden":"true"},"#"),t(" effective c++ 35 考虑virtual函数以外的其他选择")],-1),n=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),t(" 总结")],-1),o=e("ul",null,[e("li",null,"使用non-virtual interface(NVI)手法， 那么是Template Method设计模式的一种特殊形式。它以public non-virtual成员函数包裹较低访问性的virtual函数。"),e("li",null,'将virtual函数替换为"函数指针成员变量"， 这是Strategy设计模式的一种分解表现形式。'),e("li",null,"使用std::function成员变量替换virtual函数，因而允许任何可调用对象搭配一个兼容于需求的签名式。这也是Strategy设计模式的某种形式。"),e("li",null,"将继承体系内的virtual函数替换为另一个继承体系内的virtual函数。这是Strategy设计模式的传统实现手法。")],-1),s=[c,n,o];function u(d,f){return i(),l("div",null,s)}const h=a(r,[["render",u],["__file","effective-cpp-35.html.vue"]]);export{h as default};
