import{_ as s,V as i,W as r,X as a,Y as e,$ as c,a0 as n,F as o}from"./framework-9a29aaa0.js";const g={},l=n('<h1 id="git-merge和git-rebase有什么区别" tabindex="-1"><a class="header-anchor" href="#git-merge和git-rebase有什么区别" aria-hidden="true">#</a> git merge和git rebase有什么区别</h1><p><code>git rebase</code>和<code>git merge</code>是在日常开发中常用的用于分支合并的命令，也是非常容易误用的两个命令。本文将通过图文的方式去详解二者之间的区别。</p><h2 id="git-merge" tabindex="-1"><a class="header-anchor" href="#git-merge" aria-hidden="true">#</a> git merge</h2><p><code>git merge</code>会为本次的合并过程生成一条新的commit，并将该commit添加到目的分支上。通常用于将<strong>feature分支的内容向主分支</strong>进行合并。</p><p>如下图所示，在main分支的c2提交后checkout了一个新分支feature。随后feature分支上提交了c3，c5和c7三个提交。于此同时，main分支也在往前推进，产生了c4，c6，c8三个提交。此时由于feture分支已经开发完毕，向main分支进行合并，在解决完冲突之后，main分支上产生了一个新的提交c9。</p><figure><img src="https://raw.githubusercontent.com/zgjsxx/static-img-repo/main/blog/tool/git-merge-git-rebase/git-merge-git-rebase.png" alt="git merge示例" tabindex="0" loading="lazy"><figcaption>git merge示例</figcaption></figure><h2 id="git-rebase" tabindex="-1"><a class="header-anchor" href="#git-rebase" aria-hidden="true">#</a> git rebase</h2><p><code>git rebase</code>是一种变基操作。两个分支有一个最近交汇的点，就称之为&quot;基&quot;。而变基就是移动该&quot;基点&quot;，移动之后的效果就像是刚刚checkout分支一样。 该操作通常用于<strong>从main分支向feature分支同步最近的改动</strong>。</p><p>如下图所示，在main分支的c2提交后checkout了一个新分支feature。随后feature分支上提交了c3，c5和c7三个提交。于此同时，main分支也在往前推进，产生了c4，c6，c8三个提交。由于此时feature分支和main分支变得不一致，并且main分支有人也有修改了相同的文件，因此希望拉取到main分支的最新的改动，于是我们checkout到feature分支，然后执行rebase操作。</p><p>于是两个分支的公共交点转移到了c8，，并且生成了c3&#39;,c5&#39;,c7&#39;三个提交。操作完毕后，就好像从main分支的c8节点开始checkout了一个新分支feature1，然后有了c3&#39;,c5&#39;,c7&#39;三个提交。</p><figure><img src="https://raw.githubusercontent.com/zgjsxx/static-img-repo/main/blog/tool/git-merge-git-rebase/git-merge-git-rebase2.png" alt="git rebase示例" tabindex="0" loading="lazy"><figcaption>git rebase示例</figcaption></figure><h2 id="在线实验" tabindex="-1"><a class="header-anchor" href="#在线实验" aria-hidden="true">#</a> 在线实验</h2>',12),p={href:"https://learngitbranching.js.org/?locale=zh_CN&NODEMO=",target:"_blank",rel:"noopener noreferrer"},m=n(`<p><strong>实验1：git merge</strong></p><p>使用下面的语句准备一些提交：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> feature1
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> checkout main
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/zgjsxx/static-img-repo/main/blog/tool/git-merge-git-rebase/git-merge-1.png" alt="git merge实验1" tabindex="0" loading="lazy"><figcaption>git merge实验1</figcaption></figure><p>此时我们将feature1分支上的内容合并到main分支:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout main
<span class="token function">git</span> merge feature1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/zgjsxx/static-img-repo/main/blog/tool/git-merge-git-rebase/git-merge-2.png" alt="git merge实验2" tabindex="0" loading="lazy"><figcaption>git merge实验2</figcaption></figure><p>可以看到main分支上有了一个新的提交c7。</p><p><code>实验2：git rebase</code></p><p>使用下面的语句准备一些提交：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> feature1
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> checkout main
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;demo&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/zgjsxx/static-img-repo/main/blog/tool/git-merge-git-rebase/git-rebase-1.png" alt="git rebase实验1" tabindex="0" loading="lazy"><figcaption>git rebase实验1</figcaption></figure><p>此时我们将main分支上的改动内容合并到feature分支:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout feature1
<span class="token function">git</span> rebase main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/zgjsxx/static-img-repo/main/blog/tool/git-merge-git-rebase/git-rebase-2.png" alt="git rebase实验2" tabindex="0" loading="lazy"><figcaption>git rebase实验2</figcaption></figure><p>可以看到main和feature1相交的点来到了c6，并生成了c3&#39;和c4&#39;两个提交。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>merge通常用于从feature分支向main分支合并开发的内容。</li><li>rebase通常用于feature分支拉取main分支的最新改动。</li></ul>`,18);function u(d,b){const t=o("ExternalLinkIcon");return i(),r("div",null,[l,a("p",null,[e("下面使用在线平台进行git的相关演练，非常推荐使用下面的在线学习平台 "),a("a",p,[e("git在线操作学习地址"),c(t)]),e("，日常使用git的过程中，如果有一些不太确定的操作行为，可以使用该平台验证，这可以节约你的时间。在不知道这个平台之前，我都是去自己的github上新建一个test repo进行验证的。")]),m])}const f=s(g,[["render",u],["__file","git-merge-git-rebase.html.vue"]]);export{f as default};
