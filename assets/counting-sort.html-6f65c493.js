const t=JSON.parse('{"key":"v-7dd6beec","path":"/posts/datastructure_algorithm/counting-sort.html","title":"计数排序分析","lang":"zh-CN","frontmatter":{"category":["data structure"],"tag":["data structure"],"description":"计数排序分析 算法描述 1.找出待排序的数组中最大和最小的元素； 2.统计数组中每个值为i的元素出现的次数，存入数组C的第i项； 3.对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）； 4.反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1。 counting-sort","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/datastructure_algorithm/counting-sort.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"计数排序分析"}],["meta",{"property":"og:description","content":"计数排序分析 算法描述 1.找出待排序的数组中最大和最小的元素； 2.统计数组中每个值为i的元素出现的次数，存入数组C的第i项； 3.对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）； 4.反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1。 counting-sort"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-27T02:27:28.000Z"}],["meta",{"property":"article:tag","content":"data structure"}],["meta",{"property":"article:modified_time","content":"2023-06-27T02:27:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计数排序分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-27T02:27:28.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":2,"title":"稳定性分析","slug":"稳定性分析","link":"#稳定性分析","children":[]}],"git":{"createdTime":1687746469000,"updatedTime":1687832848000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":1.29,"words":386},"filePathRelative":"posts/datastructure_algorithm/counting-sort.md","localizedDate":"2023年6月26日","excerpt":"<h1> 计数排序分析</h1>\\n<h1> 算法描述</h1>\\n<ul>\\n<li>1.找出待排序的数组中最大和最小的元素；</li>\\n<li>2.统计数组中每个值为i的元素出现的次数，存入数组C的第i项；</li>\\n<li>3.对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）；</li>\\n<li>4.反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1。</li>\\n</ul>\\n<figure><img src=\\"https://raw.githubusercontent.com/zgjsxx/static-img-repo/main/blog/datastructure_algorithm/counting-sort/countingSort.gif\\" alt=\\"counting-sort\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>counting-sort</figcaption></figure>","autoDesc":true}');export{t as data};
