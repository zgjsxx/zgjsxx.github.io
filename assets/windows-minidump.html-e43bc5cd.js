const n=JSON.parse('{"key":"v-55eda6ec","path":"/posts/Windows/application-dev/windows-minidump.html","title":"","lang":"zh-CN","frontmatter":{"description":"windows版本生成minidump #include &lt;Windows.h&gt; #include &lt;Dbghelp.h&gt; void make_minidump(EXCEPTION_POINTERS* e) { auto hDbgHelp = LoadLibraryA(\\"dbghelp\\"); if(hDbgHelp == nullptr) return; auto pMiniDumpWriteDump = (decltype(&amp;MiniDumpWriteDump))GetProcAddress(hDbgHelp, \\"MiniDumpWriteDump\\"); if(pMiniDumpWriteDump == nullptr) return; char name[MAX_PATH]; { auto nameEnd = name + GetModuleFileNameA(GetModuleHandleA(0), name, MAX_PATH); SYSTEMTIME t; GetSystemTime(&amp;t); wsprintfA(nameEnd - strlen(\\".exe\\"), \\"_%4d%02d%02d_%02d%02d%02d.dmp\\", t.wYear, t.wMonth, t.wDay, t.wHour, t.wMinute, t.wSecond); } auto hFile = CreateFileA(name, GENERIC_WRITE, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0); if(hFile == INVALID_HANDLE_VALUE) return; MINIDUMP_EXCEPTION_INFORMATION exceptionInfo; exceptionInfo.ThreadId = GetCurrentThreadId(); exceptionInfo.ExceptionPointers = e; exceptionInfo.ClientPointers = FALSE; auto dumped = pMiniDumpWriteDump( GetCurrentProcess(), GetCurrentProcessId(), hFile, MINIDUMP_TYPE(MiniDumpWithIndirectlyReferencedMemory | MiniDumpScanMemory), e ? &amp;exceptionInfo : nullptr, nullptr, nullptr); CloseHandle(hFile); return; } LONG CALLBACK unhandled_handler(EXCEPTION_POINTERS* e) { make_minidump(e); return EXCEPTION_CONTINUE_SEARCH; } int main() { SetUnhandledExceptionFilter(unhandled_handler); int *a = NULL; *a = 5; return *(int*)0; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Windows/application-dev/windows-minidump.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:description","content":"windows版本生成minidump #include &lt;Windows.h&gt; #include &lt;Dbghelp.h&gt; void make_minidump(EXCEPTION_POINTERS* e) { auto hDbgHelp = LoadLibraryA(\\"dbghelp\\"); if(hDbgHelp == nullptr) return; auto pMiniDumpWriteDump = (decltype(&amp;MiniDumpWriteDump))GetProcAddress(hDbgHelp, \\"MiniDumpWriteDump\\"); if(pMiniDumpWriteDump == nullptr) return; char name[MAX_PATH]; { auto nameEnd = name + GetModuleFileNameA(GetModuleHandleA(0), name, MAX_PATH); SYSTEMTIME t; GetSystemTime(&amp;t); wsprintfA(nameEnd - strlen(\\".exe\\"), \\"_%4d%02d%02d_%02d%02d%02d.dmp\\", t.wYear, t.wMonth, t.wDay, t.wHour, t.wMinute, t.wSecond); } auto hFile = CreateFileA(name, GENERIC_WRITE, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0); if(hFile == INVALID_HANDLE_VALUE) return; MINIDUMP_EXCEPTION_INFORMATION exceptionInfo; exceptionInfo.ThreadId = GetCurrentThreadId(); exceptionInfo.ExceptionPointers = e; exceptionInfo.ClientPointers = FALSE; auto dumped = pMiniDumpWriteDump( GetCurrentProcess(), GetCurrentProcessId(), hFile, MINIDUMP_TYPE(MiniDumpWithIndirectlyReferencedMemory | MiniDumpScanMemory), e ? &amp;exceptionInfo : nullptr, nullptr, nullptr); CloseHandle(hFile); return; } LONG CALLBACK unhandled_handler(EXCEPTION_POINTERS* e) { make_minidump(e); return EXCEPTION_CONTINUE_SEARCH; } int main() { SetUnhandledExceptionFilter(unhandled_handler); int *a = NULL; *a = 5; return *(int*)0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-29T08:19:28.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-29T08:19:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-29T08:19:28.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1711700368000,"updatedTime":1711700368000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.44,"words":132},"filePathRelative":"posts/Windows/application-dev/windows-minidump.md","localizedDate":"2024年3月29日","excerpt":"<p>windows版本生成minidump</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;Windows.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;Dbghelp.h&gt;</span></span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">make_minidump</span><span class=\\"token punctuation\\">(</span>EXCEPTION_POINTERS<span class=\\"token operator\\">*</span> e<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">auto</span> hDbgHelp <span class=\\"token operator\\">=</span> <span class=\\"token function\\">LoadLibraryA</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"dbghelp\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>hDbgHelp <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">nullptr</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">auto</span> pMiniDumpWriteDump <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">decltype</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>MiniDumpWriteDump<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token function\\">GetProcAddress</span><span class=\\"token punctuation\\">(</span>hDbgHelp<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"MiniDumpWriteDump\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>pMiniDumpWriteDump <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">nullptr</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">char</span> name<span class=\\"token punctuation\\">[</span>MAX_PATH<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">auto</span> nameEnd <span class=\\"token operator\\">=</span> name <span class=\\"token operator\\">+</span> <span class=\\"token function\\">GetModuleFileNameA</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">GetModuleHandleA</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">,</span> MAX_PATH<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        SYSTEMTIME t<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">GetSystemTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>t<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">wsprintfA</span><span class=\\"token punctuation\\">(</span>nameEnd <span class=\\"token operator\\">-</span> <span class=\\"token function\\">strlen</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\".exe\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token string\\">\\"_%4d%02d%02d_%02d%02d%02d.dmp\\"</span><span class=\\"token punctuation\\">,</span>\\n            t<span class=\\"token punctuation\\">.</span>wYear<span class=\\"token punctuation\\">,</span> t<span class=\\"token punctuation\\">.</span>wMonth<span class=\\"token punctuation\\">,</span> t<span class=\\"token punctuation\\">.</span>wDay<span class=\\"token punctuation\\">,</span> t<span class=\\"token punctuation\\">.</span>wHour<span class=\\"token punctuation\\">,</span> t<span class=\\"token punctuation\\">.</span>wMinute<span class=\\"token punctuation\\">,</span> t<span class=\\"token punctuation\\">.</span>wSecond<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">auto</span> hFile <span class=\\"token operator\\">=</span> <span class=\\"token function\\">CreateFileA</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> GENERIC_WRITE<span class=\\"token punctuation\\">,</span> FILE_SHARE_READ<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> CREATE_ALWAYS<span class=\\"token punctuation\\">,</span> FILE_ATTRIBUTE_NORMAL<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>hFile <span class=\\"token operator\\">==</span> INVALID_HANDLE_VALUE<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\n    MINIDUMP_EXCEPTION_INFORMATION exceptionInfo<span class=\\"token punctuation\\">;</span>\\n    exceptionInfo<span class=\\"token punctuation\\">.</span>ThreadId <span class=\\"token operator\\">=</span> <span class=\\"token function\\">GetCurrentThreadId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    exceptionInfo<span class=\\"token punctuation\\">.</span>ExceptionPointers <span class=\\"token operator\\">=</span> e<span class=\\"token punctuation\\">;</span>\\n    exceptionInfo<span class=\\"token punctuation\\">.</span>ClientPointers <span class=\\"token operator\\">=</span> FALSE<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">auto</span> dumped <span class=\\"token operator\\">=</span> <span class=\\"token function\\">pMiniDumpWriteDump</span><span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token function\\">GetCurrentProcess</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token function\\">GetCurrentProcessId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        hFile<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token function\\">MINIDUMP_TYPE</span><span class=\\"token punctuation\\">(</span>MiniDumpWithIndirectlyReferencedMemory <span class=\\"token operator\\">|</span> MiniDumpScanMemory<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        e <span class=\\"token operator\\">?</span> <span class=\\"token operator\\">&amp;</span>exceptionInfo <span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">nullptr</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">nullptr</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token keyword\\">nullptr</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token function\\">CloseHandle</span><span class=\\"token punctuation\\">(</span>hFile<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nLONG CALLBACK <span class=\\"token function\\">unhandled_handler</span><span class=\\"token punctuation\\">(</span>EXCEPTION_POINTERS<span class=\\"token operator\\">*</span> e<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">make_minidump</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> EXCEPTION_CONTINUE_SEARCH<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">SetUnhandledExceptionFilter</span><span class=\\"token punctuation\\">(</span>unhandled_handler<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span>a <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token operator\\">*</span>a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
