const t=JSON.parse('{"key":"v-21ba21da","path":"/posts/Program_language/cpp/cpp_googlestyle_static_global_var.html","title":"c++谷歌规范 静态和全局变量","lang":"zh-CN","frontmatter":{"category":["C++"],"description":"c++谷歌规范 静态和全局变量 2.5. 静态和全局变量 Tip 禁止定义静态储存周期非POD变量，禁止使用含有副作用的函数初始化POD全局变量，因为多编译单元中的静态变量执行时的构造和析构顺序是未明确的，这将导致代码的不可移植。 禁止使用类的 静态储存周期 变量：由于构造和析构函数调用顺序的不确定性，它们会导致难以发现的 bug 。不过 constexpr 变量除外，毕竟它们又不涉及动态初始化或析构。 静态生存周期的对象，即包括了全局变量，静态变量，静态类成员变量和函数静态变量，都必须是原生数据类型 (POD : Plain Old Data): 即 int, char 和 float, 以及 POD 类型的指针、数组和结构体。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/cpp_googlestyle_static_global_var.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"c++谷歌规范 静态和全局变量"}],["meta",{"property":"og:description","content":"c++谷歌规范 静态和全局变量 2.5. 静态和全局变量 Tip 禁止定义静态储存周期非POD变量，禁止使用含有副作用的函数初始化POD全局变量，因为多编译单元中的静态变量执行时的构造和析构顺序是未明确的，这将导致代码的不可移植。 禁止使用类的 静态储存周期 变量：由于构造和析构函数调用顺序的不确定性，它们会导致难以发现的 bug 。不过 constexpr 变量除外，毕竟它们又不涉及动态初始化或析构。 静态生存周期的对象，即包括了全局变量，静态变量，静态类成员变量和函数静态变量，都必须是原生数据类型 (POD : Plain Old Data): 即 int, char 和 float, 以及 POD 类型的指针、数组和结构体。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T15:45:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-24T15:45:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++谷歌规范 静态和全局变量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T15:45:50.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1682351150000,"updatedTime":1682351150000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":4.07,"words":1222},"filePathRelative":"posts/Program_language/cpp/cpp_googlestyle_static_global_var.md","localizedDate":"2023年4月24日","excerpt":"<h1> c++谷歌规范 静态和全局变量</h1>\\n<p>2.5. 静态和全局变量\\nTip</p>\\n<p>禁止定义静态储存周期非POD变量，禁止使用含有副作用的函数初始化POD全局变量，因为多编译单元中的静态变量执行时的构造和析构顺序是未明确的，这将导致代码的不可移植。</p>\\n<p>禁止使用类的 静态储存周期 变量：由于构造和析构函数调用顺序的不确定性，它们会导致难以发现的 bug 。不过 constexpr 变量除外，毕竟它们又不涉及动态初始化或析构。</p>\\n<p>静态生存周期的对象，即包括了全局变量，静态变量，静态类成员变量和函数静态变量，都必须是原生数据类型 (POD : Plain Old Data): 即 int, char 和 float, 以及 POD 类型的指针、数组和结构体。</p>","autoDesc":true}');export{t as data};
