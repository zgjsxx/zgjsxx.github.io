import{_ as n,V as a,W as s,a0 as e}from"./framework-c954d91f.js";const o={},d=e(`<h1 id="linux-0-11-kernel目录进程管理trap-c详解" tabindex="-1"><a class="header-anchor" href="#linux-0-11-kernel目录进程管理trap-c详解" aria-hidden="true">#</a> Linux-0.11 kernel目录进程管理trap.c详解</h1><h2 id="模块简介" tabindex="-1"><a class="header-anchor" href="#模块简介" aria-hidden="true">#</a> 模块简介</h2><h2 id="函数详解" tabindex="-1"><a class="header-anchor" href="#函数详解" aria-hidden="true">#</a> 函数详解</h2><h3 id="die" tabindex="-1"><a class="header-anchor" href="#die" aria-hidden="true">#</a> die</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">die</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> str<span class="token punctuation">,</span><span class="token keyword">long</span> esp_ptr<span class="token punctuation">,</span><span class="token keyword">long</span> nr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-double-fault" tabindex="-1"><a class="header-anchor" href="#do-double-fault" aria-hidden="true">#</a> do_double_fault</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_double_fault</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-general-protection" tabindex="-1"><a class="header-anchor" href="#do-general-protection" aria-hidden="true">#</a> do_general_protection</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_general_protection</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-divide-error" tabindex="-1"><a class="header-anchor" href="#do-divide-error" aria-hidden="true">#</a> do_divide_error</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_divide_error</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-int3" tabindex="-1"><a class="header-anchor" href="#do-int3" aria-hidden="true">#</a> do_int3</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_int3</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token operator">*</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">,</span>
		<span class="token keyword">long</span> fs<span class="token punctuation">,</span><span class="token keyword">long</span> es<span class="token punctuation">,</span><span class="token keyword">long</span> ds<span class="token punctuation">,</span>
		<span class="token keyword">long</span> ebp<span class="token punctuation">,</span><span class="token keyword">long</span> esi<span class="token punctuation">,</span><span class="token keyword">long</span> edi<span class="token punctuation">,</span>
		<span class="token keyword">long</span> edx<span class="token punctuation">,</span><span class="token keyword">long</span> ecx<span class="token punctuation">,</span><span class="token keyword">long</span> ebx<span class="token punctuation">,</span><span class="token keyword">long</span> eax<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="do-nmi" tabindex="-1"><a class="header-anchor" href="#do-nmi" aria-hidden="true">#</a> do_nmi</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_nmi</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-debug" tabindex="-1"><a class="header-anchor" href="#do-debug" aria-hidden="true">#</a> do_debug</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_debug</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-overflow" tabindex="-1"><a class="header-anchor" href="#do-overflow" aria-hidden="true">#</a> do_overflow</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_overflow</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-bounds" tabindex="-1"><a class="header-anchor" href="#do-bounds" aria-hidden="true">#</a> do_bounds</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_bounds</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-invalid-op" tabindex="-1"><a class="header-anchor" href="#do-invalid-op" aria-hidden="true">#</a> do_invalid_op</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_invalid_op</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-device-not-available" tabindex="-1"><a class="header-anchor" href="#do-device-not-available" aria-hidden="true">#</a> do_device_not_available</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_device_not_available</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-coprocessor-segment-overrun" tabindex="-1"><a class="header-anchor" href="#do-coprocessor-segment-overrun" aria-hidden="true">#</a> do_coprocessor_segment_overrun</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_coprocessor_segment_overrun</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-invalid-tss" tabindex="-1"><a class="header-anchor" href="#do-invalid-tss" aria-hidden="true">#</a> do_invalid_TSS</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_invalid_TSS</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span><span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-segment-not-present" tabindex="-1"><a class="header-anchor" href="#do-segment-not-present" aria-hidden="true">#</a> do_segment_not_present</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_segment_not_present</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span><span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-stack-segment" tabindex="-1"><a class="header-anchor" href="#do-stack-segment" aria-hidden="true">#</a> do_stack_segment</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_stack_segment</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span><span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-coprocessor-error" tabindex="-1"><a class="header-anchor" href="#do-coprocessor-error" aria-hidden="true">#</a> do_coprocessor_error</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_coprocessor_error</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-reserved" tabindex="-1"><a class="header-anchor" href="#do-reserved" aria-hidden="true">#</a> do_reserved</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_reserved</span><span class="token punctuation">(</span><span class="token keyword">long</span> esp<span class="token punctuation">,</span> <span class="token keyword">long</span> error_code<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="trap-init" tabindex="-1"><a class="header-anchor" href="#trap-init" aria-hidden="true">#</a> trap_init</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">trap_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q &amp; A</h2>`,40),c=[d];function t(i,r){return a(),s("div",null,c)}const l=n(o,[["render",t],["__file","Linux-0.11-kernel-trap.html.vue"]]);export{l as default};
