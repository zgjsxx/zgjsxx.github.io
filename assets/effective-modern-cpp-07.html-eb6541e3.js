const n=JSON.parse('{"key":"v-d6850efe","path":"/posts/Program_language/cpp/effective-modern-cpp/effective-modern-cpp-07.html","title":"Item7：区别使用()和{}创建对象","lang":"zh-CN","frontmatter":{"category":["C++","effective Modern C++"],"description":"Item7：区别使用()和{}创建对象 初始化的方式 c++常见的初始化方式有如下几种： int x(0); //使用圆括号初始化 int y = 0; //使用\\"=\\"初始化 int z{ 0 }; //使用花括号初始化 int z = { 0 }; //使用\\"=\\"和花括号， 和只有花括号没有区别","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-modern-cpp/effective-modern-cpp-07.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"Item7：区别使用()和{}创建对象"}],["meta",{"property":"og:description","content":"Item7：区别使用()和{}创建对象 初始化的方式 c++常见的初始化方式有如下几种： int x(0); //使用圆括号初始化 int y = 0; //使用\\"=\\"初始化 int z{ 0 }; //使用花括号初始化 int z = { 0 }; //使用\\"=\\"和花括号， 和只有花括号没有区别"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-11T06:58:32.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-11T06:58:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Item7：区别使用()和{}创建对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-11T06:58:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"初始化的方式","slug":"初始化的方式","link":"#初始化的方式","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1683788312000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":2.92,"words":877},"filePathRelative":"posts/Program_language/cpp/effective-modern-cpp/effective-modern-cpp-07.md","localizedDate":"2023年5月11日","excerpt":"<h1> Item7：区别使用()和{}创建对象</h1>\\n<h2> 初始化的方式</h2>\\n<p>c++常见的初始化方式有如下几种：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">int</span> <span class=\\"token function\\">x</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>               <span class=\\"token comment\\">//使用圆括号初始化</span>\\n\\n<span class=\\"token keyword\\">int</span> y <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>              <span class=\\"token comment\\">//使用\\"=\\"初始化</span>\\n\\n<span class=\\"token keyword\\">int</span> z<span class=\\"token punctuation\\">{</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>             <span class=\\"token comment\\">//使用花括号初始化</span>\\n\\n<span class=\\"token keyword\\">int</span> z <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">//使用\\"=\\"和花括号， 和只有花括号没有区别</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
