import{_ as a,V as n,W as s,a0 as e}from"./framework-c954d91f.js";const t={},o=e(`<h1 id="linux-0-11-文件系统char-dev-c详解" tabindex="-1"><a class="header-anchor" href="#linux-0-11-文件系统char-dev-c详解" aria-hidden="true">#</a> Linux-0.11 文件系统char_dev.c详解</h1><h2 id="模块简介" tabindex="-1"><a class="header-anchor" href="#模块简介" aria-hidden="true">#</a> 模块简介</h2><h2 id="函数详解" tabindex="-1"><a class="header-anchor" href="#函数详解" aria-hidden="true">#</a> 函数详解</h2><h3 id="rw-ttyx" tabindex="-1"><a class="header-anchor" href="#rw-ttyx" aria-hidden="true">#</a> rw_ttyx</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">rw_ttyx</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span><span class="token keyword">unsigned</span> minor<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span><span class="token keyword">int</span> count<span class="token punctuation">,</span><span class="token class-name">off_t</span> <span class="token operator">*</span> pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rw-tty" tabindex="-1"><a class="header-anchor" href="#rw-tty" aria-hidden="true">#</a> rw_tty</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">rw_tty</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span><span class="token keyword">unsigned</span> minor<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span><span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token class-name">off_t</span> <span class="token operator">*</span> pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rw-ram" tabindex="-1"><a class="header-anchor" href="#rw-ram" aria-hidden="true">#</a> rw_ram</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">rw_ram</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token class-name">off_t</span> <span class="token operator">*</span>pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rw-mem" tabindex="-1"><a class="header-anchor" href="#rw-mem" aria-hidden="true">#</a> rw_mem</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">rw_mem</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token class-name">off_t</span> <span class="token operator">*</span> pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rw-kmem" tabindex="-1"><a class="header-anchor" href="#rw-kmem" aria-hidden="true">#</a> rw_kmem</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">rw_kmem</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token class-name">off_t</span> <span class="token operator">*</span> pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rw-port" tabindex="-1"><a class="header-anchor" href="#rw-port" aria-hidden="true">#</a> rw_port</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">rw_port</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token class-name">off_t</span> <span class="token operator">*</span> pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rw-memory" tabindex="-1"><a class="header-anchor" href="#rw-memory" aria-hidden="true">#</a> rw_memory</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">rw_memory</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> minor<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token class-name">off_t</span> <span class="token operator">*</span> pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rw-char" tabindex="-1"><a class="header-anchor" href="#rw-char" aria-hidden="true">#</a> rw_char</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">rw_char</span><span class="token punctuation">(</span><span class="token keyword">int</span> rw<span class="token punctuation">,</span><span class="token keyword">int</span> dev<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token class-name">off_t</span> <span class="token operator">*</span> pos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q &amp; A</h2>`,20),p=[o];function c(r,i){return n(),s("div",null,p)}const d=a(t,[["render",c],["__file","Linux-0.11-fs-char_dev.html.vue"]]);export{d as default};
