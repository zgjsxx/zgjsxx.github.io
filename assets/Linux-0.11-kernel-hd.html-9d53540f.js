import{_ as n,V as s,W as a,a0 as t}from"./framework-c954d91f.js";const e={},p=t(`<h1 id="linux-0-11-kernel目录hd-c详解" tabindex="-1"><a class="header-anchor" href="#linux-0-11-kernel目录hd-c详解" aria-hidden="true">#</a> Linux-0.11 kernel目录hd.c详解</h1><h2 id="read-intr" tabindex="-1"><a class="header-anchor" href="#read-intr" aria-hidden="true">#</a> read_intr</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read_intr</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该函数是磁盘的读中断调用函数。</p><p>将HD_DATA端口依次读取256个字（512字节）到buffer中。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">port_read</span><span class="token punctuation">(</span>HD_DATA<span class="token punctuation">,</span>CURRENT<span class="token operator">-&gt;</span>buffer<span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着对请求中的一些标记进行修改。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>CURRENT<span class="token operator">-&gt;</span>errors <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//清除出错次数</span>
CURRENT<span class="token operator">-&gt;</span>buffer <span class="token operator">+=</span> <span class="token number">512</span><span class="token punctuation">;</span><span class="token comment">//调整buffer指针</span>
CURRENT<span class="token operator">-&gt;</span>sector<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//起始扇区+1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>CURRENT<span class="token operator">-&gt;</span>nr_sectors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  do_hd <span class="token operator">=</span> <span class="token operator">&amp;</span>read_intr<span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">end_request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">do_hd_request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//再次调用do_hd_request去处理其他硬盘请求项</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="write-intr" tabindex="-1"><a class="header-anchor" href="#write-intr" aria-hidden="true">#</a> write_intr</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write_intr</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>CURRENT<span class="token operator">-&gt;</span>nr_sectors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  CURRENT<span class="token operator">-&gt;</span>sector<span class="token operator">++</span><span class="token punctuation">;</span>
  CURRENT<span class="token operator">-&gt;</span>buffer <span class="token operator">+=</span> <span class="token number">512</span><span class="token punctuation">;</span>
  do_hd <span class="token operator">=</span> <span class="token operator">&amp;</span>write_intr<span class="token punctuation">;</span>
  <span class="token function">port_write</span><span class="token punctuation">(</span>HD_DATA<span class="token punctuation">,</span>CURRENT<span class="token operator">-&gt;</span>buffer<span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="do-hd-request" tabindex="-1"><a class="header-anchor" href="#do-hd-request" aria-hidden="true">#</a> do_hd_request</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">do_hd_request</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="hd-out" tabindex="-1"><a class="header-anchor" href="#hd-out" aria-hidden="true">#</a> hd_out</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hd_out</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> drive<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> nsect<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sect<span class="token punctuation">,</span>
		<span class="token keyword">unsigned</span> <span class="token keyword">int</span> head<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> cyl<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span>
		<span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>intr_addr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>端口</th><th>名称</th><th>读操作</th><th>写操作</th></tr></thead><tbody><tr><td>0x1f0</td><td>HD_DATA</td><td>数据寄存器</td><td></td></tr><tr><td>0x1f1</td><td>HD_ERROR</td><td>错误寄存器</td><td></td></tr><tr><td>0x1f2</td><td>HD_NSECTOR</td><td>扇区数寄存器 总扇区数</td><td></td></tr><tr><td>0x1f3</td><td>HD_SECTOR</td><td>扇区号寄存器 起始扇区</td><td></td></tr><tr><td>0x1f4</td><td>HD_LCYL</td><td>柱面号寄存器 柱面号低字节</td><td></td></tr><tr><td>0x1f5</td><td>HD_HCYL</td><td>柱面号寄存器 柱面号高字节</td><td></td></tr><tr><td>0x1f6</td><td>HD_CURRENT</td><td>磁头寄存器 磁头号</td><td></td></tr><tr><td>0x1f7</td><td>HD_STATUS</td><td>主状态寄存器</td><td>命令寄存器</td></tr><tr><td>0x3f6</td><td>HD_CMD</td><td></td><td>硬盘控制寄存器</td></tr><tr><td>0x3f7</td><td></td><td>数字输入寄存器</td><td></td></tr></tbody></table><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">register</span> <span class="token keyword">int</span> port <span class="token keyword">asm</span><span class="token punctuation">(</span><span class="token string">&quot;dx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>drive<span class="token operator">&gt;</span><span class="token number">1</span> <span class="token operator">||</span> head<span class="token operator">&gt;</span><span class="token number">15</span><span class="token punctuation">)</span>
  <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;Trying to write bad sector&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">controller_ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;HD controller not ready&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
do_hd <span class="token operator">=</span> intr_addr<span class="token punctuation">;</span> <span class="token comment">// do_hd 函数指针将在硬盘中断程序中被调用</span>
<span class="token function">outb_p</span><span class="token punctuation">(</span>hd_info<span class="token punctuation">[</span>drive<span class="token punctuation">]</span><span class="token punctuation">.</span>ctl<span class="token punctuation">,</span>HD_CMD<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//向控制寄存器(0x3f6)输出控制字节</span>
port<span class="token operator">=</span>HD_DATA<span class="token punctuation">;</span>  <span class="token comment">//置dx 为数据寄存器端口(0x1f0)</span>
<span class="token function">outb_p</span><span class="token punctuation">(</span>hd_info<span class="token punctuation">[</span>drive<span class="token punctuation">]</span><span class="token punctuation">.</span>wpcom<span class="token operator">&gt;&gt;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">++</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">outb_p</span><span class="token punctuation">(</span>nsect<span class="token punctuation">,</span><span class="token operator">++</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//参数：读/写扇区总数</span>
<span class="token function">outb_p</span><span class="token punctuation">(</span>sect<span class="token punctuation">,</span><span class="token operator">++</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//参数：起始扇区</span>
<span class="token function">outb_p</span><span class="token punctuation">(</span>cyl<span class="token punctuation">,</span><span class="token operator">++</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//参数：柱面号低8 位</span>
<span class="token function">outb_p</span><span class="token punctuation">(</span>cyl<span class="token operator">&gt;&gt;</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token operator">++</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//参数：柱面号高8 位</span>
<span class="token function">outb_p</span><span class="token punctuation">(</span><span class="token number">0xA0</span><span class="token operator">|</span><span class="token punctuation">(</span>drive<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">|</span>head<span class="token punctuation">,</span><span class="token operator">++</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//参数：驱动器号+磁头号</span>
<span class="token function">outb</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span><span class="token operator">++</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//命令：硬盘控制命令</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="recal-intr" tabindex="-1"><a class="header-anchor" href="#recal-intr" aria-hidden="true">#</a> recal_intr</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">recal_intr</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="bad-rw-intr" tabindex="-1"><a class="header-anchor" href="#bad-rw-intr" aria-hidden="true">#</a> bad_rw_intr</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">bad_rw_intr</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="unexpected-hd-interrupt" tabindex="-1"><a class="header-anchor" href="#unexpected-hd-interrupt" aria-hidden="true">#</a> unexpected_hd_interrupt</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">unexpected_hd_interrupt</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="reset-controller" tabindex="-1"><a class="header-anchor" href="#reset-controller" aria-hidden="true">#</a> reset_controller</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">reset_controller</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="drive-busy" tabindex="-1"><a class="header-anchor" href="#drive-busy" aria-hidden="true">#</a> drive_busy</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">drive_busy</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="win-result" tabindex="-1"><a class="header-anchor" href="#win-result" aria-hidden="true">#</a> win_result</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">win_result</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="controller-ready" tabindex="-1"><a class="header-anchor" href="#controller-ready" aria-hidden="true">#</a> controller_ready</h1><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">controller_ready</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sys-setup" tabindex="-1"><a class="header-anchor" href="#sys-setup" aria-hidden="true">#</a> sys_setup</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sys_setup</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> BIOS<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="hd-init" tabindex="-1"><a class="header-anchor" href="#hd-init" aria-hidden="true">#</a> hd_init</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">hd_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,36),o=[p];function c(i,d){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","Linux-0.11-kernel-hd.html.vue"]]);export{r as default};
