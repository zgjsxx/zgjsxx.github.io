const e=JSON.parse('{"key":"v-a6536e10","path":"/posts/Program_language/cpp/effective-cpp-31.html","title":"effective c++ 31 文件间的编译依存关系降低至最低","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 31 文件间的编译依存关系降低至最低 Handle classes(pImpl设计) Interface classes 总结 支持\\"编译依存最小化\\"的一般构想时:相依于声明式，不要相依于定义式。基于此构想的两个手段是Handle class和Interface classes。 程序头文件应该以\\"完全且仅有声明式\\"的形式存在。这种做法不论是否涉及template都使用。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-31.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 31 文件间的编译依存关系降低至最低"}],["meta",{"property":"og:description","content":"effective c++ 31 文件间的编译依存关系降低至最低 Handle classes(pImpl设计) Interface classes 总结 支持\\"编译依存最小化\\"的一般构想时:相依于声明式，不要相依于定义式。基于此构想的两个手段是Handle class和Interface classes。 程序头文件应该以\\"完全且仅有声明式\\"的形式存在。这种做法不论是否涉及template都使用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T02:28:15.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-08T02:28:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 31 文件间的编译依存关系降低至最低\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-08T02:28:15.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Handle classes(pImpl设计)","slug":"handle-classes-pimpl设计","link":"#handle-classes-pimpl设计","children":[]},{"level":2,"title":"Interface classes","slug":"interface-classes","link":"#interface-classes","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683512895000,"updatedTime":1683512895000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.39,"words":117},"filePathRelative":"posts/Program_language/cpp/effective-cpp-31.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective c++ 31 文件间的编译依存关系降低至最低</h1>\\n<h2> Handle classes(pImpl设计)</h2>\\n<h2> Interface classes</h2>\\n<h2> 总结</h2>\\n<ul>\\n<li>支持\\"编译依存最小化\\"的一般构想时:相依于声明式，不要相依于定义式。基于此构想的两个手段是Handle class和Interface classes。</li>\\n<li>程序头文件应该以\\"完全且仅有声明式\\"的形式存在。这种做法不论是否涉及template都使用。</li>\\n</ul>\\n","autoDesc":true}');export{e as data};
