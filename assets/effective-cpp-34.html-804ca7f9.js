const e=JSON.parse('{"key":"v-34788403","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-34.html","title":"effective c++ 34 区分接口实现和实现继承","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 34 区分接口实现和实现继承 本节内容比较简单， 对于一个写过一段时间c++代码同志不难理解。 分析 class Shape { public: \\tvirtual void draw() = 0 ; \\tvirtual void error(const std::string&amp; msg) {} \\tint objectID() const; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-34.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 34 区分接口实现和实现继承"}],["meta",{"property":"og:description","content":"effective c++ 34 区分接口实现和实现继承 本节内容比较简单， 对于一个写过一段时间c++代码同志不难理解。 分析 class Shape { public: \\tvirtual void draw() = 0 ; \\tvirtual void error(const std::string&amp; msg) {} \\tint objectID() const; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T07:51:18.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-15T07:51:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 34 区分接口实现和实现继承\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-15T07:51:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1684137078000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":0.87,"words":262},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-34.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 34 区分接口实现和实现继承</h1>\\n<p>本节内容比较简单， 对于一个写过一段时间c++代码同志不难理解。</p>\\n<h2> 分析</h2>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Shape</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n\\t<span class=\\"token keyword\\">virtual</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">draw</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">virtual</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> std<span class=\\"token double-colon punctuation\\">::</span>string<span class=\\"token operator\\">&amp;</span> msg<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">objectID</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
