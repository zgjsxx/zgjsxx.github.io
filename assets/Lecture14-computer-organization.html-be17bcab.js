import{_ as n,V as s,W as a,a0 as e}from"./framework-9a29aaa0.js";const t={},c=e(`<h2 id="十四讲-中期回顾-计算机组织和缓存" tabindex="-1"><a class="header-anchor" href="#十四讲-中期回顾-计算机组织和缓存" aria-hidden="true">#</a> 十四讲 中期回顾 计算机组织和缓存</h2><p>C/C++结构体实际上只不过是按照一定的排列方式存储在内存中的多个数据。如果我们想要与使用结构体的C/C++程序进行交互，我们需要了解如何在汇编语言中构造出等效的内容。</p><p>一个简单的结构体的例子如下所示：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">thing</span> <span class="token punctuation">{</span> 
    <span class="token keyword">double</span> a<span class="token punctuation">;</span>  <span class="token comment">// 8 bytes</span>
    <span class="token keyword">char</span>   b<span class="token punctuation">;</span>  <span class="token comment">// 1 byte</span>
    <span class="token keyword">int</span>    c<span class="token punctuation">;</span>  <span class="token comment">// 4 bytes</span>
    <span class="token keyword">char</span><span class="token operator">*</span>  d<span class="token punctuation">;</span>  <span class="token comment">// 8 bytes    </span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),p=[c];function o(i,l){return s(),a("div",null,p)}const d=n(t,[["render",o],["__file","Lecture14-computer-organization.html.vue"]]);export{d as default};
