import{_ as e,V as a,W as n,a0 as s}from"./framework-c954d91f.js";const t={},d=s(`<h1 id="linux-0-11中的汇编" tabindex="-1"><a class="header-anchor" href="#linux-0-11中的汇编" aria-hidden="true">#</a> Linux-0.11中的汇编</h1><h2 id="内嵌汇编" tabindex="-1"><a class="header-anchor" href="#内嵌汇编" aria-hidden="true">#</a> 内嵌汇编</h2><p>基本的格式是：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">asm</span> <span class="token punctuation">(</span> <span class="token string">&quot;statements&quot;</span> 
    <span class="token operator">:</span> output_regs 
    <span class="token operator">:</span> input_regs 
    <span class="token operator">:</span> clobbered_regs
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中符号&quot;c&quot;(count)指示要把count的值放入ecx寄存器 类似的还有： a eax b ebx c ecx d edx S esi D edi I 常数值，(0 - 31) q,r 动态分配的寄存器 g eax,ebx,ecx,edx或内存变量 A 把eax和edx合成一个64位的寄存器(use long longs)</p><h2 id="mov-x" tabindex="-1"><a class="header-anchor" href="#mov-x" aria-hidden="true">#</a> mov(x)</h2><p>movb:复制8位数据(1个字节)</p><p>movw:复制16位数据(2个字节)</p><p>movl:复制32位数据(4个字节)</p><h2 id="std和cld" tabindex="-1"><a class="header-anchor" href="#std和cld" aria-hidden="true">#</a> std和cld</h2><p>CLD： 设置DF=0</p><p>STD： 设置DF=1</p><p>movb: if DF = 0: SI = SI + 1 , DI = DI + 1 ； else if DF = 1 SI = SI - 1 , DI = DI - 1 ;</p><p>movw: if DF = 0: SI = SI + 2 , DI = DI + 2 ； else if DF = 1: SI = SI - 2 , DI = DI - 2 ;</p><h2 id="test" tabindex="-1"><a class="header-anchor" href="#test" aria-hidden="true">#</a> TEST</h2><p><strong>功能</strong>: 执行BIT与BIT之间的<strong>逻辑与</strong>运算</p><p>TEST可以判断测试位是否为0。</p><h2 id="je-jz" tabindex="-1"><a class="header-anchor" href="#je-jz" aria-hidden="true">#</a> JE JZ</h2><p>JE和JZ的功能是相同的。</p><p>如果标志位ZF=1， 则进行跳转</p><p>如果标志位ZF=0， 则不进行跳转</p><h2 id="jne-jnz" tabindex="-1"><a class="header-anchor" href="#jne-jnz" aria-hidden="true">#</a> JNE JNZ</h2><p>JNE和JNZ的作用是相同的。</p><p>如果标志位ZF=0， 则进行跳转</p><p>如果标志位ZF=1， 则不进行跳转</p>`,25),i=[d];function r(c,o){return a(),n("div",null,i)}const l=e(t,[["render",r],["__file","Linux-0.11-assemble-language.html.vue"]]);export{l as default};
