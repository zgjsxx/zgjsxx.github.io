const e=JSON.parse('{"key":"v-71e6fa5f","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-49.html","title":"effective c++ 49 了解new-handler的行为","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 49 了解new-handler的行为 总结 set_new_handler允许客户指定一个函数，在内存分配无法获得满足时被调用。 Nothrow new是一个颇为局限的工具，因为它只使用与内存分配，后继的构造函数调用还是可能抛出异常。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-49.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 49 了解new-handler的行为"}],["meta",{"property":"og:description","content":"effective c++ 49 了解new-handler的行为 总结 set_new_handler允许客户指定一个函数，在内存分配无法获得满足时被调用。 Nothrow new是一个颇为局限的工具，因为它只使用与内存分配，后继的构造函数调用还是可能抛出异常。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T09:30:25.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-15T09:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 49 了解new-handler的行为\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-15T09:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1684143025000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":0.29,"words":88},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-49.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 49 了解new-handler的行为</h1>\\n<h2> 总结</h2>\\n<ul>\\n<li>set_new_handler允许客户指定一个函数，在内存分配无法获得满足时被调用。</li>\\n<li>Nothrow new是一个颇为局限的工具，因为它只使用与内存分配，后继的构造函数调用还是可能抛出异常。</li>\\n</ul>\\n","autoDesc":true}');export{e as data};
