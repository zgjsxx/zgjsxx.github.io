const e=JSON.parse('{"key":"v-b8404374","path":"/posts/lesson/cs6.824-distributed-system/lesson13.html","title":"cs-6.824第13讲 Spanner","lang":"zh-CN","frontmatter":{"category":["分布式系统"],"tag":["分布式系统"],"description":"cs-6.824第13讲 Spanner cs-6.824第13讲 Spanner 一个系统如何在数据广泛分散的情况下提供分布式事务。这些数据可能散布在互联网及不同的数据中心中。 将数据分布在整个网络中也非常可取，这既是为例容错，也是为了数据可以就近存在。 在实现这一目标的过程中，Spanner至少采用了两个巧妙地设计理念. 其中一点是它们运行两阶段提交，但实际上是通过paxos复制者参与者来执行地，以此来规避两阶段提交因协调器崩溃导致所有人阻塞地问题。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/lesson/cs6.824-distributed-system/lesson13.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"cs-6.824第13讲 Spanner"}],["meta",{"property":"og:description","content":"cs-6.824第13讲 Spanner cs-6.824第13讲 Spanner 一个系统如何在数据广泛分散的情况下提供分布式事务。这些数据可能散布在互联网及不同的数据中心中。 将数据分布在整个网络中也非常可取，这既是为例容错，也是为了数据可以就近存在。 在实现这一目标的过程中，Spanner至少采用了两个巧妙地设计理念. 其中一点是它们运行两阶段提交，但实际上是通过paxos复制者参与者来执行地，以此来规避两阶段提交因协调器崩溃导致所有人阻塞地问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-18T03:23:35.000Z"}],["meta",{"property":"article:tag","content":"分布式系统"}],["meta",{"property":"article:modified_time","content":"2024-10-18T03:23:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cs-6.824第13讲 Spanner\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-18T03:23:35.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1729221815000,"updatedTime":1729221815000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":4.07,"words":1220},"filePathRelative":"posts/lesson/cs6.824-distributed-system/lesson13.md","localizedDate":"2024年10月18日","excerpt":"<ul>\\n<li><a href=\\"#cs-6824%E7%AC%AC13%E8%AE%B2-spanner\\">cs-6.824第13讲 Spanner</a></li>\\n</ul>\\n<h1> cs-6.824第13讲 Spanner</h1>\\n<p>一个系统如何在数据广泛分散的情况下提供分布式事务。这些数据可能散布在互联网及不同的数据中心中。</p>\\n<p>将数据分布在整个网络中也非常可取，这既是为例容错，也是为了数据可以就近存在。</p>\\n<p>在实现这一目标的过程中，Spanner至少采用了两个巧妙地设计理念.</p>\\n<p>其中一点是它们运行两阶段提交，但实际上是通过paxos复制者参与者来执行地，以此来规避两阶段提交因协调器崩溃导致所有人阻塞地问题。</p>","autoDesc":true}');export{e as data};
