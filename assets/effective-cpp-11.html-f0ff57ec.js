const e=JSON.parse('{"key":"v-4309d276","path":"/posts/Program_language/cpp/effective-cpp-11.html","title":"effective c++ 11 operator= 处理自我赋值","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 11 operator= 处理自我赋值 总结 确保当对象自我赋值时operator=有良好行为。其中技术包括比较\\"来源对象\\"和\\"目标对象\\"的地址、精心周到的语句顺序，以及copy-and-swap。 确定任何函数做过操作一个以上的对象，而其中多个对象是同一个对象时，其行为仍然正确。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-11.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 11 operator= 处理自我赋值"}],["meta",{"property":"og:description","content":"effective c++ 11 operator= 处理自我赋值 总结 确保当对象自我赋值时operator=有良好行为。其中技术包括比较\\"来源对象\\"和\\"目标对象\\"的地址、精心周到的语句顺序，以及copy-and-swap。 确定任何函数做过操作一个以上的对象，而其中多个对象是同一个对象时，其行为仍然正确。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T02:28:15.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-08T02:28:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 11 operator= 处理自我赋值\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-08T02:28:15.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683512895000,"updatedTime":1683512895000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.37,"words":110},"filePathRelative":"posts/Program_language/cpp/effective-cpp-11.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective c++ 11 operator= 处理自我赋值</h1>\\n<h2> 总结</h2>\\n<ul>\\n<li>确保当对象自我赋值时operator=有良好行为。其中技术包括比较\\"来源对象\\"和\\"目标对象\\"的地址、精心周到的语句顺序，以及copy-and-swap。</li>\\n<li>确定任何函数做过操作一个以上的对象，而其中多个对象是同一个对象时，其行为仍然正确。</li>\\n</ul>\\n","autoDesc":true}');export{e as data};
