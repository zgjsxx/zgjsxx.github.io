const e=JSON.parse('{"key":"v-ef348746","path":"/posts/tool/linux-cmd/linux-valgrind.html","title":"Valgrind","lang":"zh-CN","frontmatter":{"category":["Linux","tool","valgrind"],"description":"Valgrind 什么是Valgrind? 如何运行Valgrind Valgrind是一个用于检测内存问题的工具，尤其擅长处理内存泄漏问题和非法内存访问的问题。内存泄漏是指通过申请内存的方法(例如malloc)申请了内存确没有使用释放内存的方法(例如free)释放内存而导致的问题。非法的内存访问可能会引起程序的段错误(Segmentaion fault)。 Valgrind工具可以有效的帮助你分析出问题的产生的原因。 valgrind --tool=memcheck --leak-check=full ./main_c","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/tool/linux-cmd/linux-valgrind.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"Valgrind"}],["meta",{"property":"og:description","content":"Valgrind 什么是Valgrind? 如何运行Valgrind Valgrind是一个用于检测内存问题的工具，尤其擅长处理内存泄漏问题和非法内存访问的问题。内存泄漏是指通过申请内存的方法(例如malloc)申请了内存确没有使用释放内存的方法(例如free)释放内存而导致的问题。非法的内存访问可能会引起程序的段错误(Segmentaion fault)。 Valgrind工具可以有效的帮助你分析出问题的产生的原因。 valgrind --tool=memcheck --leak-check=full ./main_c"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-30T08:39:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-30T08:39:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Valgrind\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-30T08:39:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什么是Valgrind? 如何运行Valgrind","slug":"什么是valgrind-如何运行valgrind","link":"#什么是valgrind-如何运行valgrind","children":[]}],"git":{"createdTime":1697637459000,"updatedTime":1706603941000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"posts/tool/linux-cmd/linux-valgrind.md","localizedDate":"2023年10月18日","excerpt":"<h1> Valgrind</h1>\\n<h2> 什么是Valgrind? 如何运行Valgrind</h2>\\n<p>Valgrind是一个用于检测内存问题的工具，尤其擅长处理<strong>内存泄漏</strong>问题和非法内存访问的问题。<strong>内存泄漏</strong>是指通过申请内存的方法(例如malloc)申请了内存确没有使用释放内存的方法(例如free)释放内存而导致的问题。非法的内存访问可能会引起程序的段错误(Segmentaion fault)。 Valgrind工具可以有效的帮助你分析出问题的产生的原因。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>valgrind <span class=\\"token parameter variable\\">--tool</span><span class=\\"token operator\\">=</span>memcheck --leak-check<span class=\\"token operator\\">=</span>full  ./main_c\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
