import{_ as e,V as a,W as i,a0 as t}from"./framework-9a29aaa0.js";const c={},r=t('<h1 id="effective-c-50-new合理替换时机" tabindex="-1"><a class="header-anchor" href="#effective-c-50-new合理替换时机" aria-hidden="true">#</a> effective c++ 50 new合理替换时机</h1><p>本文主要讲解什么场景下我们需要替换编译器提供的operator new或者operator delete。</p><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><ul><li>用来检测运用上的错误。</li><li>为了强化效能</li><li>为了收集使用上的统计数据</li><li>为了检测运用错误</li><li>为了收集动态分配内存之使用统计信息</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>有许多理由需要写个自定的new和delete，包括改善性能、对heap运用错误进行调试、收集heap使用信息。</li></ul>',6),l=[r];function n(h,d){return a(),i("div",null,l)}const f=e(c,[["render",n],["__file","effective-cpp-50.html.vue"]]);export{f as default};
