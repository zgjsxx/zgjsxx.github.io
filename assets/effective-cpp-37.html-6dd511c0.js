const e=JSON.parse('{"key":"v-39970de0","path":"/posts/Program_language/cpp/effective-cpp/effective-cpp-37.html","title":"effective c++ 37 不重新定义继承而来的缺省参数值","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 37 不重新定义继承而来的缺省参数值 本节主要讲解了和虚函数中的默认参数有关的话题。本节的话题在日常工作中使用到的频率不是很高。下面通过例子来具体说明。 分析 我们有一个Shape类，其中含有一个名为draw的虚函数，draw含有一个入参color， 其默认参数为Red。目前我们有两个派生类Rectangle和Circle，其中Rectangle的draw方法的入参设置了color的默认参数为Green， 而Circle的默认参数没有指定参数的默认值。 我们新建了Rectangle和Circle的对象，并使用Shape的指针指向它们，并调用draw方法，并且不指定参数，那么color值将会是多少呢？","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp/effective-cpp-37.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 37 不重新定义继承而来的缺省参数值"}],["meta",{"property":"og:description","content":"effective c++ 37 不重新定义继承而来的缺省参数值 本节主要讲解了和虚函数中的默认参数有关的话题。本节的话题在日常工作中使用到的频率不是很高。下面通过例子来具体说明。 分析 我们有一个Shape类，其中含有一个名为draw的虚函数，draw含有一个入参color， 其默认参数为Red。目前我们有两个派生类Rectangle和Circle，其中Rectangle的draw方法的入参设置了color的默认参数为Green， 而Circle的默认参数没有指定参数的默认值。 我们新建了Rectangle和Circle的对象，并使用Shape的指针指向它们，并调用draw方法，并且不指定参数，那么color值将会是多少呢？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-16T02:43:01.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-16T02:43:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 37 不重新定义继承而来的缺省参数值\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-16T02:43:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683788312000,"updatedTime":1684204981000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":3}]},"readingTime":{"minutes":1.47,"words":441},"filePathRelative":"posts/Program_language/cpp/effective-cpp/effective-cpp-37.md","localizedDate":"2023年5月11日","excerpt":"<h1> effective c++ 37 不重新定义继承而来的缺省参数值</h1>\\n<p>本节主要讲解了和虚函数中的默认参数有关的话题。本节的话题在日常工作中使用到的频率不是很高。下面通过例子来具体说明。</p>\\n<h2> 分析</h2>\\n<p>我们有一个Shape类，其中含有一个名为draw的虚函数，draw含有一个入参color， 其默认参数为Red。目前我们有两个派生类Rectangle和Circle，其中Rectangle的draw方法的入参设置了color的默认参数为Green， 而Circle的默认参数没有指定参数的默认值。</p>\\n<p>我们新建了Rectangle和Circle的对象，并使用Shape的指针指向它们，并调用draw方法，并且不指定参数，那么color值将会是多少呢？</p>","autoDesc":true}');export{e as data};
