const e=JSON.parse('{"key":"v-a2e9bcd2","path":"/posts/Program_language/cpp/effective-cpp-32.html","title":"effective c++ 32 确定你的public继承塑模出is-a的关系","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective c++读书笔记"],"description":"effective c++ 32 确定你的public继承塑模出is-a的关系 本节主要分析了public继承的现实含义，public继承中，每个Derived类的对象都是Base类的对象。 Base比Derived表现出更为一般化的概念，而Derived比Base表现出更为特殊化的概念。 分析 这里举了两个例子， 每个Student一定都是一个Person： class Person { }; class Student : public Person { };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-cpp-32.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective c++ 32 确定你的public继承塑模出is-a的关系"}],["meta",{"property":"og:description","content":"effective c++ 32 确定你的public继承塑模出is-a的关系 本节主要分析了public继承的现实含义，public继承中，每个Derived类的对象都是Base类的对象。 Base比Derived表现出更为一般化的概念，而Derived比Base表现出更为特殊化的概念。 分析 这里举了两个例子， 每个Student一定都是一个Person： class Person { }; class Student : public Person { };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-10T01:49:13.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective c++读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-10T01:49:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective c++ 32 确定你的public继承塑模出is-a的关系\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-10T01:49:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683524744000,"updatedTime":1683683353000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":0.74,"words":221},"filePathRelative":"posts/Program_language/cpp/effective-cpp-32.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective c++ 32 确定你的public继承塑模出is-a的关系</h1>\\n<p>本节主要分析了public继承的现实含义，public继承中，每个Derived类的对象都是Base类的对象。 Base比Derived表现出更为一般化的概念，而Derived比Base表现出更为特殊化的概念。</p>\\n<h2> 分析</h2>\\n<p>这里举了两个例子， 每个Student一定都是一个Person：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Student</span> <span class=\\"token operator\\">:</span> <span class=\\"token base-clause\\"><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Person</span></span>\\n<span class=\\"token punctuation\\">{</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
