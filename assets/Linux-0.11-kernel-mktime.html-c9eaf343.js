import{_ as n,V as s,W as a,a0 as e}from"./framework-c954d91f.js";const t={},p=e(`<h1 id="linux-0-11-kernel目录mktime-c详解" tabindex="-1"><a class="header-anchor" href="#linux-0-11-kernel目录mktime-c详解" aria-hidden="true">#</a> Linux-0.11 kernel目录mktime.c详解</h1><p>该模块较为简单，仅有一个函数，仅在内核中使用，计算系统开机时的滴答数。</p><h2 id="kernel-mktime" tabindex="-1"><a class="header-anchor" href="#kernel-mktime" aria-hidden="true">#</a> kernel_mktime</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">long</span> <span class="token function">kernel_mktime</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">tm</span> <span class="token operator">*</span> tm<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该函数的作用是计算1970年以来的秒数。 其在time_init函数中调用，用于获取开机的时间。</p><p>首先计算开机时距离1970年有多少年。如果tm_year大于70， 说明年份在区间[1970-1999]中。如果tm_year小于70，说明年份在区间[2000， 2069]。依次进行判断计算出距离1970的年数year。在计算一年的秒数时使用的是365天，因此还需要加上run年的天数， 即DAY*((year+1)/4)。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">long</span> res<span class="token punctuation">;</span>
<span class="token keyword">int</span> year<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>tm<span class="token operator">-&gt;</span>tm_year <span class="token operator">&gt;=</span> <span class="token number">70</span><span class="token punctuation">)</span> 
  year <span class="token operator">=</span> tm<span class="token operator">-&gt;</span>tm_year <span class="token operator">-</span> <span class="token number">70</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
  year <span class="token operator">=</span> tm<span class="token operator">-&gt;</span>tm_year <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">-</span><span class="token number">70</span><span class="token punctuation">;</span> 
  res <span class="token operator">=</span> YEAR<span class="token operator">*</span>year <span class="token operator">+</span> DAY<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着计算出当前年份的月份所占有的秒数。同时由于month数组的2月计算的是29天，因此如果当年不是闰年，需要减去一天。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>res <span class="token operator">+=</span> month<span class="token punctuation">[</span>tm<span class="token operator">-&gt;</span>tm_mon<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>tm<span class="token operator">-&gt;</span>tm_mon<span class="token operator">&gt;</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  res <span class="token operator">-=</span> DAY<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后一步就是加上开机时的(日， 小时， 秒)对应的秒数。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>res <span class="token operator">+=</span> DAY<span class="token operator">*</span><span class="token punctuation">(</span>tm<span class="token operator">-&gt;</span>tm_mday<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
res <span class="token operator">+=</span> HOUR<span class="token operator">*</span>tm<span class="token operator">-&gt;</span>tm_hour<span class="token punctuation">;</span>
res <span class="token operator">+=</span> MINUTE<span class="token operator">*</span>tm<span class="token operator">-&gt;</span>tm_min<span class="token punctuation">;</span>
res <span class="token operator">+=</span> tm<span class="token operator">-&gt;</span>tm_sec<span class="token punctuation">;</span>
<span class="token keyword">return</span> res<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[p];function c(r,l){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","Linux-0.11-kernel-mktime.html.vue"]]);export{u as default};
