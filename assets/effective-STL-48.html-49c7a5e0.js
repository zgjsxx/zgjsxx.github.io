const e=JSON.parse('{"key":"v-0dbb48fa","path":"/posts/Program_language/cpp/effective-STL-48.html","title":"effective STL-48 总是include适当的头文件","lang":"zh-CN","frontmatter":{"category":["C++"],"tag":["C++","effective STL读书笔记"],"description":"effective STL-48 总是include适当的头文件 有的时候即使漏掉了必要的头文件，程序同样可以编译，这是因为C++标准并没有规定标准库中头文件之间的相互包含关系。这就导致了某个头文件可能会包含其他头文件。 例如，A平台的STL版本中&lt;vector&gt;可能包含了&lt;string&gt;,那么下面的代码在A平台就是可以编译通过的。 #include &lt;vector&gt; std::vector&lt;std::string&gt; a;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/cpp/effective-STL-48.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"effective STL-48 总是include适当的头文件"}],["meta",{"property":"og:description","content":"effective STL-48 总是include适当的头文件 有的时候即使漏掉了必要的头文件，程序同样可以编译，这是因为C++标准并没有规定标准库中头文件之间的相互包含关系。这就导致了某个头文件可能会包含其他头文件。 例如，A平台的STL版本中&lt;vector&gt;可能包含了&lt;string&gt;,那么下面的代码在A平台就是可以编译通过的。 #include &lt;vector&gt; std::vector&lt;std::string&gt; a;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T06:52:26.000Z"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"effective STL读书笔记"}],["meta",{"property":"article:modified_time","content":"2023-05-08T06:52:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"effective STL-48 总是include适当的头文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-08T06:52:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1683528219000,"updatedTime":1683528746000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":1.25,"words":376},"filePathRelative":"posts/Program_language/cpp/effective-STL-48.md","localizedDate":"2023年5月8日","excerpt":"<h1> effective STL-48 总是include适当的头文件</h1>\\n<p>有的时候即使漏掉了必要的头文件，程序同样可以编译，这是因为C++标准并没有规定标准库中头文件之间的相互包含关系。这就导致了某个头文件可能会包含其他头文件。</p>\\n<p>例如，A平台的STL版本中<code>&lt;vector&gt;</code>可能包含了<code>&lt;string&gt;</code>,那么下面的代码在A平台就是可以编译通过的。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;vector&gt;</span></span>\\nstd<span class=\\"token double-colon punctuation\\">::</span>vector<span class=\\"token operator\\">&lt;</span>std<span class=\\"token double-colon punctuation\\">::</span>string<span class=\\"token operator\\">&gt;</span> a<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
