const t=JSON.parse('{"key":"v-a99439c0","path":"/posts/Program_language/C__/cpp11_thread.html","title":"c++11中的多线程std::thread","lang":"zh-CN","frontmatter":{"category":["C++"],"description":"c++11中的多线程std::thread c++11中thread和pthread相比有如下的一些优点： 跨平台，pthread只能用在POSIX系统上 简单，易用，传参方便，过去pthread需要将数据传递给void*指针， c++11直接像函数传参一样传递参数 提供了std::future,std::promise等高级功能 风格上更加像c++， pthread更像c的。 和pthread相比， 也有一些缺点： 没有实现读写锁 pthread提供的功能更加多，例如设置CPU的亲和性","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/C__/cpp11_thread.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"c++11中的多线程std::thread"}],["meta",{"property":"og:description","content":"c++11中的多线程std::thread c++11中thread和pthread相比有如下的一些优点： 跨平台，pthread只能用在POSIX系统上 简单，易用，传参方便，过去pthread需要将数据传递给void*指针， c++11直接像函数传参一样传递参数 提供了std::future,std::promise等高级功能 风格上更加像c++， pthread更像c的。 和pthread相比， 也有一些缺点： 没有实现读写锁 pthread提供的功能更加多，例如设置CPU的亲和性"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T06:27:48.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-24T06:27:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++11中的多线程std::thread\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T06:27:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"使用普通函数创建线程","slug":"使用普通函数创建线程","link":"#使用普通函数创建线程","children":[]},{"level":2,"title":"使用仿函数创建线程","slug":"使用仿函数创建线程","link":"#使用仿函数创建线程","children":[]},{"level":2,"title":"使用lambda创建线程","slug":"使用lambda创建线程","link":"#使用lambda创建线程","children":[]},{"level":2,"title":"使用detach进行分离线程","slug":"使用detach进行分离线程","link":"#使用detach进行分离线程","children":[]}],"git":{"createdTime":1682317668000,"updatedTime":1682317668000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":1.13,"words":339},"filePathRelative":"posts/Program_language/C++/cpp11_thread.md","localizedDate":"2023年4月24日","excerpt":"<h1> c++11中的多线程std::thread</h1>\\n<p>c++11中thread和pthread相比有如下的一些优点：</p>\\n<ul>\\n<li>跨平台，pthread只能用在POSIX系统上</li>\\n<li>简单，易用，传参方便，过去pthread需要将数据传递给void*指针， c++11直接像函数传参一样传递参数</li>\\n<li>提供了std::future,std::promise等高级功能</li>\\n<li>风格上更加像c++， pthread更像c的。</li>\\n</ul>\\n<p>和pthread相比， 也有一些缺点：</p>\\n<ul>\\n<li>没有实现读写锁</li>\\n<li>pthread提供的功能更加多，例如设置CPU的亲和性</li>\\n</ul>","autoDesc":true}');export{t as data};
