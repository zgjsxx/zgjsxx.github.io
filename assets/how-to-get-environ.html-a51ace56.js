const n=JSON.parse('{"key":"v-7911f9e9","path":"/posts/Linux/application-dev/how-to-get-environ.html","title":"c/c++如何通过代码获取到环境变量","lang":"zh-CN","frontmatter":{"category":["Linux"],"description":"c/c++如何通过代码获取到环境变量 方法1：通过main函数的参数 #include &lt;stdio.h&gt; int main(int argc, char* argv[], char* env[]) { for(int i = 0; env[i]; i++) { printf(\\"env[%d]: %s\\\\n\\", i, env[i]); } }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Linux/application-dev/how-to-get-environ.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"c/c++如何通过代码获取到环境变量"}],["meta",{"property":"og:description","content":"c/c++如何通过代码获取到环境变量 方法1：通过main函数的参数 #include &lt;stdio.h&gt; int main(int argc, char* argv[], char* env[]) { for(int i = 0; env[i]; i++) { printf(\\"env[%d]: %s\\\\n\\", i, env[i]); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-18T06:37:05.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-18T06:37:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c/c++如何通过代码获取到环境变量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-18T06:37:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"方法1：通过main函数的参数","slug":"方法1-通过main函数的参数","link":"#方法1-通过main函数的参数","children":[]},{"level":2,"title":"方法2： 使用getenv获取指定的环境变量","slug":"方法2-使用getenv获取指定的环境变量","link":"#方法2-使用getenv获取指定的环境变量","children":[]},{"level":2,"title":"方法3： 通过第三方变量 environ 获取","slug":"方法3-通过第三方变量-environ-获取","link":"#方法3-通过第三方变量-environ-获取","children":[]}],"git":{"createdTime":1681799825000,"updatedTime":1681799825000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":1}]},"readingTime":{"minutes":0.44,"words":133},"filePathRelative":"posts/Linux/application-dev/how-to-get-environ.md","localizedDate":"2023年4月18日","excerpt":"<h1> c/c++如何通过代码获取到环境变量</h1>\\n<h2> 方法1：通过main函数的参数</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> argc<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">char</span><span class=\\"token operator\\">*</span> argv<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">char</span><span class=\\"token operator\\">*</span> env<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> env<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"env[%d]: %s\\\\n\\"</span><span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">,</span> env<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
