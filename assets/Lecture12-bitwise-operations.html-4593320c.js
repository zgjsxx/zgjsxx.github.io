const e=JSON.parse('{"key":"v-5b5c8300","path":"/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture12-bitwise-operations.html","title":"第十二讲：按位运算","lang":"zh-CN","frontmatter":{"category":["汇编语言"],"description":"第十二讲：按位运算 按位运算 位运算在汇编级别变得更加重要。我们已经学习了XOR（异或），这里我们将学习其他操作or、and、not、andn（与非），以及位移和旋转操作。除了这些在 C/C++ 按位运算符中具有直接类似物的操作之外，汇编还支持 C/C++ 没有的其他按位操作。最后，test操作是按位比较运算符，用于构建取决于某些位的状态的条件分支。 位运算：AND、OR、NOT、AND-NOT","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Program_language/Assembly_language/fullerton_CSci241/Lecture12-bitwise-operations.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"第十二讲：按位运算"}],["meta",{"property":"og:description","content":"第十二讲：按位运算 按位运算 位运算在汇编级别变得更加重要。我们已经学习了XOR（异或），这里我们将学习其他操作or、and、not、andn（与非），以及位移和旋转操作。除了这些在 C/C++ 按位运算符中具有直接类似物的操作之外，汇编还支持 C/C++ 没有的其他按位操作。最后，test操作是按位比较运算符，用于构建取决于某些位的状态的条件分支。 位运算：AND、OR、NOT、AND-NOT"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-06T08:58:08.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-06T08:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第十二讲：按位运算\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-06T08:58:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"按位运算","slug":"按位运算","link":"#按位运算","children":[]}],"git":{"createdTime":1709629879000,"updatedTime":1709715488000,"contributors":[{"name":"zgjsxx","email":"119160524@qq.com","commits":2}]},"readingTime":{"minutes":1.19,"words":356},"filePathRelative":"posts/Program_language/Assembly_language/fullerton_CSci241/Lecture12-bitwise-operations.md","localizedDate":"2024年3月5日","excerpt":"<h1> 第十二讲：按位运算</h1>\\n<h2> 按位运算</h2>\\n<p>位运算在汇编级别变得更加重要。我们已经学习了<code>XOR</code>（异或），这里我们将学习其他操作<code>or</code>、<code>and</code>、<code>not</code>、<code>andn</code>（与非），以及位移和旋转操作。除了这些在 C/C++ 按位运算符中具有直接类似物的操作之外，汇编还支持 C/C++ 没有的其他按位操作。最后，<code>test</code>操作是按位比较运算符，用于构建取决于某些位的状态的条件分支。</p>\\n<p><strong>位运算：AND、OR、NOT、AND-NOT</strong></p>","autoDesc":true}');export{e as data};
